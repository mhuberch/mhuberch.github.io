{"version":3,"file":"src_js_util_predefinedGraphs_ts-374993a7980927a32dee.min.js","mappings":"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","sources":["webpack://graphPlayground/./src/js/util/predefinedGraphs.ts"],"sourcesContent":["\"use strict\";\n\nimport gHelp from './graphHelpers';\nimport help from './genericHelpers';\nimport {EdgeImmutPlain} from \"../classes/GraphImmut/EdgeImmut\";\nimport {NodeImmutPlain} from \"../classes/GraphImmut/NodeImmut\";\n\nexport interface GraphPlain {\n    edges: EdgeImmutPlain[];\n    nodes: NodeImmutPlain[];\n    directed?: boolean;\n    weighted?: boolean\n}\n\nconst petersenEdges = help.deepFreeze([\n    {from: 1, to: 2, weight: 1},\n    {from: 2, to: 3, weight: 1},\n    {from: 3, to: 4, weight: 1},\n    {from: 4, to: 5, weight: 1},\n    {from: 5, to: 1, weight: 1},\n\n    {from: 6, to: 8, weight: 1},\n    {from: 7, to: 9, weight: 1},\n    {from: 7, to: 10, weight: 1},\n    {from: 8, to: 10, weight: 1},\n    {from: 9, to: 6, weight: 1},\n\n    {from: 1, to: 6, weight: 1},\n    {from: 2, to: 7, weight: 1},\n    {from: 3, to: 8, weight: 1},\n    {from: 4, to: 9, weight: 1},\n    {from: 5, to: 10, weight: 1}\n]) as EdgeImmutPlain[];\n\nconst konigsbergEdges = help.deepFreeze([\n    {from: 1, to: 2, weight: 1},\n    {from: 2, to: 3, weight: 1},\n    {from: 2, to: 4, weight: 1},\n    {from: 3, to: 4, weight: 1},\n    {from: 3, to: 4, weight: 1},\n    {from: 4, to: 1, weight: 1},\n    {from: 4, to: 1, weight: 1},\n]) as EdgeImmutPlain[];\n\nconst graphG1Edges = help.deepFreeze([\n    {from: 0, to: 1, weight: 1},\n    {from: 0, to: 2, weight: 1},\n    {from: 0, to: 3, weight: 1},\n    {from: 1, to: 2, weight: 1},\n    {from: 1, to: 4, weight: 1},\n    {from: 2, to: 5, weight: 1},\n    {from: 3, to: 4, weight: 1},\n    {from: 3, to: 5, weight: 1},\n    {from: 4, to: 5, weight: 1}\n]) as EdgeImmutPlain[];\n\nconst completeGraph = (V: number): Readonly<GraphPlain> => {\n    const edges = [];\n    const nodes = [];\n\n    for (let i = 0; i < V; i++) {\n        nodes.push({id: i, label: gHelp.generateLabelFromNumber(i)});\n        for (let j = i + 1; j < V; j++) {\n            edges.push({from: i, to: j});\n        }\n    }\n\n    return help.deepFreeze({nodes, edges, directed: false, weighted: false} as GraphPlain);\n};\n\nconst hypercubeGraph = (D: number): Readonly<GraphPlain> => {\n    const edges: EdgeImmutPlain[] = [];\n    const nodes: NodeImmutPlain[] = [];\n\n    const numNodes = Math.pow(2, D);\n\n    const pad = (str: string, max: number): string => {\n        return str.length < max ? pad(\"0\" + str, max) : str;\n    };\n\n    const generateDifferByOne = (input: number, numBits: number) => {\n        const inputBits = pad((input).toString(2), numBits).split(\"\").reverse();\n        const allDiffer = [];\n\n        // 1 bit difference from input, increasing order, none less than input\n        for (let b = 0; b < numBits; b++) {\n            if (inputBits[b] === \"0\") {\n                const newNum = inputBits.slice();\n                newNum[b] = \"1\";\n                newNum.reverse();\n                allDiffer.push(parseInt(newNum.join(\"\"), 2));\n            }\n        }\n\n        return allDiffer;\n    };\n\n    for (let i = 0; i < numNodes; i++) {\n        nodes.push({id: i, label: pad(i.toString(2), D), color: \"white\"});\n        generateDifferByOne(i, D).forEach((j) => {\n            edges.push({from: i, to: j, weight: 1});\n        });\n    }\n\n    return help.deepFreeze({nodes, edges, directed: false, weighted: false} as GraphPlain);\n};\n\nconst newCustomGraph = (V: number, directed = false, weighted = false): Readonly<GraphPlain> => {\n    const nodes = [];\n    for (let i = 0; i < V; i++) {\n        nodes.push({id: i, label: gHelp.generateLabelFromNumber(i), color: \"white\"});\n    }\n\n    return help.deepFreeze({nodes, edges: [], directed, weighted} as GraphPlain);\n};\n\nexport default class PredefinedGraphs {\n    public static _complete = completeGraph;\n    public static _custom = newCustomGraph;\n    public static _hypercube = hypercubeGraph;\n\n    public static Petersen(): Readonly<GraphPlain> {\n        return help.deepFreeze({\n            edges: petersenEdges,\n            nodes: gHelp.interpolateNodesFromEdges(petersenEdges),\n            directed: false,\n            weighted: false,\n        });\n    }\n\n    public static Konigsberg(): Readonly<GraphPlain> {\n        return help.deepFreeze({\n            edges: konigsbergEdges,\n            nodes: gHelp.interpolateNodesFromEdges(konigsbergEdges),\n            directed: false,\n            weighted: false,\n        });\n    }\n\n    public static GraphG1(): Readonly<GraphPlain> {\n        return help.deepFreeze({\n            edges: graphG1Edges,\n            nodes: gHelp.interpolateNodesFromEdges(graphG1Edges),\n            directed: false,\n            weighted: false,\n        });\n    }\n\n    public static Complete(): void {\n        help.showFormModal(($modal, vals) => {\n                $modal.modal(\"hide\");\n                window.main.setData(completeGraph(vals[0]), false, true, true);\n            },\n            \"Configurable Complete Graph\", \"Go\",\n            [{\n                type: \"numeric\", initialValue: 5, label: \"Number of Vertices\", validationFunc: (v) => {\n                    return v >= 0 || \"Number of vertices must be non-negative\";\n                }\n            }]);\n    }\n\n    public static Hypercube(): void {\n        help.showFormModal(($modal, vals) => {\n                $modal.modal(\"hide\");\n                window.main.setData(hypercubeGraph(vals[0]), false, true, true);\n            },\n            \"Configurable Hypercube Graph\", \"Go\",\n            [{\n                type: \"numeric\", initialValue: 3, label: \"Number of Dimensions\", validationFunc: (v) => {\n                    return v >= 0 || \"Number of dimensions must be non-negative\";\n                }\n            }]);\n    }\n\n    public static Custom(): void {\n        help.showFormModal(($modal, vals) => {\n                $modal.modal(\"hide\");\n                window.main.setData(newCustomGraph(vals[0], false, false), false, true, true);\n            },\n            \"Configurable Graph\", \"Go\",\n            [\n                {\n                    type: \"numeric\", initialValue: 0, label: \"Number of Vertices\", validationFunc: (v) => {\n                        return v >= 0 || \"Number of vertices must be non-negative\";\n                    }\n                },\n                //{type: \"checkbox\", initialValue: false, label: \"Directed\"},\n                //{type: \"checkbox\", initialValue: false, label: \"Weighted\"},\n            ]);\n    }\n}\n"],"names":[],"sourceRoot":""}