{"version":3,"file":"346-a83a13e4ce98c830818e.min.js","mappings":"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","sources":["webpack://graphPlayground/./src/js/dataImportExport.ts"],"sourcesContent":["\"use strict\";\n\nimport help from './util/genericHelpers';\nimport GraphImmut from './classes/GraphImmut/GraphImmut';\nimport { EdgeImmutPlain } from \"./classes/GraphImmut/EdgeImmut\";\nimport { NodeImmutPlain } from \"./classes/GraphImmut/NodeImmut\";\nimport GraphState from \"./graphState\";\nimport { GraphPlain } from \"./util/predefinedGraphs\";\nimport * as languages from \"./languages\";\n\nconst exportedTextSelector = \"exportedText\";\n\nconst self = {\n    importByString: (string: string, format: string): void => {\n        if (format.toLowerCase() === \"json\") {\n            try {\n                const n = JSON.parse(string);\n                if (\"nodes\" in n && \"edges\" in n) {\n                    window.network.setData({}); // Clear out the existing network in order to import the proper\n                    // locations\n                    window.main.setData(n, false, true, false);\n                }\n                else {\n                    help.showSimpleModal(languages.current.DataImportError,\n                        `<p>${languages.current.DataImportErrorText}</p>`);\n                }\n            }\n            catch (err) {\n                help.showSimpleModal(languages.current.JsonParseError, `<p>${languages.current.JsonParseErrorText}</p><pre>${err}</pre>`);\n            }\n        }\n        else if (format.toLowerCase() === \"dimacs\") {\n            const lines = string.split(/\\r?\\n/);\n            let graph: GraphImmut | null = null;\n            let error = false;\n            lines.forEach((l) => {\n                const vals = l.split(/\\s+/);\n                if (vals[0].toLowerCase() === \"p\") {\n                    if (vals[1].toLowerCase() !== \"edge\") {\n                        help.showSimpleModal(languages.current.DimacsParseError,\n                            `<p>${help.htmlEncode(languages.current.DimacsParseErrorText)}</p>`);\n                        error = true;\n                        return;\n                    }\n                    graph = new GraphImmut(parseInt(vals[2]));\n                }\n                else if (vals[0].toLowerCase() === \"e\" && graph !== null) {\n                    graph = graph.addEdge(parseInt(vals[1]) - 1, parseInt(vals[2]) - 1);\n                }\n            });\n\n            if (graph === null && !error) {\n                help.showSimpleModal(languages.current.DimacsParseError, `<p>${languages.current.DimacsParseErrorNoProgram}</p>`);\n                error = true;\n            }\n\n            if (!error) {\n                const d: GraphPlain = GraphState.getGraphData(graph!);\n                d.nodes.forEach((v) => {\n                    v.label = v.id.toString();\n                });\n                window.main.setData(d, false, true, true);\n            }\n        }\n        else {\n            help.showSimpleModal(languages.current.UnrecognizedInputError, `<p>${languages.current.UnrecognizedInputError}.</p>`);\n        }\n    },\n\n    makeImportTextModal: (): void => {\n        help.showFormModal(($modal, values) => {\n            $modal.modal(\"hide\");\n            self.importByString(values[0], values[1]);\n        }, languages.current.ImportGraphFromText, languages.current.Import, languages.current.Cancel,\n            [{ type: \"textarea\", label: languages.current.ImportText, extraAttrs: { style: \"height: 20vh; min-height:400px;\" } },\n            { type: \"select\", label: languages.current.Format, optionValues: [\"json\", \"dimacs\"], optionText: [\"JSON\", \"DIMACS\"] }\n            ]);\n    },\n\n    makeImportFileModal: (): void => {\n        help.showFormModal(($modal, values) => {\n            $modal.modal(\"hide\");\n\n            const files = values[0];\n            if (files.length === 1) {\n                const file = files[0];\n                const reader = new FileReader();\n                reader.onload = function (event: any) {\n                    self.importByString(event.target.result, help.getFileExtension(file.name));\n                };\n\n                reader.readAsText(file);\n            }\n        }, languages.current.ImportGraphFromFile, languages.current.Import, languages.current.Cancel,\n            [{\n                type: \"file\", label: languages.current.UploadFile, validationFunc: (val, $files) => {\n                    const files = ($files.get(0) as any).files;\n                    if (files.length >= 1) {\n                        return true;\n                    }\n                    return languages.current.MustChooseFileError;\n                }\n            }]);\n    },\n\n    makeImportGraphExercise: (exercisegraph: number): void => {\n        \n        const gstrings = [  '{\"nodes\":[{\"id\":0,\"label\":\"A\",\"x\":0,\"y\":0},{\"id\":1,\"label\":\"B\",\"x\":-70,\"y\":-70},{\"id\":2,\"label\":\"C\",\"x\":-70,\"y\":70},{\"id\":3,\"label\":\"D\",\"x\":50,\"y\":0},{\"id\":4,\"label\":\"E\",\"x\":120,\"y\":-70},{\"id\":5,\"label\":\"F\",\"x\":120,\"y\":70}],\"edges\":[{\"from\":0,\"to\":1,\"weight\":1},{\"from\":0,\"to\":2,\"weight\":1},{\"from\":0,\"to\":3,\"weight\":1},{\"from\":1,\"to\":2,\"weight\":1},{\"from\":1,\"to\":4,\"weight\":1},{\"from\":2,\"to\":5,\"weight\":1},{\"from\":3,\"to\":4,\"weight\":1},{\"from\":3,\"to\":5,\"weight\":1},{\"from\":4,\"to\":5,\"weight\":1}],\"directed\":false,\"weighted\":false}',\n                            '{\"nodes\":[{\"id\":0,\"label\":\"A\",\"x\":0,\"y\":-70},{\"id\":1,\"label\":\"B\",\"x\":200,\"y\":-70},{\"id\":2,\"label\":\"C\",\"x\":200,\"y\":70},{\"id\":3,\"label\":\"D\",\"x\":0,\"y\":70},{\"id\":4,\"label\":\"E\",\"x\":-70,\"y\":0},{\"id\":5,\"label\":\"F\",\"x\":70,\"y\":0},{\"id\":6,\"label\":\"G\",\"x\":130,\"y\":0},{\"id\":7,\"label\":\"H\",\"x\":270,\"y\":0}],\"edges\":[{\"from\":0,\"to\":1,\"weight\":1},{\"from\":0,\"to\":4,\"weight\":1},{\"from\":4,\"to\":3,\"weight\":1},{\"from\":3,\"to\":5,\"weight\":1},{\"from\":5,\"to\":0,\"weight\":1},{\"from\":4,\"to\":5,\"weight\":1},{\"from\":3,\"to\":2,\"weight\":1},{\"from\":6,\"to\":2,\"weight\":1},{\"from\":6,\"to\":1,\"weight\":1},{\"from\":1,\"to\":7,\"weight\":1},{\"from\":7,\"to\":2,\"weight\":1},{\"from\":1,\"to\":2,\"weight\":1}],\"directed\":false,\"weighted\":false}',\n                            '{\"nodes\":[{\"id\":0,\"label\":\"A\",\"x\":0,\"y\":0},{\"id\":1,\"label\":\"B\",\"x\":-70,\"y\":-70},{\"id\":2,\"label\":\"C\",\"x\":0,\"y\":-110},{\"id\":3,\"label\":\"D\",\"x\":70,\"y\":-70},{\"id\":4,\"label\":\"E\",\"x\":70,\"y\":70},{\"id\":5,\"label\":\"F\",\"x\":-70,\"y\":70},{\"id\":6,\"label\":\"G\",\"x\":0,\"y\":-170}],\"edges\":[{\"from\":5,\"to\":4,\"weight\":1},{\"from\":5,\"to\":0,\"weight\":1},{\"from\":0,\"to\":3,\"weight\":1},{\"from\":3,\"to\":1,\"weight\":1},{\"from\":1,\"to\":5,\"weight\":1},{\"from\":1,\"to\":0,\"weight\":1},{\"from\":0,\"to\":4,\"weight\":1},{\"from\":4,\"to\":3,\"weight\":1},{\"from\":1,\"to\":2,\"weight\":1},{\"from\":2,\"to\":3,\"weight\":1},{\"from\":1,\"to\":6,\"weight\":1},{\"from\":6,\"to\":3,\"weight\":1}],\"directed\":false,\"weighted\":false}',\n                            '{\"nodes\":[{\"id\":0,\"label\":\"A\",\"x\":-50,\"y\":0},{\"id\":1,\"label\":\"B\",\"x\":50,\"y\":0},{\"id\":2,\"label\":\"C\",\"x\":-100,\"y\":70},{\"id\":3,\"label\":\"D\",\"x\":100,\"y\":70},{\"id\":4,\"label\":\"E\",\"x\":-100,\"y\":-70},{\"id\":5,\"label\":\"F\",\"x\":0,\"y\":-70},{\"id\":6,\"label\":\"G\",\"x\":100,\"y\":-70}],\"edges\":[{\"from\":2,\"to\":3,\"weight\":1},{\"from\":4,\"to\":2,\"weight\":1},{\"from\":4,\"to\":5,\"weight\":1},{\"from\":5,\"to\":6,\"weight\":1},{\"from\":6,\"to\":3,\"weight\":1},{\"from\":1,\"to\":3,\"weight\":1},{\"from\":1,\"to\":6,\"weight\":1},{\"from\":2,\"to\":0,\"weight\":1},{\"from\":4,\"to\":0,\"weight\":1},{\"from\":0,\"to\":5,\"weight\":1},{\"from\":5,\"to\":1,\"weight\":1},{\"from\":0,\"to\":6,\"weight\":1},{\"from\":4,\"to\":1,\"weight\":1},{\"from\":0,\"to\":3,\"weight\":1},{\"from\":1,\"to\":2,\"weight\":1}],\"directed\":false,\"weighted\":false}',\n                            '{\"nodes\":[{\"id\":0,\"label\":\"A\",\"x\":-100,\"y\":-200},{\"id\":1,\"label\":\"B\",\"x\":-100,\"y\":-100},{\"id\":2,\"label\":\"C\",\"x\":0,\"y\":-200},{\"id\":3,\"label\":\"D\",\"x\":0,\"y\":-100}],\"edges\":[{\"from\":0,\"to\":1,\"weight\":1},{\"from\":1,\"to\":3,\"weight\":1},{\"from\":3,\"to\":0,\"weight\":1},{\"from\":1,\"to\":2,\"weight\":1},{\"from\":2,\"to\":0,\"weight\":1}],\"directed\":false,\"weighted\":false}',\n                            '{\"nodes\":[{\"id\":0,\"label\":\"A\",\"x\":-100,\"y\":0},{\"id\":1,\"label\":\"B\",\"x\":0,\"y\":-100},{\"id\":2,\"label\":\"C\",\"x\":100,\"y\":0},{\"id\":3,\"label\":\"D\",\"x\":0,\"y\":100},{\"id\":4,\"label\":\"E\",\"x\":0,\"y\":0}],\"edges\":[{\"from\":0,\"to\":1,\"weight\":1},{\"from\":2,\"to\":3,\"weight\":1},{\"from\":4,\"to\":3,\"weight\":1},{\"from\":4,\"to\":1,\"weight\":1},{\"from\":2,\"to\":1,\"weight\":1},{\"from\":0,\"to\":3,\"weight\":1}],\"directed\":false,\"weighted\":false}',\n                            '{\"nodes\":[{\"id\":0,\"label\":\"A\",\"x\":165,\"y\":-43},{\"id\":1,\"label\":\"B\",\"x\":62,\"y\":14},{\"id\":2,\"label\":\"C\",\"x\":-186,\"y\":8},{\"id\":3,\"label\":\"D\",\"x\":87,\"y\":6},{\"id\":4,\"label\":\"E\",\"x\":134,\"y\":80},{\"id\":5,\"label\":\"F\",\"x\":-86,\"y\":84},{\"id\":6,\"label\":\"G\",\"x\":-113,\"y\":-35},{\"id\":7,\"label\":\"H\",\"x\":-79,\"y\":-87},{\"id\":8,\"label\":\"I\",\"x\":70,\"y\":-106},{\"id\":9,\"label\":\"J\",\"x\":-169,\"y\":158},{\"id\":10,\"label\":\"K\",\"x\":-65,\"y\":130},{\"id\":11,\"label\":\"L\",\"x\":-12,\"y\":-55},{\"id\":12,\"label\":\"M\",\"x\":-21,\"y\":162},{\"id\":13,\"label\":\"N\",\"x\":48,\"y\":-143},{\"id\":14,\"label\":\"O\",\"x\":-162,\"y\":103},{\"id\":15,\"label\":\"P\",\"x\":-48,\"y\":-187},{\"id\":16,\"label\":\"Q\",\"x\":-224,\"y\":-165},{\"id\":17,\"label\":\"R\",\"x\":126,\"y\":184},{\"id\":18,\"label\":\"S\",\"x\":-9,\"y\":49},{\"id\":19,\"label\":\"T\",\"x\":116,\"y\":-147}],\"edges\":[{\"from\":3,\"to\":0,\"weight\":0},{\"from\":3,\"to\":2,\"weight\":0},{\"from\":4,\"to\":0,\"weight\":0},{\"from\":5,\"to\":2,\"weight\":0},{\"from\":6,\"to\":1,\"weight\":0},{\"from\":6,\"to\":2,\"weight\":0},{\"from\":6,\"to\":5,\"weight\":0},{\"from\":7,\"to\":1,\"weight\":0},{\"from\":7,\"to\":2,\"weight\":0},{\"from\":7,\"to\":6,\"weight\":0},{\"from\":8,\"to\":1,\"weight\":0},{\"from\":8,\"to\":3,\"weight\":0},{\"from\":8,\"to\":4,\"weight\":0},{\"from\":8,\"to\":5,\"weight\":0},{\"from\":8,\"to\":6,\"weight\":0},{\"from\":8,\"to\":7,\"weight\":0},{\"from\":9,\"to\":7,\"weight\":0},{\"from\":10,\"to\":1,\"weight\":0},{\"from\":10,\"to\":2,\"weight\":0},{\"from\":10,\"to\":3,\"weight\":0},{\"from\":10,\"to\":4,\"weight\":0},{\"from\":10,\"to\":9,\"weight\":0},{\"from\":11,\"to\":1,\"weight\":0},{\"from\":11,\"to\":5,\"weight\":0},{\"from\":11,\"to\":7,\"weight\":0},{\"from\":11,\"to\":10,\"weight\":0},{\"from\":12,\"to\":4,\"weight\":0},{\"from\":12,\"to\":5,\"weight\":0},{\"from\":12,\"to\":6,\"weight\":0},{\"from\":12,\"to\":9,\"weight\":0},{\"from\":12,\"to\":10,\"weight\":0},{\"from\":12,\"to\":11,\"weight\":0},{\"from\":13,\"to\":0,\"weight\":0},{\"from\":13,\"to\":1,\"weight\":0},{\"from\":13,\"to\":3,\"weight\":0},{\"from\":13,\"to\":8,\"weight\":0},{\"from\":14,\"to\":1,\"weight\":0},{\"from\":14,\"to\":2,\"weight\":0},{\"from\":14,\"to\":3,\"weight\":0},{\"from\":14,\"to\":6,\"weight\":0},{\"from\":14,\"to\":7,\"weight\":0},{\"from\":14,\"to\":10,\"weight\":0},{\"from\":15,\"to\":2,\"weight\":0},{\"from\":15,\"to\":6,\"weight\":0},{\"from\":15,\"to\":8,\"weight\":0},{\"from\":15,\"to\":11,\"weight\":0},{\"from\":15,\"to\":13,\"weight\":0},{\"from\":16,\"to\":2,\"weight\":0},{\"from\":16,\"to\":5,\"weight\":0},{\"from\":16,\"to\":6,\"weight\":0},{\"from\":16,\"to\":7,\"weight\":0},{\"from\":16,\"to\":13,\"weight\":0},{\"from\":17,\"to\":0,\"weight\":0},{\"from\":17,\"to\":3,\"weight\":0},{\"from\":17,\"to\":5,\"weight\":0},{\"from\":17,\"to\":10,\"weight\":0},{\"from\":17,\"to\":12,\"weight\":0},{\"from\":18,\"to\":4,\"weight\":0},{\"from\":18,\"to\":5,\"weight\":0},{\"from\":18,\"to\":6,\"weight\":0},{\"from\":18,\"to\":7,\"weight\":0},{\"from\":18,\"to\":8,\"weight\":0},{\"from\":18,\"to\":9,\"weight\":0},{\"from\":18,\"to\":12,\"weight\":0},{\"from\":18,\"to\":13,\"weight\":0},{\"from\":18,\"to\":17,\"weight\":0},{\"from\":19,\"to\":0,\"weight\":0},{\"from\":19,\"to\":1,\"weight\":0},{\"from\":19,\"to\":7,\"weight\":0},{\"from\":19,\"to\":8,\"weight\":0},{\"from\":19,\"to\":11,\"weight\":0},{\"from\":19,\"to\":15,\"weight\":0}],\"directed\":false,\"weighted\":false}',\n                            '{\"nodes\":[{\"id\":0,\"label\":\"A\",\"x\":122,\"y\":-37},{\"id\":1,\"label\":\"B\",\"x\":90,\"y\":146},{\"id\":2,\"label\":\"C\",\"x\":-179,\"y\":25},{\"id\":3,\"label\":\"D\",\"x\":-69,\"y\":-118},{\"id\":4,\"label\":\"E\",\"x\":85,\"y\":21},{\"id\":5,\"label\":\"F\",\"x\":-6,\"y\":39},{\"id\":6,\"label\":\"G\",\"x\":26,\"y\":-5},{\"id\":7,\"label\":\"H\",\"x\":15,\"y\":-68},{\"id\":8,\"label\":\"I\",\"x\":-159,\"y\":-113},{\"id\":9,\"label\":\"J\",\"x\":-123,\"y\":-43},{\"id\":10,\"label\":\"K\",\"x\":-75,\"y\":171},{\"id\":11,\"label\":\"L\",\"x\":-59,\"y\":-36},{\"id\":12,\"label\":\"M\",\"x\":66,\"y\":-65},{\"id\":13,\"label\":\"N\",\"x\":-42,\"y\":41},{\"id\":14,\"label\":\"O\",\"x\":-149,\"y\":101}],\"edges\":[{\"from\":1,\"to\":0,\"weight\":0},{\"from\":2,\"to\":1,\"weight\":0},{\"from\":3,\"to\":2,\"weight\":0},{\"from\":4,\"to\":1,\"weight\":0},{\"from\":5,\"to\":0,\"weight\":0},{\"from\":5,\"to\":1,\"weight\":0},{\"from\":5,\"to\":3,\"weight\":0},{\"from\":5,\"to\":4,\"weight\":0},{\"from\":6,\"to\":0,\"weight\":0},{\"from\":6,\"to\":1,\"weight\":0},{\"from\":6,\"to\":2,\"weight\":0},{\"from\":6,\"to\":3,\"weight\":0},{\"from\":6,\"to\":4,\"weight\":0},{\"from\":6,\"to\":5,\"weight\":0},{\"from\":7,\"to\":0,\"weight\":0},{\"from\":7,\"to\":2,\"weight\":0},{\"from\":7,\"to\":4,\"weight\":0},{\"from\":7,\"to\":5,\"weight\":0},{\"from\":7,\"to\":6,\"weight\":0},{\"from\":8,\"to\":3,\"weight\":0},{\"from\":8,\"to\":6,\"weight\":0},{\"from\":8,\"to\":7,\"weight\":0},{\"from\":9,\"to\":2,\"weight\":0},{\"from\":9,\"to\":3,\"weight\":0},{\"from\":9,\"to\":4,\"weight\":0},{\"from\":9,\"to\":5,\"weight\":0},{\"from\":9,\"to\":7,\"weight\":0},{\"from\":9,\"to\":8,\"weight\":0},{\"from\":10,\"to\":1,\"weight\":0},{\"from\":10,\"to\":2,\"weight\":0},{\"from\":10,\"to\":4,\"weight\":0},{\"from\":10,\"to\":5,\"weight\":0},{\"from\":10,\"to\":6,\"weight\":0},{\"from\":10,\"to\":7,\"weight\":0},{\"from\":10,\"to\":9,\"weight\":0},{\"from\":11,\"to\":0,\"weight\":0},{\"from\":11,\"to\":3,\"weight\":0},{\"from\":11,\"to\":4,\"weight\":0},{\"from\":11,\"to\":5,\"weight\":0},{\"from\":11,\"to\":6,\"weight\":0},{\"from\":11,\"to\":7,\"weight\":0},{\"from\":11,\"to\":8,\"weight\":0},{\"from\":11,\"to\":9,\"weight\":0},{\"from\":11,\"to\":10,\"weight\":0},{\"from\":12,\"to\":0,\"weight\":0},{\"from\":12,\"to\":1,\"weight\":0},{\"from\":12,\"to\":2,\"weight\":0},{\"from\":12,\"to\":3,\"weight\":0},{\"from\":12,\"to\":4,\"weight\":0},{\"from\":12,\"to\":6,\"weight\":0},{\"from\":12,\"to\":7,\"weight\":0},{\"from\":12,\"to\":8,\"weight\":0},{\"from\":12,\"to\":9,\"weight\":0},{\"from\":12,\"to\":11,\"weight\":0},{\"from\":13,\"to\":0,\"weight\":0},{\"from\":13,\"to\":1,\"weight\":0},{\"from\":13,\"to\":2,\"weight\":0},{\"from\":13,\"to\":3,\"weight\":0},{\"from\":13,\"to\":4,\"weight\":0},{\"from\":13,\"to\":5,\"weight\":0},{\"from\":13,\"to\":6,\"weight\":0},{\"from\":13,\"to\":7,\"weight\":0},{\"from\":13,\"to\":8,\"weight\":0},{\"from\":13,\"to\":9,\"weight\":0},{\"from\":13,\"to\":10,\"weight\":0},{\"from\":13,\"to\":11,\"weight\":0},{\"from\":14,\"to\":1,\"weight\":0},{\"from\":14,\"to\":2,\"weight\":0},{\"from\":14,\"to\":4,\"weight\":0},{\"from\":14,\"to\":5,\"weight\":0},{\"from\":14,\"to\":6,\"weight\":0},{\"from\":14,\"to\":8,\"weight\":0},{\"from\":14,\"to\":9,\"weight\":0},{\"from\":14,\"to\":10,\"weight\":0},{\"from\":14,\"to\":11,\"weight\":0},{\"from\":14,\"to\":13,\"weight\":0}],\"directed\":false,\"weighted\":false}',\n                            '{\"nodes\":[{\"id\":0,\"label\":\"A\",\"x\":122,\"y\":-37},{\"id\":1,\"label\":\"B\",\"x\":90,\"y\":146},{\"id\":2,\"label\":\"C\",\"x\":-179,\"y\":25},{\"id\":3,\"label\":\"D\",\"x\":-69,\"y\":-118},{\"id\":4,\"label\":\"E\",\"x\":85,\"y\":21},{\"id\":5,\"label\":\"F\",\"x\":-6,\"y\":39},{\"id\":6,\"label\":\"G\",\"x\":26,\"y\":-5},{\"id\":7,\"label\":\"H\",\"x\":15,\"y\":-68},{\"id\":8,\"label\":\"I\",\"x\":-159,\"y\":-113},{\"id\":9,\"label\":\"J\",\"x\":-123,\"y\":-43},{\"id\":10,\"label\":\"K\",\"x\":-75,\"y\":171},{\"id\":11,\"label\":\"L\",\"x\":-59,\"y\":-36},{\"id\":12,\"label\":\"M\",\"x\":66,\"y\":-65},{\"id\":13,\"label\":\"N\",\"x\":-42,\"y\":41},{\"id\":14,\"label\":\"O\",\"x\":-149,\"y\":101}],\"edges\":[{\"from\":1,\"to\":0,\"weight\":0},{\"from\":2,\"to\":1,\"weight\":0},{\"from\":3,\"to\":2,\"weight\":0},{\"from\":4,\"to\":1,\"weight\":0},{\"from\":5,\"to\":0,\"weight\":0},{\"from\":5,\"to\":1,\"weight\":0},{\"from\":5,\"to\":3,\"weight\":0},{\"from\":5,\"to\":4,\"weight\":0},{\"from\":6,\"to\":0,\"weight\":0},{\"from\":6,\"to\":1,\"weight\":0},{\"from\":6,\"to\":2,\"weight\":0},{\"from\":6,\"to\":3,\"weight\":0},{\"from\":6,\"to\":4,\"weight\":0},{\"from\":6,\"to\":5,\"weight\":0},{\"from\":7,\"to\":0,\"weight\":0},{\"from\":7,\"to\":2,\"weight\":0},{\"from\":7,\"to\":4,\"weight\":0},{\"from\":7,\"to\":5,\"weight\":0},{\"from\":7,\"to\":6,\"weight\":0},{\"from\":8,\"to\":3,\"weight\":0},{\"from\":8,\"to\":6,\"weight\":0},{\"from\":8,\"to\":7,\"weight\":0},{\"from\":9,\"to\":2,\"weight\":0},{\"from\":9,\"to\":3,\"weight\":0},{\"from\":9,\"to\":4,\"weight\":0},{\"from\":9,\"to\":5,\"weight\":0},{\"from\":9,\"to\":7,\"weight\":0},{\"from\":9,\"to\":8,\"weight\":0},{\"from\":10,\"to\":1,\"weight\":0},{\"from\":10,\"to\":2,\"weight\":0},{\"from\":10,\"to\":4,\"weight\":0},{\"from\":10,\"to\":5,\"weight\":0},{\"from\":10,\"to\":6,\"weight\":0},{\"from\":10,\"to\":7,\"weight\":0},{\"from\":10,\"to\":9,\"weight\":0},{\"from\":11,\"to\":0,\"weight\":0},{\"from\":11,\"to\":3,\"weight\":0},{\"from\":11,\"to\":4,\"weight\":0},{\"from\":11,\"to\":5,\"weight\":0},{\"from\":11,\"to\":6,\"weight\":0},{\"from\":11,\"to\":7,\"weight\":0},{\"from\":11,\"to\":8,\"weight\":0},{\"from\":11,\"to\":9,\"weight\":0},{\"from\":11,\"to\":10,\"weight\":0},{\"from\":12,\"to\":0,\"weight\":0},{\"from\":12,\"to\":1,\"weight\":0},{\"from\":12,\"to\":2,\"weight\":0},{\"from\":12,\"to\":3,\"weight\":0},{\"from\":12,\"to\":4,\"weight\":0},{\"from\":12,\"to\":6,\"weight\":0},{\"from\":12,\"to\":7,\"weight\":0},{\"from\":12,\"to\":8,\"weight\":0},{\"from\":12,\"to\":9,\"weight\":0},{\"from\":12,\"to\":11,\"weight\":0},{\"from\":13,\"to\":0,\"weight\":0},{\"from\":13,\"to\":1,\"weight\":0},{\"from\":13,\"to\":2,\"weight\":0},{\"from\":13,\"to\":3,\"weight\":0},{\"from\":13,\"to\":4,\"weight\":0},{\"from\":13,\"to\":5,\"weight\":0},{\"from\":13,\"to\":6,\"weight\":0},{\"from\":13,\"to\":7,\"weight\":0},{\"from\":13,\"to\":8,\"weight\":0},{\"from\":13,\"to\":9,\"weight\":0},{\"from\":13,\"to\":10,\"weight\":0},{\"from\":13,\"to\":11,\"weight\":0},{\"from\":14,\"to\":1,\"weight\":0},{\"from\":14,\"to\":2,\"weight\":0},{\"from\":14,\"to\":4,\"weight\":0},{\"from\":14,\"to\":5,\"weight\":0},{\"from\":14,\"to\":6,\"weight\":0},{\"from\":14,\"to\":8,\"weight\":0},{\"from\":14,\"to\":9,\"weight\":0},{\"from\":14,\"to\":10,\"weight\":0},{\"from\":14,\"to\":11,\"weight\":0},{\"from\":14,\"to\":13,\"weight\":0}],\"directed\":false,\"weighted\":false}',\n                            '{\"nodes\":[{\"id\":0,\"label\":\"A\",\"x\":156,\"y\":-73},{\"id\":1,\"label\":\"B\",\"x\":177,\"y\":-30},{\"id\":2,\"label\":\"C\",\"x\":36,\"y\":82},{\"id\":3,\"label\":\"D\",\"x\":-15,\"y\":-150},{\"id\":4,\"label\":\"E\",\"x\":103,\"y\":19},{\"id\":5,\"label\":\"F\",\"x\":197,\"y\":96},{\"id\":6,\"label\":\"G\",\"x\":106,\"y\":-204},{\"id\":7,\"label\":\"H\",\"x\":-140,\"y\":98},{\"id\":8,\"label\":\"I\",\"x\":83,\"y\":176},{\"id\":9,\"label\":\"J\",\"x\":218,\"y\":-23},{\"id\":10,\"label\":\"K\",\"x\":167,\"y\":-188},{\"id\":11,\"label\":\"L\",\"x\":-265,\"y\":189},{\"id\":12,\"label\":\"M\",\"x\":207,\"y\":-111},{\"id\":13,\"label\":\"N\",\"x\":-70,\"y\":152},{\"id\":14,\"label\":\"O\",\"x\":-11,\"y\":130},{\"id\":15,\"label\":\"P\",\"x\":-126,\"y\":112},{\"id\":16,\"label\":\"Q\",\"x\":142,\"y\":135},{\"id\":17,\"label\":\"R\",\"x\":110,\"y\":-94},{\"id\":18,\"label\":\"S\",\"x\":259,\"y\":-58},{\"id\":19,\"label\":\"T\",\"x\":-299,\"y\":-90},{\"id\":20,\"label\":\"U\",\"x\":-168,\"y\":-25},{\"id\":21,\"label\":\"V\",\"x\":274,\"y\":136},{\"id\":22,\"label\":\"W\",\"x\":-47,\"y\":-161},{\"id\":23,\"label\":\"X\",\"x\":-81,\"y\":53},{\"id\":24,\"label\":\"Y\",\"x\":23,\"y\":-65},{\"id\":25,\"label\":\"Z\",\"x\":47,\"y\":134},{\"id\":26,\"label\":\"26\",\"x\":46,\"y\":-55},{\"id\":27,\"label\":\"27\",\"x\":-55,\"y\":-211},{\"id\":28,\"label\":\"28\",\"x\":-130,\"y\":-246},{\"id\":29,\"label\":\"29\",\"x\":125,\"y\":232},{\"id\":30,\"label\":\"30\",\"x\":26,\"y\":96},{\"id\":31,\"label\":\"31\",\"x\":-110,\"y\":-60},{\"id\":32,\"label\":\"32\",\"x\":-110,\"y\":-16},{\"id\":33,\"label\":\"33\",\"x\":103,\"y\":-146},{\"id\":34,\"label\":\"34\",\"x\":37,\"y\":9}],\"edges\":[{\"from\":2,\"to\":1,\"weight\":0},{\"from\":3,\"to\":1,\"weight\":0},{\"from\":4,\"to\":0,\"weight\":0},{\"from\":4,\"to\":3,\"weight\":0},{\"from\":5,\"to\":0,\"weight\":0},{\"from\":5,\"to\":2,\"weight\":0},{\"from\":6,\"to\":4,\"weight\":0},{\"from\":7,\"to\":3,\"weight\":0},{\"from\":8,\"to\":2,\"weight\":0},{\"from\":8,\"to\":4,\"weight\":0},{\"from\":8,\"to\":5,\"weight\":0},{\"from\":9,\"to\":0,\"weight\":0},{\"from\":10,\"to\":3,\"weight\":0},{\"from\":10,\"to\":4,\"weight\":0},{\"from\":10,\"to\":5,\"weight\":0},{\"from\":11,\"to\":7,\"weight\":0},{\"from\":12,\"to\":6,\"weight\":0},{\"from\":14,\"to\":2,\"weight\":0},{\"from\":14,\"to\":7,\"weight\":0},{\"from\":14,\"to\":8,\"weight\":0},{\"from\":14,\"to\":13,\"weight\":0},{\"from\":15,\"to\":2,\"weight\":0},{\"from\":15,\"to\":7,\"weight\":0},{\"from\":15,\"to\":13,\"weight\":0},{\"from\":16,\"to\":4,\"weight\":0},{\"from\":16,\"to\":14,\"weight\":0},{\"from\":17,\"to\":0,\"weight\":0},{\"from\":17,\"to\":1,\"weight\":0},{\"from\":17,\"to\":4,\"weight\":0},{\"from\":17,\"to\":6,\"weight\":0},{\"from\":17,\"to\":10,\"weight\":0},{\"from\":17,\"to\":12,\"weight\":0},{\"from\":17,\"to\":14,\"weight\":0},{\"from\":18,\"to\":0,\"weight\":0},{\"from\":18,\"to\":1,\"weight\":0},{\"from\":18,\"to\":4,\"weight\":0},{\"from\":18,\"to\":5,\"weight\":0},{\"from\":18,\"to\":9,\"weight\":0},{\"from\":18,\"to\":16,\"weight\":0},{\"from\":20,\"to\":2,\"weight\":0},{\"from\":20,\"to\":14,\"weight\":0},{\"from\":20,\"to\":19,\"weight\":0},{\"from\":21,\"to\":1,\"weight\":0},{\"from\":21,\"to\":5,\"weight\":0},{\"from\":21,\"to\":12,\"weight\":0},{\"from\":22,\"to\":0,\"weight\":0},{\"from\":22,\"to\":6,\"weight\":0},{\"from\":22,\"to\":20,\"weight\":0},{\"from\":23,\"to\":2,\"weight\":0},{\"from\":23,\"to\":3,\"weight\":0},{\"from\":23,\"to\":5,\"weight\":0},{\"from\":23,\"to\":7,\"weight\":0},{\"from\":23,\"to\":8,\"weight\":0},{\"from\":23,\"to\":20,\"weight\":0},{\"from\":24,\"to\":1,\"weight\":0},{\"from\":24,\"to\":3,\"weight\":0},{\"from\":24,\"to\":6,\"weight\":0},{\"from\":24,\"to\":12,\"weight\":0},{\"from\":24,\"to\":15,\"weight\":0},{\"from\":24,\"to\":17,\"weight\":0},{\"from\":24,\"to\":20,\"weight\":0},{\"from\":24,\"to\":23,\"weight\":0},{\"from\":25,\"to\":0,\"weight\":0},{\"from\":25,\"to\":2,\"weight\":0},{\"from\":25,\"to\":7,\"weight\":0},{\"from\":25,\"to\":17,\"weight\":0},{\"from\":26,\"to\":0,\"weight\":0},{\"from\":26,\"to\":3,\"weight\":0},{\"from\":26,\"to\":7,\"weight\":0},{\"from\":26,\"to\":9,\"weight\":0},{\"from\":26,\"to\":10,\"weight\":0},{\"from\":26,\"to\":12,\"weight\":0},{\"from\":26,\"to\":14,\"weight\":0},{\"from\":26,\"to\":15,\"weight\":0},{\"from\":26,\"to\":16,\"weight\":0},{\"from\":26,\"to\":17,\"weight\":0},{\"from\":26,\"to\":24,\"weight\":0},{\"from\":27,\"to\":24,\"weight\":0},{\"from\":27,\"to\":26,\"weight\":0},{\"from\":28,\"to\":3,\"weight\":0},{\"from\":28,\"to\":19,\"weight\":0},{\"from\":28,\"to\":22,\"weight\":0},{\"from\":28,\"to\":27,\"weight\":0},{\"from\":29,\"to\":4,\"weight\":0},{\"from\":29,\"to\":13,\"weight\":0},{\"from\":29,\"to\":14,\"weight\":0},{\"from\":29,\"to\":16,\"weight\":0},{\"from\":29,\"to\":21,\"weight\":0},{\"from\":29,\"to\":24,\"weight\":0},{\"from\":30,\"to\":0,\"weight\":0},{\"from\":30,\"to\":5,\"weight\":0},{\"from\":30,\"to\":7,\"weight\":0},{\"from\":30,\"to\":8,\"weight\":0},{\"from\":30,\"to\":14,\"weight\":0},{\"from\":30,\"to\":15,\"weight\":0},{\"from\":30,\"to\":22,\"weight\":0},{\"from\":30,\"to\":23,\"weight\":0},{\"from\":30,\"to\":24,\"weight\":0},{\"from\":30,\"to\":26,\"weight\":0},{\"from\":31,\"to\":4,\"weight\":0},{\"from\":31,\"to\":7,\"weight\":0},{\"from\":31,\"to\":13,\"weight\":0},{\"from\":31,\"to\":16,\"weight\":0},{\"from\":31,\"to\":19,\"weight\":0},{\"from\":31,\"to\":23,\"weight\":0},{\"from\":31,\"to\":27,\"weight\":0},{\"from\":32,\"to\":1,\"weight\":0},{\"from\":32,\"to\":2,\"weight\":0},{\"from\":32,\"to\":7,\"weight\":0},{\"from\":32,\"to\":13,\"weight\":0},{\"from\":32,\"to\":23,\"weight\":0},{\"from\":32,\"to\":26,\"weight\":0},{\"from\":32,\"to\":28,\"weight\":0},{\"from\":33,\"to\":2,\"weight\":0},{\"from\":33,\"to\":3,\"weight\":0},{\"from\":33,\"to\":9,\"weight\":0},{\"from\":33,\"to\":17,\"weight\":0},{\"from\":33,\"to\":18,\"weight\":0},{\"from\":33,\"to\":27,\"weight\":0},{\"from\":34,\"to\":3,\"weight\":0},{\"from\":34,\"to\":4,\"weight\":0},{\"from\":34,\"to\":5,\"weight\":0},{\"from\":34,\"to\":6,\"weight\":0},{\"from\":34,\"to\":8,\"weight\":0},{\"from\":34,\"to\":9,\"weight\":0},{\"from\":34,\"to\":13,\"weight\":0},{\"from\":34,\"to\":20,\"weight\":0},{\"from\":34,\"to\":23,\"weight\":0},{\"from\":34,\"to\":30,\"weight\":0},{\"from\":34,\"to\":32,\"weight\":0},{\"from\":34,\"to\":33,\"weight\":0}],\"directed\":false,\"weighted\":false}',\n                            '{\"nodes\":[{\"id\":0,\"label\":\"GR\",\"x\":230,\"y\":3},{\"id\":1,\"label\":\"LU\",\"x\":-29,\"y\":-81},{\"id\":2,\"label\":\"NE\",\"x\":-247,\"y\":-73},{\"id\":3,\"label\":\"GE\",\"x\":-362,\"y\":117},{\"id\":4,\"label\":\"SZ\",\"x\":84,\"y\":-90},{\"id\":5,\"label\":\"VS\",\"x\":-118,\"y\":123},{\"id\":6,\"label\":\"TI\",\"x\":86,\"y\":92},{\"id\":7,\"label\":\"AI\",\"x\":195,\"y\":-158},{\"id\":8,\"label\":\"ZG\",\"x\":42,\"y\":-115},{\"id\":9,\"label\":\"UR\",\"x\":56,\"y\":-10},{\"id\":10,\"label\":\"TG\",\"x\":134,\"y\":-224},{\"id\":11,\"label\":\"NW\",\"x\":30,\"y\":-58},{\"id\":12,\"label\":\"OW\",\"x\":-5,\"y\":-36},{\"id\":13,\"label\":\"SH\",\"x\":44,\"y\":-253},{\"id\":14,\"label\":\"BL\",\"x\":-79,\"y\":-184},{\"id\":15,\"label\":\"GL\",\"x\":135,\"y\":-77},{\"id\":16,\"label\":\"SG\",\"x\":181,\"y\":-102},{\"id\":17,\"label\":\"BS\",\"x\":-107,\"y\":-225},{\"id\":18,\"label\":\"BE\",\"x\":-78,\"y\":-16},{\"id\":19,\"label\":\"ZH\",\"x\":74,\"y\":-184},{\"id\":20,\"label\":\"SO\",\"x\":-105,\"y\":-159},{\"id\":21,\"label\":\"AG\",\"x\":-3,\"y\":-170},{\"id\":22,\"label\":\"AR\",\"x\":170,\"y\":-167},{\"id\":23,\"label\":\"VD\",\"x\":-317,\"y\":23},{\"id\":24,\"label\":\"FR\",\"x\":-183,\"y\":-15},{\"id\":25,\"label\":\"JU\",\"x\":-188,\"y\":-165}],\"edges\":[{\"from\":3,\"to\":23,\"weight\":1},{\"from\":23,\"to\":5,\"weight\":1},{\"from\":23,\"to\":24,\"weight\":1},{\"from\":23,\"to\":2,\"weight\":1},{\"from\":2,\"to\":18,\"weight\":1},{\"from\":2,\"to\":25,\"weight\":1},{\"from\":18,\"to\":24,\"weight\":1},{\"from\":23,\"to\":18,\"weight\":1},{\"from\":5,\"to\":18,\"weight\":1},{\"from\":5,\"to\":9,\"weight\":1},{\"from\":5,\"to\":6,\"weight\":1},{\"from\":6,\"to\":9,\"weight\":1},{\"from\":6,\"to\":0,\"weight\":1},{\"from\":12,\"to\":18,\"weight\":1},{\"from\":12,\"to\":1,\"weight\":1},{\"from\":12,\"to\":11,\"weight\":1},{\"from\":11,\"to\":18,\"weight\":1},{\"from\":11,\"to\":9,\"weight\":1},{\"from\":11,\"to\":4,\"weight\":1},{\"from\":11,\"to\":1,\"weight\":1},{\"from\":9,\"to\":18,\"weight\":1},{\"from\":9,\"to\":0,\"weight\":1},{\"from\":9,\"to\":15,\"weight\":1},{\"from\":9,\"to\":4,\"weight\":1},{\"from\":0,\"to\":15,\"weight\":1},{\"from\":0,\"to\":16,\"weight\":1},{\"from\":15,\"to\":16,\"weight\":1},{\"from\":15,\"to\":4,\"weight\":1},{\"from\":16,\"to\":7,\"weight\":1},{\"from\":16,\"to\":22,\"weight\":1},{\"from\":22,\"to\":7,\"weight\":1},{\"from\":16,\"to\":10,\"weight\":1},{\"from\":16,\"to\":19,\"weight\":1},{\"from\":16,\"to\":4,\"weight\":1},{\"from\":10,\"to\":19,\"weight\":1},{\"from\":19,\"to\":13,\"weight\":1},{\"from\":13,\"to\":10,\"weight\":1},{\"from\":19,\"to\":8,\"weight\":1},{\"from\":4,\"to\":8,\"weight\":1},{\"from\":8,\"to\":21,\"weight\":1},{\"from\":8,\"to\":1,\"weight\":1},{\"from\":1,\"to\":4,\"weight\":1},{\"from\":1,\"to\":18,\"weight\":1},{\"from\":21,\"to\":1,\"weight\":1},{\"from\":21,\"to\":19,\"weight\":1},{\"from\":21,\"to\":20,\"weight\":1},{\"from\":21,\"to\":14,\"weight\":1},{\"from\":14,\"to\":17,\"weight\":1},{\"from\":14,\"to\":20,\"weight\":1},{\"from\":20,\"to\":18,\"weight\":1},{\"from\":21,\"to\":18,\"weight\":1},{\"from\":25,\"to\":18,\"weight\":1},{\"from\":25,\"to\":14,\"weight\":1},{\"from\":20,\"to\":25,\"weight\":1},{\"from\":2,\"to\":24,\"weight\":1}],\"directed\":false,\"weighted\":false}',\n                            '{\"nodes\":[{\"id\":0,\"label\":\"A\",\"x\":-275,\"y\":-175},{\"id\":1,\"label\":\"B\",\"x\":-160,\"y\":-175},{\"id\":2,\"label\":\"C\",\"x\":-275,\"y\":-60},{\"id\":3,\"label\":\"D\",\"x\":-160,\"y\":-60},{\"id\":4,\"label\":\"E\",\"x\":-40,\"y\":-175},{\"id\":5,\"label\":\"F\",\"x\":75,\"y\":-175},{\"id\":6,\"label\":\"G\",\"x\":-40,\"y\":-60},{\"id\":7,\"label\":\"H\",\"x\":75,\"y\":-60},{\"id\":8,\"label\":\"I\",\"x\":-275,\"y\":65},{\"id\":9,\"label\":\"J\",\"x\":-160,\"y\":65},{\"id\":10,\"label\":\"K\",\"x\":-275,\"y\":180},{\"id\":11,\"label\":\"L\",\"x\":-160,\"y\":180},{\"id\":12,\"label\":\"M\",\"x\":-40,\"y\":65},{\"id\":13,\"label\":\"N\",\"x\":75,\"y\":65},{\"id\":14,\"label\":\"O\",\"x\":-40,\"y\":180},{\"id\":15,\"label\":\"P\",\"x\":75,\"y\":180}],\"edges\":[{\"from\":0,\"to\":1,\"weight\":1},{\"from\":0,\"to\":3,\"weight\":1},{\"from\":0,\"to\":2,\"weight\":1},{\"from\":1,\"to\":2,\"weight\":1},{\"from\":1,\"to\":3,\"weight\":1},{\"from\":3,\"to\":2,\"weight\":1},{\"from\":4,\"to\":6,\"weight\":1},{\"from\":6,\"to\":7,\"weight\":1},{\"from\":7,\"to\":5,\"weight\":1},{\"from\":5,\"to\":4,\"weight\":1},{\"from\":4,\"to\":7,\"weight\":1},{\"from\":5,\"to\":6,\"weight\":1},{\"from\":8,\"to\":10,\"weight\":1},{\"from\":10,\"to\":11,\"weight\":1},{\"from\":11,\"to\":9,\"weight\":1},{\"from\":9,\"to\":8,\"weight\":1},{\"from\":8,\"to\":11,\"weight\":1},{\"from\":10,\"to\":9,\"weight\":1},{\"from\":12,\"to\":14,\"weight\":1},{\"from\":14,\"to\":15,\"weight\":1},{\"from\":15,\"to\":13,\"weight\":1},{\"from\":13,\"to\":12,\"weight\":1},{\"from\":12,\"to\":15,\"weight\":1},{\"from\":14,\"to\":13,\"weight\":1},{\"from\":0,\"to\":8,\"weight\":1},{\"from\":0,\"to\":10,\"weight\":1},{\"from\":2,\"to\":8,\"weight\":1},{\"from\":2,\"to\":10,\"weight\":1},{\"from\":1,\"to\":9,\"weight\":1},{\"from\":1,\"to\":11,\"weight\":1},{\"from\":3,\"to\":9,\"weight\":1},{\"from\":3,\"to\":11,\"weight\":1},{\"from\":4,\"to\":12,\"weight\":1},{\"from\":4,\"to\":14,\"weight\":1},{\"from\":6,\"to\":12,\"weight\":1},{\"from\":6,\"to\":14,\"weight\":1},{\"from\":5,\"to\":13,\"weight\":1},{\"from\":5,\"to\":15,\"weight\":1},{\"from\":7,\"to\":13,\"weight\":1},{\"from\":7,\"to\":15,\"weight\":1},{\"from\":0,\"to\":4,\"weight\":1},{\"from\":0,\"to\":5,\"weight\":1},{\"from\":1,\"to\":4,\"weight\":1},{\"from\":1,\"to\":5,\"weight\":1},{\"from\":2,\"to\":6,\"weight\":1},{\"from\":2,\"to\":7,\"weight\":1},{\"from\":3,\"to\":6,\"weight\":1},{\"from\":3,\"to\":7,\"weight\":1},{\"from\":8,\"to\":12,\"weight\":1},{\"from\":8,\"to\":13,\"weight\":1},{\"from\":9,\"to\":12,\"weight\":1},{\"from\":9,\"to\":13,\"weight\":1},{\"from\":10,\"to\":14,\"weight\":1},{\"from\":10,\"to\":15,\"weight\":1},{\"from\":11,\"to\":14,\"weight\":1},{\"from\":11,\"to\":15,\"weight\":1}],\"directed\":false,\"weighted\":false}'\n                        ];\n\n        self.importByString(gstrings[exercisegraph], \"json\");\n\n    },\n\n    setGraphBackground: (whichone: number): void => {\n        if (whichone === 0) {\n            window.network.off(\"beforeDrawing\");\n            GraphState.repaint();\n        }\n        else if (whichone === 1) {\n            window.network.off(\"beforeDrawing\");\n            GraphState.repaint();\n            window.network.on(\"beforeDrawing\", function(ctx) {\n                ctx.drawImage(document.getElementById(\"verkehr\"), -350, -190);\n            });\n            GraphState.repaint();\n        }\n        else if (whichone === 2) {\n            window.network.off(\"beforeDrawing\");\n            GraphState.repaint();\n            window.network.on(\"beforeDrawing\", function(ctx) {\n                ctx.drawImage(document.getElementById(\"bundeslaender\"), -250, -300);\n            });\n            GraphState.repaint();\n        }\n        else if (whichone === 3) {\n            window.network.off(\"beforeDrawing\");\n            GraphState.repaint();\n            window.network.on(\"beforeDrawing\", function(ctx) {\n                ctx.drawImage(document.getElementById(\"schweiz\"), -400, -300);\n            });\n            GraphState.repaint();\n        }\n        else if (whichone === 4) {\n            window.network.off(\"beforeDrawing\");\n            GraphState.repaint();\n            window.network.on(\"beforeDrawing\", function(ctx) {\n                ctx.drawImage(document.getElementById(\"sudoku3x3\"), -350, -250);\n            });\n            GraphState.repaint();\n        }\n        else if (whichone === 5) {\n            window.network.off(\"beforeDrawing\");\n            GraphState.repaint();\n            window.network.on(\"beforeDrawing\", function(ctx) {\n                ctx.drawImage(document.getElementById(\"sudoku4x4\"), -350, -250);\n            });\n            GraphState.repaint();\n        }\n        else if (whichone === 6) {\n            window.network.off(\"beforeDrawing\");\n            GraphState.repaint();\n            window.network.on(\"beforeDrawing\", function(ctx) {\n                ctx.drawImage(document.getElementById(\"sudoku5x5\"), -350, -250);\n            });\n            GraphState.repaint();\n        }\n        \n    },\n\n    makeExportFileModal: (): void => {\n        help.showFormModal(null, languages.current.ExportGraphToFile, null, languages.current.Cancel,\n            [{\n                type: \"button\",\n                initialValue: languages.current.ExportToJson,\n                onclick: () => {\n                    self.exportToFile(\"json\");\n                },\n                extraAttrs: {\n                    class: \"btn btn-sm btn-primary m-1\"\n\n                },\n                clickDismiss: true\n            },\n            {\n                type: \"button\",\n                initialValue: languages.current.ExportToDimacs,\n                onclick: () => {\n                    self.exportToFile(\"dimacs\");\n                },\n                extraAttrs: {\n                    class: \"btn btn-sm btn-primary\"\n                },\n                clickDismiss: true\n            }\n            ], null, false);\n    },\n\n    makeExportFileModalJSON: (): void => {\n        help.showFormModal(null, languages.current.ExportGraphToFile, null, languages.current.Cancel,\n            [{\n                type: \"button\",\n                initialValue: languages.current.ExportToJson,\n                onclick: () => {\n                    self.exportToFile(\"json\");\n                },\n                extraAttrs: {\n                    class: \"btn btn-sm btn-primary m-1\"\n\n                },\n                clickDismiss: true\n            }\n            ], null, false);\n    },\n\n    makeExportTextModal: (): void => {\n        help.showFormModal(null, languages.current.ExportGraphToText, null, languages.current.Cancel,\n            [{\n                type: \"button\",\n                initialValue: languages.current.ExportToJson,\n                onclick: () => {\n                    self.exportToText(\"json\");\n                },\n                extraAttrs: {\n                    class: \"btn btn-sm btn-primary m-1\",\n                },\n                clickDismiss: false\n            },\n            {\n                type: \"button\",\n                initialValue: languages.current.ExportToDimacs,\n                onclick: () => {\n                    self.exportToText(\"dimacs\");\n                },\n                extraAttrs: {\n                    class: \"btn btn-sm btn-primary\",\n                },\n                clickDismiss: false\n            },\n            {\n                type: \"textarea\", label: \"\", initialValue: \"\", extraAttrs: {\n                    style: \"height: 20vh;\" +\n                        \" min-height:400px; white-space:pre; margin-top: 1rem;\"\n                },\n                onclick: () => {\n                    (document.getElementById(exportedTextSelector) as HTMLTextAreaElement).select();\n                    document.execCommand(\"copy\");\n                }, id: \"exportedText\"\n            }\n            ], ($modal) => {\n                $modal.modal(\"hide\");\n            }, false);\n    },\n\n    exportToFile: (format: string): void => {\n        if (format.toLowerCase() === \"json\") {\n            self.downloadFile(\"graph.json\", self.getDataAsJSON());\n        }\n        else if (format.toLowerCase() === \"dimacs\") {\n            self.downloadFile(\"graph.dimacs\", self.getDataAsDIMACS());\n        }\n    },\n\n    exportToText: (format: string): void => {\n        if (format.toLowerCase() === \"json\") {\n            document.getElementById(exportedTextSelector)!.innerHTML = JSON.stringify(JSON.parse(self.getDataAsJSON()), null, 2);\n        }\n        else if (format.toLowerCase() === \"dimacs\") {\n            document.getElementById(exportedTextSelector)!.innerHTML = self.getDataAsDIMACS();\n        }\n    },\n\n    getDataAsJSON: (): string => {\n        const d = GraphState.getGraphData(GraphState.graph);\n        const nodeKeys = [\"id\", \"label\", \"color\", \"x\", \"y\"];\n        const edgeKeys = [\"from\", \"to\", \"weight\", \"color\"];\n        d.nodes = help.keepOnlyKeys(d.nodes, nodeKeys) as NodeImmutPlain[];\n        d.edges = help.keepOnlyKeys(d.edges, edgeKeys) as EdgeImmutPlain[];\n\n        return JSON.stringify(d);\n    },\n\n    getDataAsDIMACS: (): string => {\n        // If I add direction, DIMACS cannot be used, it only works for undirected graphs\n        const g = GraphState.getGraphData();\n        let text = \"c This Graph was generated and exported from Michael Dombrowski's Graph Playground \" +\n            \"-- https://mikedombo.github.io/graphPlayground -- https://mikedombrowski.com\\n\";\n\n        let adj = GraphState.graph.getFullAdjacency();\n        adj = adj.filter((v: number[]) => {\n            return v.length !== 0;\n        });\n\n        const nodes: number[] = [];\n        adj.forEach((v: number[], i: number) => {\n            if (nodes.indexOf(i + 1) === -1) {\n                nodes.push(i + 1);\n            }\n            v.forEach((n: number) => {\n                if (nodes.indexOf(n + 1) === -1) {\n                    nodes.push(n + 1);\n                }\n            });\n        });\n\n        let edgeCount = 0;\n        let edgeText = \"\";\n        g.edges.forEach((v: EdgeImmutPlain) => {\n            edgeText += `e ${v.from + 1} ${v.to + 1}\\n`;\n            edgeCount++;\n        });\n        edgeText = edgeText.trim();\n\n        text += `p edge ${nodes.length} ${edgeCount}\\n`;\n        return text + edgeText;\n    },\n\n    downloadFile: (filename: string, text: string): void => {\n        const blob = new Blob([text], { type: 'text/plain' });\n        // @ts-ignore\n        if (window.navigator.msSaveOrOpenBlob) {\n            window.navigator.msSaveBlob(blob, filename);\n        }\n        else {\n            const a = window.document.createElement('a');\n            a.href = window.URL.createObjectURL(blob);\n            a.download = filename;\n            document.body.appendChild(a);\n            a.click();\n            document.body.removeChild(a);\n            window.URL.revokeObjectURL(blob as any);\n        }\n    },\n};\n\nexport default self;\n"],"names":["exportedTextSelector","self","importByString","string","format","toLowerCase","n","JSON","parse","window","network","setData","main","err","lines","split","forEach","l","vals","parseInt","addEdge","d","nodes","v","label","id","toString","makeImportTextModal","$modal","values","modal","type","extraAttrs","style","optionValues","optionText","makeImportFileModal","files","length","reader","FileReader","onload","event","target","result","name","readAsText","validationFunc","val","$files","get","makeImportGraphExercise","exercisegraph","setGraphBackground","whichone","off","on","ctx","drawImage","document","getElementById","makeExportFileModal","initialValue","onclick","exportToFile","class","clickDismiss","makeExportFileModalJSON","makeExportTextModal","exportToText","select","execCommand","downloadFile","getDataAsJSON","getDataAsDIMACS","innerHTML","stringify","edges","g","text","adj","filter","i","indexOf","push","edgeCount","edgeText","from","to","trim","filename","blob","Blob","navigator","msSaveOrOpenBlob","msSaveBlob","a","createElement","href","URL","createObjectURL","download","body","appendChild","click","removeChild","revokeObjectURL"],"sourceRoot":""}