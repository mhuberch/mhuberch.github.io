"use strict";(self.webpackChunkgraphPlayground=self.webpackChunkgraphPlayground||[]).push([[872],{216:(e,o,r)=>{r.r(o),r.d(o,{default:()=>t});const t={CheckColoring:"Check Coloring",GetAllDegrees:"Get Vertex Degrees",GraphColoringGreedy:"Graph Coloring Greedy",ColoringMode:"Select the mode, in which the nodes should get colored:",GraphColoringWelsh:"Graph Coloring by Welsh-Powell",kColoringBruteForce:"k-Coloring Bruteforce",kColoringBacktracking:"k-Coloring Backtracking",kColoringConstrainedBacktracking:"Constrained k-Coloring",ConnectedComponents:"Connected Components",StronglyConnectedComponents:"Strongly Connected Components",BFS:"Breadth-First Shortest Path",Dijkstra:"Dijkstra Shortest Path",BellmanFord:"Bellman-Ford Shortest Path",FordFulkerson:"Ford-Fulkerson",FordFulkersonMaxFlowMinCut:"Ford-Fulkerson MaxFlow-MinCut",KruskalMST:"Kruskal Minimum Spanning Tree",Cyclic:"Cyclic",TopoSort:"Topological Sort",Eulerian:"Eulerian",Vertex:"Vertex",ShortestPath:"Shortest Path",DijkstraError:"Dijkstra Error",DijkstraErrorHTML:"<p>The Dijkstra algorithm only works on graphs with totally non-negative edge weights. Please fix the graph so that there are no negative edge weights.</p><p>Alternatively, try the Bellman-Ford algorithm which solves exactly this problem.</p>",BellmanFordError:"Bellman-Ford Error",BellmanFordErrorHTML:"<p>The Bellman-Ford algorithm only works on graphs with no negative edge-weight cycles. Please remove the negative cycle and try again.</p>",TopoSortErrorHTML:"<h3>Topological Sorting Failed</h3><hr>Topological sorting failed because the graph contains a cycle",NoPathFromAToB:"No path exists from $1 to $2",MaxFlowFromAToB:"Max flow from $1 to $2: $3",ShortestPathFromAToB:"$1 From $2 to $3: $4",WithWeightedCost:"With weighted cost: $1",UsingPath:"Using path: ",UsingEdges:"Using edges:",UsingCapacities:"Using capacities:",FlowWithCapacity:"$1 &rarr; $2 using $3 of $4",NumberOfConnectedComponents:"Number of $1: $2",NumberOfConflicts:"Number of conflicts: $1",NodeIsInConflictWith:"$1.) Colors of node $2 and node $3 are in conflict.",VertexIsInConnectedComponentNumber:"Vertex $1 is in connected component #$2",VertexHasDegree:"Vertex $1 has degree $2",GraphHasVertexDegree:"Graph has maximal vertex degree $1",BuildGraphs:"Build New Graphs",LoadGraphs:"Load Exercise Graphs",SetBackground:"Load Background",GraphTools:"Graph Tools",StopTasks:"Stop Tasks",IncNodeLabel:"Ordered by Node Label (increasing)",DecNodeLabel:"Ordered by Node Label (decreasing)",IncDegree:"Ordered by Degree (increasing)",DecDegree:"Ordered by Degree (decreasing)",Color0:"not colored",Color1:"1: red",Color2:"2: orange",Color3:"3: yellow",Color4:"4: green",Color5:"5: blue",Color6:"6: violet",Vertices:"Vertices",Edges:"Edges",NumberOfVertices:"Number of Vertices: $1",ChromaticNumberIs:"Chromatic Number: $1",ApproxChromaticNumberIs:"Approx. Chromatic Number (as upper bound): $1",GreedyWorkedOrder:"Greedy algorithm working in the mode '$1' resulting in the following ordering of vertices:",IfDesiredActiveStepByStep:"If desired, activate 'Step-by-Step Info' in the 'Options' and rerun the coloring algorithm.",StepByStepOutput:"Step-by-Step output: ('color 0' means not yet colored)",VertexGetsColor:"Vertex $1 gets color $2",VertexGetsThereforeColor:"Vertex $1 gets thus color $2",RecolorAddColors:"The coloring needs more than the six standard colors. Choose randomly new variantes of the additional colors by pressing the button.",GraphColoringTitle:"Graph Coloring Using Welsh-Powell Algorithm",GraphColoringGreedyTitle:"Graph Coloring Using Greedy Algorithm",kColoringBruteForceTitle:"Check if the graph is k-colorable using Brute Force",kColoringBacktrackingTitle:"Check if the graph is k-colorable using Backtracking",kColoringConstrainedTitle:"Check if the graph is k-colorable constrained by some given color using Backtracking",kColoringParameter:"Check k-colorability for k = ",kColoringSuccess:"Positive answer: The given graph is $1-colorable.",kColoringTerminated:"The coloring algorithm terminated after $1 tested configurations.",FollowingConstraints:"The following constraints on the colors of vertices where made by the user:",Has:" has ",MustBe:" must be ",kColoringCheckedAll:"The coloring algorithm checked $1 configurations without success.",kColoringDocStep1:"Documentation of the maximally the first $1 configurations (step-by-step) as requested:",kColoringDocStep2:"List indicates the colors of all vertices: 0 = not colored; 1 = Color 1; 2 = Color 2; ...) sorted by their IDs, i.e., ",kColoringFail:"Negative answer: The given graph is NOT $1-colorable.",Step:"Step ",NumberOfColors:"Number of colors",NumberOfSteps:"Number of steps documented by step-by-step info",CompleteColoring:"Complete the manually started coloring",CompleteColoringExplanation:"If you have already chosen manually the color of some vertices (red, orange, yellow, green or violet (BUT NOT blue), the backtracking algorithm can try to find a coloring, while not changing the already colored vertices. AGAIN: In this mode BLUE means NOT COLORED",CheckColoringTitle:"Checked admissibilty of the current vertex coloring",GetAllDegreesTitle:"The vertices have the following degree:",KruskalMSTTotalWeight:"Kruskal's Minimum Spanning Tree Total Weight: $1",StartNode:"Start Node",EndNode:"End Node",SourceNode:"Source Node",SinkNode:"Sink Node",Go:"Go",Help:"Help",AboutShort:"About",About:"About Graph Coloring Playground",TaskAlreadyRunning:"Task Already Running",TaskAlreadyRunningBody:"$1 is already running, please wait for it to finish first.",Options:"Options",Save:"Save",Cancel:"Cancel",IssuesHTML:"<h4>For support see the <a href='https://github.com/MikeDombo/graphPlayground' target='_blank'>GitHub repository</a> for guides</h4> <h4>See <a href='https://github.com/MikeDombo/graphPlayground/issues' target='_blank'>GitHub issues</a> to submit bugs or feature requests.</h4>",AboutHTML:"<i>Electronic tool for learning Graph coloring, based on <a href='https://github.com/MikeDombo/graphPlayground' target='_blank'>GraphPlayground</a> by Michael Dombrowski. For school material see <a href='https://www.abz.inf.ethz.ch/maturitatsschulen/unterrichtsmaterialien/' target='_blank'>ABZ Webpage</a>. </i> Martin Huber, 2022",GraphPhysics:"Graph Physics",DiGraph:"Directed Graph",WeightedGraph:"Weighted Graph",CustomNodeColors:"Customize Node Colors",SmoothEdges:"Smooth Edges",FastColorChange:"Change vertex color by double click",StepByStepInfo:"Get step-by-step info for coloring algorithms",ThisTask:"This task",ReColor:"Generate new non-standard colors",ReColorInfo:"As the coloring needs more than the six standard colors additional randomly chosen colors are used. To change their appearence press the button.",File:"Import/Export",ImportFile:"Import File",ImportText:"Import Text",ExportFile:"Export File",ExportText:"Export Text",CalculateAllProperties:"Calculate All Properties",NewGraphLayout:"New Graph Layout",LoadDefaultColor:"Reset Node Color",ExampleGraphs:"Build Graphs",LoadPetersen:"Load Petersen Graph",LoadKonigsberg:"Load KÃ¶nigsberg Bridges Graph",LoadComplete:"Build Complete Graph",LoadCycle:"Build Cycle Graph",LoadWheel:"Build Wheel Graph",LoadHypercube:"Build Hypercube Graph",LoadCustom:"Build Custom Graph",LoadRandom:"Build Random Graph",Algorithms:"Algorithms",GraphProperties:"Graph Properties",Results:"Results",AddNode:"Add Node",EditEdge:"Edit Edge",EditNode:"Edit Node",WeightCapacity:"Weight/Capacity",LabelLabel:"Label",NodeId:"Node ID: $1",Color:"Color",ConnectNodeToItselfConfirmation:"Do you want to connect the node to itself?",ConnectNodeToItselfAlert:"Connect a node to itself is not allowed!",AlreadyConnectedNodes:"These two nodes are already connected.",InvalidLabelOrId:"Invalid Label or ID",DataImportError:"Data Import Error",DataImportErrorText:"The provided input does not conform the the import specifications.",JsonParseError:"JSON Parse Error",JsonParseErrorText:"There was an error parsing your input as JSON.",DimacsParseError:"DIMACS Parse Error",DimacsParseErrorText:'Sorry, but I only know how to parse "edge" formatted DIMACS files.',DimacsParseErrorNoProgram:"No program line found!",UnrecognizedInputError:"Unrecognized Input Format",ImportGraphFromText:"Import Graph From Text",ImportGraphFromFile:"Import Graph From File",Import:"Import",ExportToJson:"Export to JSON",ExportToDimacs:"Export to DIMACS",ExportGraphToFile:"Export Graph To File",ExportGraphToText:"Export Graph To Text",Format:"Format",InputText:"Input Text",UploadFile:"Upload File",MustChooseFileError:"You must choose a file first",ConfigurableCompleteGraph:"Configurable Complete Graph",ConfigurableCycleGraph:"Configurable Cycle Graph",ConfigurableWheelGraph:"Configurable Wheel Graph",NumberOfVerticesLabel:"Number of Vertices",NumberOfVerticesNonNegativeError:"Number of vertices must be non-negative",NumberOfColorsPositiveError:"Number of colors must be strictly positive",NumberOfStepsPositiveError:"Number of documented steps must be strictly positive",ConfigurableRandomGraph:"Configurable Random Graph",PercentageOfVerticesLabel:"Probability in percents for an edge between two nodes",ConfigurableGraph:"Configurable Graph",ConfigurableHypercubeGraph:"Configurable Hypercube Graph",NumberOfDimensionsLabel:"Number of Dimensions",NumberOfDimensionsNonNegativeError:"Number of dimensions must be non-negative",NumberOfPercentageError:"Percentage has to be between 0 and 100",VisLocale:{en:{},"":{edit:"Edit",del:"Delete selected",back:"Back",addNode:"Add Node",addEdge:"Add Edge",editNode:"Edit Node",editEdge:"Edit Edge",addDescription:"Click in an empty space to place a new node.",edgeDescription:"Click on a node and drag the edge to another node to connect them.",editEdgeDescription:"Click on the control points and drag them to a node to connect to it.",createEdgeError:"Cannot link edges to a cluster.",deleteClusterError:"Clusters cannot be deleted.",editClusterError:"Clusters cannot be edited."}}}}}]);
//# sourceMappingURL=872-a5cb6b4c019cf8d04b4c.min.js.map