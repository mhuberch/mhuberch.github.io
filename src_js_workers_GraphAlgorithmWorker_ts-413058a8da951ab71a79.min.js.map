{"version":3,"file":"src_js_workers_GraphAlgorithmWorker_ts-413058a8da951ab71a79.min.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAiD;AACjD,IAAM,GAAG,GAAW,IAAW,CAAC;AAEhC,IAAI,IAAY,CAAC;AAEjB,SAAS,KAAK,CAAC,EAAU;IACrB,OAAO,IAAI,OAAO,CAAC,iBAAO,IAAI,iBAAU,CAAC,OAAO,EAAE,EAAE,CAAC,EAAvB,CAAuB,CAAC,CAAC;AAC3D,CAAC;AAED,GAAG,CAAC,gBAAgB,CAAC,SAAS,EAAE,UAAM,CAAC;;;;;gBACnC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE;oBACtB,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC;oBACjB,sBAAO;iBACV;gBACK,IAAI,GAAU,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;qBAC5B,EAAC,CAAC,IAAI,CAAC,IAAI,KAAK,MAAM,GAAtB,wBAAsB;gBACtB,qBAAM,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC;;gBAA5B,SAA4B,CAAC;gBAC7B,GAAG,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC;gBAC5C,sBAAO;;gBAEX,IAAI,qBAAqB,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,CAAC,mBAAmB,EAAE;oBAC/D,IAAI,CAAC,IAAI,CAAC,+EAAsC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;oBAChE,GAAG,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAG,wDAAuB,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;iBAChG;qBAAM;oBACH,GAAG,CAAC,WAAW,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAG,wDAAuB,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;iBAChG;;;;KACJ,CAAC,CAAC","sources":["webpack://graphPlayground/./src/js/workers/GraphAlgorithmWorker.ts"],"sourcesContent":["import GraphAlgorithms from \"../GraphAlgorithms\";\nconst ctx: Worker = self as any;\n\nlet myID: number;\n\nfunction sleep(ms: number) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nctx.addEventListener(\"message\", async e => {\n    if (e.data.type === \"id\") {\n        myID = e.data.id;\n        return;\n    }\n    const args: any[] = e.data.args;\n    if (e.data.type === \"test\") {\n        await sleep(e.data.waitTime);\n        ctx.postMessage({ id: myID, data: \"DONE\" });\n        return;\n    }\n    if (\"convertToGraphImmut\" in e.data && e.data.convertToGraphImmut) {\n        args.push(GraphAlgorithms.graphPlainToGraphImmut(e.data.graph));\n        ctx.postMessage({ id: myID, data: (GraphAlgorithms as any)[e.data.type].apply(null, args) });\n    } else {\n        ctx.postMessage({ id: myID, data: (GraphAlgorithms as any)[e.data.type].apply(null, args) });\n    }\n});\n"],"names":[],"sourceRoot":""}