{"version":3,"file":"src_EN_US_ts-2eb2b160b604af206eb4.min.js","mappings":"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","sources":["webpack://graphPlayground/./src/EN_US.ts"],"sourcesContent":["export default {\n    // Algorithms\n    CheckColoring: \"Check Coloring\",\n    GraphColoringGreedy: \"Graph Coloring Greedy\",\n    kColoringBruteForce: \"k-Coloring Bruteforce\",\n    ConnectedComponents: \"Connected Components\",\n    StronglyConnectedComponents: \"Strongly Connected Components\",\n    BFS: \"Breadth-First Shortest Path\",\n    Dijkstra: \"Dijkstra Shortest Path\",\n    BellmanFord: \"Bellman-Ford Shortest Path\",\n    FordFulkerson: \"Ford-Fulkerson\",\n    FordFulkersonMaxFlowMinCut: \"Ford-Fulkerson MaxFlow-MinCut\",\n    KruskalMST: \"Kruskal Minimum Spanning Tree\",\n    Cyclic: \"Cyclic\",\n    TopoSort: \"Topological Sort\",\n    Eulerian: \"Eulerian\",\n\n    ShortestPath: \"Shortest Path\",\n    DijkstraError: \"Dijkstra Error\",\n    DijkstraErrorHTML: \"<p>The Dijkstra algorithm only works on graphs\" +\n        \" with totally non-negative edge weights. Please fix the graph so that there are no\" +\n        \" negative edge weights.</p><p>Alternatively, try the Bellman-Ford algorithm which solves\" +\n        \" exactly this problem.</p>\",\n    BellmanFordError: \"Bellman-Ford Error\",\n    BellmanFordErrorHTML: \"<p>The Bellman-Ford algorithm only works on graphs\" +\n        \" with no negative edge-weight cycles. Please remove the negative cycle and try again.</p>\",\n    TopoSortErrorHTML: \"<h3>Topological Sorting Failed</h3><hr>Topological sorting failed because the graph contains a cycle\",\n\n    NoPathFromAToB: \"No path exists from $1 to $2\",\n    MaxFlowFromAToB: \"Max flow from $1 to $2: $3\",\n    ShortestPathFromAToB: \"$1 From $2 to $3: $4\",\n    WithWeightedCost: \"With weighted cost: $1\",\n    UsingPath: \"Using path: \",\n    UsingEdges: \"Using edges:\",\n    UsingCapacities: \"Using capacities:\",\n    FlowWithCapacity: \"$1 &rarr; $2 using $3 of $4\",\n    NumberOfConnectedComponents: \"Number of $1: $2\",\n    NumberOfConflicts: \"Number of conflicts: $1\",\n    NodeIsInConflictWith: \"$1.) Colors of node $2 and node $3 are in conflict.\",\n    VertexIsInConnectedComponentNumber: \"Vertex $1 is in connected component #$2\",\n    LoadGraphs: \"Load Exercise Graphs\",\n    \n    NumberOfVertices: \"Number of Vertices: $1\",\n    ChromaticNumberIs: \"Chromatic Number: $1\",\n    VertexGetsColor: \"Vertex $1 gets color $2\",\n    GraphColoringTitle: \"Graph Coloring Using Welsh-Powell Algorithm\",\n    kColoringBruteForceTitle: \"Check if the graph is k-colorable using Brute Force\",\n    kColoringParameter: \"Check k-colorability for k = \",\n    NumberOfColors: \"Number of colors\",\n    CheckColoringTitle: \"Checked admissibilty of the current node coloring\",\n    KruskalMSTTotalWeight: \"Kruskal's Minimum Spanning Tree Total Weight: $1\",\n\n    // UI\n    StartNode: \"Start Node\",\n    EndNode: \"End Node\",\n    SourceNode: \"Source Node\",\n    SinkNode: \"Sink Node\",\n    Go: \"Go\",\n    Help: \"Help\",\n    TaskAlreadyRunning: \"Task Already Running\",\n    TaskAlreadyRunningBody: \"$1 is already running, please wait for it to finish first.\",\n    Options: \"Options\",\n    Save: \"Save\",\n    IssuesHTML: \"<h4>For support see the \" +\n        \"<a href='https://github.com/MikeDombo/graphPlayground' target='_blank'>GitHub repository</a>\" +\n        \" for guides</h4> <h4>See <a href='https://github.com/MikeDombo/graphPlayground/issues' target='_blank'>\" +\n        \"GitHub issues</a> to submit bugs or feature requests.</h4>\",\n\n    GraphPhysics: \"Graph Physics\",\n    DiGraph: \"Directed Graph\",\n    WeightedGraph: \"Weighted Graph\",\n    CustomNodeColors: \"Customize Node Colors\",\n    SmoothEdges: \"Smooth Edges\",\n    FastColorChange: \"Change node color by double click\",\n    ThisTask: \"This task\",\n    ReColor: \"Apply New Colors To Graph\",\n    File: \"File\",\n    ImportFile: \"Import File\",\n    ImportText: \"Import Text\",\n    ExportFile: \"Export File\",\n    ExportText: \"Export Text\",\n    CalculateAllProperties: \"Calculate All Properties\",\n    NewGraphLayout: \"New Graph Layout\",\n    GraphOptions: \"Graph Options\",\n    ExampleGraphs: \"Example Graphs\",\n    LoadPetersen: \"Load Petersen Graph\",\n    LoadKonigsberg: \"Load KÃ¶nigsberg Bridges Graph\",\n    LoadComplete: \"Load Complete Graph\",\n    LoadHypercube: \"Load Hypercube Graph\",\n    LoadCustom: \"Load Custom Graph\",\n    Algorithms: \"Algorithms\",\n    GraphProperties: \"Graph Properties\",\n    Results: \"Results\",\n    AddNode: \"Add Node\",\n    EditEdge: \"Edit Edge\",\n    EditNode: \"Edit Node\",\n    WeightCapacity: \"Weight/Capacity\",\n    LabelLabel: \"Label\",\n    NodeId: \"Node ID: $1\",\n    Color: \"Color\",\n    ConnectNodeToItselfConfirmation: \"Do you want to connect the node to itself?\",\n    ConnectNodeToItselfAlert: \"Connect a node to itself is not allowed!\",\n    AlreadyConnectedNodes: \"These two nodes are already connected.\",\n    InvalidLabelOrId: \"Invalid Label or ID\",\n\n\n    // Import/Export\n    DataImportError: \"Data Import Error\",\n    DataImportErrorText: \"The provided input does not conform the the import specifications.\",\n    JsonParseError: \"JSON Parse Error\",\n    JsonParseErrorText: \"There was an error parsing your input as JSON.\",\n    DimacsParseError: \"DIMACS Parse Error\",\n    DimacsParseErrorText: \"Sorry, but I only know how to parse \\\"edge\\\" formatted DIMACS files.\",\n    DimacsParseErrorNoProgram: \"No program line found!\",\n    UnrecognizedInputError: \"Unrecognized Input Format\",\n    ImportGraphFromText: \"Import Graph From Text\",\n    ImportGraphFromFile: \"Import Graph From File\",\n    Import: \"Import\",\n    ExportToJson: \"Export to JSON\",\n    ExportToDimacs: \"Export to DIMACS\",\n    ExportGraphToFile: \"Export Graph To File\",\n    ExportGraphToText: \"Export Graph To Text\",\n    Format: \"Format\",\n    InputText: \"Input Text\",\n    UploadFile: \"Upload File\",\n    MustChooseFileError: \"You must choose a file first\",\n\n    // Predefined Graphs\n    ConfigurableCompleteGraph: \"Configurable Complete Graph\",\n    NumberOfVerticesLabel: \"Number of Vertices\",\n    NumberOfVerticesNonNegativeError: \"Number of vertices must be non-negative\",\n    NumberOfColorsNonNegativeError: \"Number of colors must be non-negative\",\n    ConfigurableGraph: \"Configurable Graph\",\n    ConfigurableHypercubeGraph: \"Configurable Hypercube Graph\",\n    NumberOfDimensionsLabel: \"Number of Dimensions\",\n    NumberOfDimensionsNonNegativeError: \"Number of dimensions must be non-negative\",\n\n    // VisJS locale\n    VisLocale: {\n        \"en\": {}, // Required, even though we will not use it.\n        // Customize the text below...\n        \"\": {\n            edit: 'Edit',\n            del: 'Delete selected',\n            back: 'Back',\n            addNode: 'Add Node',\n            addEdge: 'Add Edge',\n            editNode: 'Edit Node',\n            editEdge: 'Edit Edge',\n            addDescription: 'Click in an empty space to place a new node.',\n            edgeDescription: 'Click on a node and drag the edge to another node to connect them.',\n            editEdgeDescription: 'Click on the control points and drag them to a node to connect to it.',\n            createEdgeError: 'Cannot link edges to a cluster.',\n            deleteClusterError: 'Clusters cannot be deleted.',\n            editClusterError: 'Clusters cannot be edited.'\n        }\n    }\n};\n"],"names":[],"sourceRoot":""}