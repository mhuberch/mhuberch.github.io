{"version":3,"file":"bundle-166df18a604541b642b6.min.js","mappings":"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AsC,iEAAiE;WACvG;WACA;WACA;WACA;WACA;WACA;;;;;WCzBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,EAAE;WACF;;;;;WCRA;WACA;WACA;WACA,8BAA8B,mdAAmd;WACjf;;;;;WCJA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;;;;;WCAA;WACA;WACA;WACA;WACA,uBAAuB,4BAA4B;WACnD;WACA;WACA;WACA,iBAAiB,oBAAoB;WACrC;WACA,mGAAmG,YAAY;WAC/G;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,mEAAmE,iCAAiC;WACpG;WACA;WACA;WACA;;;;;WCzCA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;WACA;WACA;WACA;WACA;;;;;WCJA;;;;;WCAA;;WAEA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA,iCAAiC;;WAEjC;WACA;WACA;WACA,KAAK;WACL,eAAe;WACf;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM;WACN;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;;;;UErFA;UACA;UACA;UACA;UACA","sources":["webpack://graphPlayground/./src/js/app.ts","webpack://graphPlayground/./src/js/classes/GraphImmut/EdgeImmut.ts","webpack://graphPlayground/./src/js/classes/GraphImmut/GraphImmut.ts","webpack://graphPlayground/./src/js/classes/GraphImmut/NodeImmut.ts","webpack://graphPlayground/./src/js/graphState.ts","webpack://graphPlayground/./src/js/languages.ts","webpack://graphPlayground/./src/js/main.ts","webpack://graphPlayground/./src/js/settings.ts","webpack://graphPlayground/./src/js/util/genericHelpers.ts","webpack://graphPlayground/./src/js/util/graphHelpers.ts","webpack://graphPlayground/./src/ lazy ^\\.\\/.*\\.ts$ namespace object","webpack://graphPlayground/webpack/bootstrap","webpack://graphPlayground/webpack/runtime/chunk loaded","webpack://graphPlayground/webpack/runtime/compat get default export","webpack://graphPlayground/webpack/runtime/create fake namespace object","webpack://graphPlayground/webpack/runtime/define property getters","webpack://graphPlayground/webpack/runtime/ensure chunk","webpack://graphPlayground/webpack/runtime/get javascript chunk filename","webpack://graphPlayground/webpack/runtime/global","webpack://graphPlayground/webpack/runtime/hasOwnProperty shorthand","webpack://graphPlayground/webpack/runtime/load script","webpack://graphPlayground/webpack/runtime/make namespace object","webpack://graphPlayground/webpack/runtime/node module decorator","webpack://graphPlayground/webpack/runtime/publicPath","webpack://graphPlayground/webpack/runtime/jsonp chunk loading","webpack://graphPlayground/webpack/before-startup","webpack://graphPlayground/webpack/startup","webpack://graphPlayground/webpack/after-startup"],"sourcesContent":["\"use strict\";\n\nimport \"bootstrap\";\nimport { Network } from \"vis-network\";\nimport { default as main, MainI } from \"./main\";\nimport Settings from \"./settings\";\nimport UI from \"./UIInteractions\";\nimport { GraphPlain } from \"./util/predefinedGraphs\";\nimport * as languages from \"./languages\";\n\ndeclare global {\n    interface Window {\n        main: MainI;\n        network: Network;\n        settings: typeof Settings;\n        ui: typeof UI;\n        Worker: Function;\n    }\n}\n\nwindow.main = main;\nwindow.settings = Settings;\n\nlanguages.setLanguage().then(() => {\n    window.ui = UI;\n    window.ui.registerListeners();\n\n    main.visOptions.locales = languages.current.VisLocale;\n    main.visOptions.locale = \"\";\n    window.network = new Network(main.container, {}, main.visOptions);\n    Settings.loadSettings();\n\n    main.addNetworkListeners(window.network);\n\n    let loadDefault = true;\n    if (Settings.checkForLocalStorage()) {\n        const s = localStorage.getItem(\"graphPlayground.lastState\");\n        if (s !== null) {\n            const jsonGraph: any = JSON.parse(s);\n            if (\"graph\" in jsonGraph && \"nodes\" in jsonGraph.graph) {\n                loadDefault = false;\n                main.applyState(false, jsonGraph as { graph: GraphPlain });\n            }\n        }\n    }\n    if (loadDefault) {\n        (async () => {\n            const predefined = (await import(\"./util/predefinedGraphs\")).default;\n            main.setData(predefined.Petersen(), false, true, true);\n        })();\n    }\n});\n","\"use strict\";\n\nexport interface EdgeImmutPlain {\n    label?: string;\n    from: number;\n    to: number;\n    weight: number;\n\n    [key: string]: any;\n\n    [key: number]: any;\n}\n\nexport default class EdgeImmut {\n    private readonly from: Readonly<number>;\n    private readonly to: Readonly<number>;\n    private readonly weight: Readonly<number>;\n    private readonly attributes: any;\n\n    constructor(from: number | EdgeImmutPlain, to?: number, weight: number | string = 1, extraAttrs: any = null) {\n        if (typeof from === \"object\") {\n            extraAttrs = Object.keys(from)\n                .filter(key => ![\"from\", \"to\", \"weight\"].includes(key))\n                .reduce((obj: any, key: string) => {\n                    obj[key] = (<EdgeImmutPlain>from)[key];\n                    return obj;\n                }, {});\n\n            to = from.to;\n            weight = from.weight;\n            from = from.from;\n        }\n\n        this.attributes = {};\n        if (extraAttrs !== null && typeof extraAttrs === \"object\") {\n            Object.keys(extraAttrs).forEach(key => {\n                this.attributes[key] = Object.freeze(extraAttrs[key]);\n            });\n        }\n\n        this.attributes = Object.freeze(this.attributes);\n        this.from = Object.freeze(from);\n        this.to = Object.freeze(to!);\n        this.weight = Object.freeze(parseFloat(weight as string));\n\n        if (new.target === EdgeImmut) {\n            Object.freeze(this);\n        }\n    }\n\n    getFrom(): Readonly<number> {\n        return this.from;\n    }\n\n    getTo(): Readonly<number> {\n        return this.to;\n    }\n\n    getWeight(): Readonly<number> {\n        return this.weight;\n    }\n\n    getAttribute(attribute: string | number): any {\n        if (attribute in this.attributes) {\n            return this.attributes[attribute];\n        }\n\n        return null;\n    }\n\n    getAllAttributes(): { [key: string]: any; [key: number]: any } {\n        return this.attributes;\n    }\n\n    toPlain(): EdgeImmutPlain {\n        const toReturn: EdgeImmutPlain = { from: this.from, to: this.to, weight: this.weight };\n        Object.keys(this.attributes).forEach(key => {\n            if (!(key in toReturn)) {\n                toReturn[key] = this.attributes[key];\n            }\n        });\n\n        return toReturn;\n    }\n\n    editEdge(newWeight: number | null, extraAttrs: any = {}): EdgeImmut {\n        // Merge existing and new attributes favoring the new\n        const attributes = Object.assign({}, this.attributes);\n        Object.keys(extraAttrs).forEach(key => {\n            attributes[key] = extraAttrs[key];\n        });\n\n        return new EdgeImmut(\n            this.getFrom(),\n            this.getTo(),\n            newWeight === null ? this.getWeight() : newWeight,\n            attributes\n        );\n    }\n}\n","\"use strict\";\n\nimport {List} from 'immutable';\nimport {default as NodeImmut, NodeImmutPlain} from './NodeImmut';\nimport {default as EdgeImmut, EdgeImmutPlain} from './EdgeImmut';\n\ninterface NodeMapping {\n    [key: number]: number\n}\n\nconst filterExtraAttr = (data: any, labels: any) => {\n    return Object.keys(data)\n        .filter((key) => !(labels).includes(key))\n        .reduce((obj: any, key) => {\n            obj[key] = data[key];\n            return obj;\n        }, {});\n};\n\nconst filterNodeExtraAttr = (data: any) => {\n    return filterExtraAttr(data, [\"label\", \"id\"]);\n};\n\nconst filterEdgeExtraAttr = (data: any) => {\n    return filterExtraAttr(data, [\"from\", \"to\", \"weight\"]);\n};\n\nconst genericEdgesToImmutEdges = (edges: any, nodeMap: NodeMapping = {}): boolean | List<EdgeImmut> => {\n    if (edges === null) {\n        return false;\n    }\n\n    let newEdges: List<EdgeImmut> = List();\n\n    if (typeof edges === 'object') {\n        edges.forEach((edge: any) => {\n            let weight = 0;\n            let from = 0;\n            let to = 0;\n            let extraAttrs = {};\n\n            if (\"weight\" in edge) {\n                weight = parseFloat(edge.weight);\n            }\n            if (\"from\" in edge) {\n                from = nodeMap[edge.from];\n            }\n            if (\"to\" in edge) {\n                to = nodeMap[edge.to];\n            }\n            if (\"attributes\" in edge) {\n                extraAttrs = filterEdgeExtraAttr(edge.attributes);\n            }\n            else {\n                extraAttrs = filterEdgeExtraAttr(edge);\n            }\n\n            newEdges = newEdges.push(new EdgeImmut(from, to, weight, extraAttrs));\n        });\n    }\n    else {\n        return false;\n    }\n\n    return newEdges;\n};\n\nconst genericNodesToImmutNodes = (nodes: any): boolean | { nodes: Readonly<List<NodeImmut>>; map: { [key: number]: number } } => {\n    if (nodes === null) {\n        return false;\n    }\n\n    let newNodes: List<NodeImmut> = List();\n    const nodeMap: NodeMapping = {};\n\n    if (typeof nodes === \"number\") {\n        // Create the nodes\n        for (let i = 0; i < Math.floor(nodes); i++) {\n            newNodes = newNodes.set(i, new NodeImmut(i));\n            nodeMap[i] = i;\n        }\n    }\n    else if (typeof nodes === 'object') {\n        let nodeNum = 0;\n        nodes.forEach((n: any) => {\n            const id = nodeNum++;\n            let label = null;\n            let extraAttrs = null;\n\n            if (\"label\" in n) {\n                label = n.label;\n            }\n            if (\"id\" in n) {\n                nodeMap[n.id] = id;\n                if (\"label\" in n && n.label === n.id.toString()) {\n                    label = id.toString();\n                }\n            }\n            else {\n                nodeMap[id] = id;\n            }\n            if (\"attributes\" in n) {\n                extraAttrs = filterNodeExtraAttr(n.attributes);\n            }\n            else {\n                extraAttrs = filterNodeExtraAttr(n);\n            }\n\n            newNodes = newNodes.set(id, new NodeImmut(id, label, extraAttrs));\n        });\n    }\n    else {\n        return false;\n    }\n\n    return {nodes: Object.freeze(newNodes), map: nodeMap};\n};\n\nexport default class GraphImmut {\n    private readonly directed: Readonly<boolean>;\n    private readonly weighted: Readonly<boolean>;\n    private readonly nodes: Readonly<List<NodeImmut>>;\n    private readonly numNodes: Readonly<number>;\n    private readonly edges: Readonly<List<EdgeImmut>>;\n    private readonly numEdges: Readonly<number>;\n\n    constructor(nodes: number | Readonly<List<NodeImmut>> | NodeImmutPlain[],\n                edges: null | Readonly<List<EdgeImmut>> | EdgeImmutPlain[] = null,\n                directed = false, weighted = false) {\n        this.directed = Object.freeze(directed);\n        this.weighted = Object.freeze(weighted);\n        let nodeMap = {};\n\n        // Make Nodes\n        if (typeof nodes === \"number\" || (typeof nodes === \"object\" && !(nodes instanceof List))) {\n            const n = genericNodesToImmutNodes(nodes);\n            if (typeof n !== \"object\") {\n                throw new Error(\"Unable to parse node input!\");\n            }\n            this.nodes = n.nodes;\n            nodeMap = n.map;\n        }\n        else if (nodes instanceof List) {\n            this.nodes = nodes as List<NodeImmut>;\n        }\n        else {\n            throw new Error(\"Illegal type of 'node' input to GraphImmut constructor\");\n        }\n        this.nodes = Object.freeze(this.nodes);\n        this.numNodes = Object.freeze(this.nodes.size);\n\n        // If we are given edges, add them to the graph\n        if (edges !== null && typeof edges === \"object\" && !(edges instanceof List)) {\n            const e = genericEdgesToImmutEdges(edges, nodeMap);\n            if (typeof e !== \"object\") {\n                throw new Error(\"Unable to parse Edge input\");\n            }\n            this.edges = e;\n        }\n        else if (edges instanceof List) {\n            this.edges = edges as List<EdgeImmut>;\n        }\n        else {\n            this.edges = List();\n        }\n        this.edges = Object.freeze(this.edges);\n        this.numEdges = Object.freeze(this.edges.size);\n\n        if (new.target === GraphImmut) {\n            Object.freeze(this);\n        }\n    }\n\n    getNode(id: number, rich = false): NodeImmut | NodeImmutPlain | boolean {\n        if (id >= this.numNodes) {\n            return false;\n        }\n        const node = this.nodes.get(id);\n        if(typeof node === \"undefined\"){\n            return false;\n        }\n        if (rich) {\n            return node;\n        }\n        return node.toPlain();\n    }\n\n    getNodeForColor(id: number): NodeImmut | boolean {\n        const node = this.nodes.get(id);\n        if (typeof node === \"undefined\") {\n            return false;\n        }\n\n        return node;\n    }\n\n    addNode(data: any = null): GraphImmut {\n        if (data === null) {\n            data = {};\n        }\n\n        const id = this.numNodes;\n        if (!(\"label\" in data)) {\n            data.label = id.toString();\n        }\n\n        const extraAttrs = filterNodeExtraAttr(data);\n\n        return new GraphImmut(this.nodes.set(id, new NodeImmut(id, data.label, extraAttrs)),\n            this.edges, this.directed, this.weighted);\n    }\n\n    editNode(id: number, data: any): any {\n        if (!this.nodes.has(id)) {\n            return false;\n        }\n\n        const extraAttrs = filterNodeExtraAttr(data);\n        if (!(\"label\" in data)) {\n            data.label = (this.getNode(id, true) as NodeImmut).getLabel();\n        }\n        return new GraphImmut(this.nodes.set(id, (this.getNode(id, true) as NodeImmut).editNode(data.label, extraAttrs)),\n            this.edges, this.directed, this.weighted);\n    }\n\n    deleteNode(id: number): GraphImmut | boolean {\n        // Make sure the ID exists\n        if (!(id >= 0 && id < this.numNodes)) {\n            return false;\n        }\n\n        const nodeMap: NodeMapping = {}; // Map for old IDs to new ones since we're deleting an entry\n\n        // Remove it from the node list\n        let nodeCount = 0;\n        const newNodes: List<NodeImmut> = this.nodes\n            .filter((n) => {\n                if (n.getID() === id) {\n                    nodeMap[n.getID()] = -1;\n                }\n                else {\n                    nodeMap[n.getID()] = nodeCount++;\n                }\n\n                return n.getID() !== id;\n            })\n            .map((node) => {\n                let label = node.getLabel();\n                if (node.getID().toString() === label) {\n                    label = nodeMap[node.getID()].toString();\n                }\n\n                return new NodeImmut(nodeMap[node.getID()], label, node.getAllAttributes());\n            }) as List<NodeImmut>;\n\n        // Remap edges\n        const newEdges: List<EdgeImmut> = this.edges\n            .filter((edge) => {\n                return !(edge.getFrom() === id || edge.getTo() === id);\n            })\n            .map((edge) => {\n                return new EdgeImmut(nodeMap[edge.getFrom()], nodeMap[edge.getTo()], edge.getWeight(), edge.getAllAttributes());\n            }) as List<EdgeImmut>;\n\n        return new GraphImmut(newNodes, newEdges, this.directed, this.weighted);\n    }\n\n    addEdge(from: number, to: number, weight: any = 1): GraphImmut {\n        if (!this.weighted) {\n            weight = 1; // Ensure that edge weights are 1 if this is an unweighted graph\n        }\n\n        const newEdges = this.edges.push(new EdgeImmut(from, to, parseFloat(weight)));\n        return new GraphImmut(this.nodes, newEdges, this.directed, this.weighted);\n    }\n\n    deleteEdge(from: number, to: number, weight: any = null, deleteAll = true): GraphImmut {\n        if (weight !== null) {\n            weight = parseFloat(weight);\n        }\n\n        let foundOneEdge = false;\n        const newEdges: List<EdgeImmut> = this.edges.filter((edge) => {\n            // If we're not deleting everything and we have found one edge, then do not filter anymore\n            if (foundOneEdge && !deleteAll) {\n                return true;\n            }\n\n            // If we have an exact match\n            if (edge.getFrom() === from && edge.getTo() === to && (weight === null || edge.getWeight() === weight)) {\n                foundOneEdge = true;\n                return false; // Remove this edge\n            }\n\n            // If we are undirected, check for opposing matches\n            if (!this.directed) {\n                if (edge.getFrom() === to && edge.getTo() === from && (weight === null || edge.getWeight() === weight)) {\n                    foundOneEdge = true;\n                    return false; // Remove this edge\n                }\n            }\n\n            return true;\n        }) as List<EdgeImmut>;\n\n        return new GraphImmut(this.nodes, newEdges, this.directed, this.weighted);\n    }\n\n    editEdge(from: number, to: number, newWeight: any, oldWeight: any = null, color: string | null = null): GraphImmut | boolean {\n        let foundFirst = false;\n\n        if (oldWeight !== null) {\n            oldWeight = parseFloat(oldWeight);\n        }\n\n        let newEdges = this.edges;\n        this.edges.forEach((edge, index) => {\n            if (foundFirst) {\n                return;\n            }\n\n            if (((edge.getFrom() === from && edge.getTo() === to)\n                || (!this.isDirected() && edge.getFrom() === to && edge.getTo() === from))\n                && (oldWeight === null || edge.getWeight() === oldWeight)) {\n\n                if (color !== null) {\n                    newEdges = newEdges.set(index,\n                        edge.editEdge(newWeight === null ? null : parseFloat(newWeight),\n                            {color: color}));\n                }\n                else {\n                    newEdges = newEdges.set(index, edge.editEdge(newWeight === null ? null : parseFloat(newWeight)));\n                }\n                foundFirst = true;\n            }\n        });\n\n        return new GraphImmut(this.nodes, newEdges, this.directed, this.weighted);\n    }\n\n    getAllNodes(rich = false): NodeImmut[] | NodeImmutPlain[] {\n        if (rich) {\n            return this.nodes.toArray();\n        }\n        return this.nodes.map((node) => {\n            return node.toPlain();\n        }).toArray();\n    }\n\n    getAllNodesAsImmutableList(): Readonly<List<NodeImmut>> {\n        return this.nodes;\n    }\n\n    getAllEdgesAsImmutableList(): Readonly<List<EdgeImmut>> {\n        return this.edges;\n    }\n\n    getAllEdges(rich = false): EdgeImmut[] | EdgeImmutPlain[] {\n        if (rich) {\n            return this.edges.toArray();\n        }\n        return this.edges.map((edge) => {\n            return edge.toPlain();\n        }).toArray();\n    }\n\n    getNumberOfNodes(): number {\n        return this.numNodes;\n    }\n\n    getNumberOfEdges(): number {\n        return this.numEdges;\n    }\n\n    getAllOutDegrees(): number[] {\n        const degrees: number[] = [];\n        this.nodes.forEach((_, i) => {\n            degrees[i] = 0;\n        });\n        this.edges.forEach((edge) => {\n            if (degrees.includes(edge.getFrom())) {\n                degrees[edge.getFrom()]++;\n            }\n            else {\n                degrees[edge.getFrom()] = 1;\n            }\n        });\n\n        return degrees;\n    }\n\n    asWeighted(): GraphImmut {\n        return new GraphImmut(this.nodes, this.edges.map((edge) => {\n            return edge.editEdge(1);\n        }) as List<EdgeImmut>, this.directed, true);\n    }\n\n    asUnweighted(): GraphImmut {\n        return new GraphImmut(this.nodes, this.edges.map((edge) => {\n            return edge.editEdge(1);\n        }) as List<EdgeImmut>, this.directed, false);\n    }\n\n    asDirected(doubleEdges = false): GraphImmut {\n        if (!doubleEdges) {\n            return new GraphImmut(this.nodes, this.edges, true, this.weighted);\n        }\n\n        let newEdges = this.edges;\n        this.edges.forEach((edge) => {\n            newEdges = newEdges.push(new EdgeImmut(edge.getTo(), edge.getFrom(), edge.getWeight(), edge.getAllAttributes()));\n        });\n\n        return new GraphImmut(this.nodes, newEdges, true, this.weighted);\n    }\n\n    asUndirected(): GraphImmut {\n        let newEdges: List<EdgeImmut> = List();\n        const addedEdges: { [key: string]: null } = {};\n\n        this.edges.forEach((edge) => {\n            let from = edge.getFrom();\n            let to = edge.getTo();\n            if (to < from) {\n                from = to;\n                to = edge.getFrom();\n            }\n            if (!(`${from}_${to}` in addedEdges)) {\n                addedEdges[`${from}_${to}`] = null;\n                newEdges = newEdges.push(new EdgeImmut(from, to, edge.getWeight(), edge.getAllAttributes()));\n            }\n        });\n\n        return new GraphImmut(this.nodes, newEdges, false, this.weighted);\n    }\n\n    asChangedDirectedWeighted(directed: boolean, weighted: boolean): GraphImmut {\n        let G: GraphImmut = this;\n        if (directed && !this.directed) {\n            G = G.asDirected();\n        }\n        else if (!directed && this.directed) {\n            G = G.asUndirected();\n        }\n\n        if (weighted && !this.weighted) {\n            G = G.asWeighted();\n        }\n        else if (!weighted && this.weighted) {\n            G = G.asUnweighted();\n        }\n\n        return G;\n    }\n\n    // MH: Adjacency matrix\n    getNodeAdjacency(id: number): number[] {\n        const adj: number[] = [];\n        this.edges.forEach((edge) => {\n            if (edge.getFrom() === id) {\n                adj.push(edge.getTo());\n            }\n            else if (!this.directed && edge.getTo() === id) {\n                adj.push(edge.getFrom());\n            }\n        });\n\n        return adj;\n    }\n\n    getFullAdjacency(): number[][] {\n        const adj: number[][] = [];\n        this.nodes.forEach((n) => {\n            adj[n.getID()] = this.getNodeAdjacency(n.getID());\n        });\n\n        return adj;\n    }\n\n    areAdjacent(id1: number, id2: number): boolean {\n        return this.getNodeAdjacency(id1).includes(id2);\n    }\n\n    getEdgesBetween(id1: number, id2: number): EdgeImmut[] {\n        const edgeList: EdgeImmut[] = [];\n        if (id1 >= this.numNodes || id2 >= this.numNodes) {\n            return edgeList;\n        }\n\n        this.edges.forEach((edge) => {\n            if (!this.directed && edge.getFrom() === id2 && edge.getTo() === id1) {\n                edgeList.push(edge);\n            }\n\n            if (edge.getFrom() === id1 && edge.getTo() === id2) {\n                edgeList.push(edge);\n            }\n        });\n\n        return edgeList;\n    }\n\n    getMinWeightEdgeBetween(id1: number, id2: number): number {\n        let minWeight = Infinity;\n        this.getEdgesBetween(id1, id2).forEach((edge) => {\n            if (edge.getWeight() < minWeight) {\n                minWeight = edge.getWeight();\n            }\n        });\n\n        return minWeight;\n    }\n\n    // Take a multigraph and reduce all multiple edges to a single edge, weighted using the reducer\n    reduceMultiGraph(reducer: (a: number, b: number) => number = Math.min, initialValue: any = Infinity): GraphImmut {\n        const multiEdges: EdgeImmutPlain[] = [];\n        this.nodes.forEach((node) => {\n            // If we have duplicates\n            const adj = this.getNodeAdjacency(node.getID());\n            const uniques = new Set(adj);\n            if (uniques.size < adj.length) {\n                uniques.forEach((to) => {\n                    const newWeight = this.getEdgesBetween(node.getID(), to).reduce((acc, edge) => {\n                        return reducer(acc, edge.getWeight());\n                    }, initialValue);\n\n                    multiEdges.push({from: node.getID(), to, weight: parseFloat(newWeight)});\n                });\n            }\n        });\n\n        // Remove all multigraph edges and replace them with single new edges\n        let newEdges = this.edges.filter((edge) => {\n            let keep = true;\n            multiEdges.forEach((duplicateEdge) => {\n                if (edge.getFrom() === duplicateEdge.from && edge.getTo() === duplicateEdge.to) {\n                    keep = false;\n                }\n            });\n\n            return keep;\n        }) as List<EdgeImmut>;\n        multiEdges.forEach((edge) => {\n            newEdges = newEdges.push(new EdgeImmut(edge.from, edge.to, edge.weight));\n        });\n\n        return new GraphImmut(this.nodes, newEdges, this.directed, this.weighted);\n    }\n\n    isWeighted() {\n        return this.weighted;\n    }\n\n    isDirected() {\n        return this.directed;\n    }\n}\n","\"use strict\";\n\nimport help from \"../../util/genericHelpers\";\n\nexport interface NodeImmutPlain {\n    id: Readonly<number>;\n    label: string;\n    [key: string]: any;\n    [key: number]: any;\n}\n\nconst capitalLetters = help.deepFreeze([\n    \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"\n]) as string[];\n\nexport default class NodeImmut {\n    private readonly id: Readonly<number>;\n    private readonly label: Readonly<string>;\n    private readonly attributes: any;\n\n    constructor(id: any, label: null | string = null, extraAttrs: null | any = null) {\n        if (label === null) {\n            // MH: If the id is an integer number and between 0 and 25, than take a capital letter from the alphabet as label\n            if (typeof id === \"number\" && (id >= 0 && id <=25)) {\n                this.label = capitalLetters[id];\n            } else {\n                this.label = id.toString();\n            }\n            \n        } else {\n            this.label = label;\n        }\n\n        this.attributes = {};\n        if (extraAttrs !== null && typeof extraAttrs === \"object\") {\n            Object.keys(extraAttrs).forEach(key => {\n                this.attributes[key] = Object.freeze(extraAttrs[key]);\n            });\n        }\n\n        this.attributes = Object.freeze(this.attributes);\n        this.label = Object.freeze(this.label);\n        this.id = Object.freeze(id);\n\n        if (new.target === NodeImmut) {\n            Object.freeze(this);\n        }\n    }\n\n    toPlain(): NodeImmutPlain {\n        const toReturn: NodeImmutPlain = { id: this.id, label: this.label };\n        Object.keys(this.attributes).forEach(key => {\n            if (!(key in toReturn)) {\n                toReturn[key] = this.attributes[key];\n            }\n        });\n\n        return toReturn;\n    }\n\n    getID(): Readonly<number> {\n        return this.id;\n    }\n\n    getLabel(): Readonly<string> {\n        return this.label;\n    }\n\n    getAttribute(attribute: string | number): any {\n        if (attribute in this.attributes) {\n            return this.attributes[attribute];\n        }\n\n        return null;\n    }\n\n    getAllAttributes(): { [key: string]: any; [key: number]: any } {\n        return this.attributes;\n    }\n\n    editNode(label: any = null, extraAttrs: any = null): NodeImmut {\n        if (label === null) {\n            label = this.getLabel();\n        }\n\n        // Merge existing and new attributes favoring the new\n        const attributes = Object.assign({}, this.attributes);\n        if (extraAttrs !== null) {\n            Object.keys(extraAttrs).forEach(key => {\n                attributes[key] = extraAttrs[key];\n            });\n        }\n\n        return new NodeImmut(this.getID(), label, attributes);\n    }\n}\n","\"use strict\";\n\nimport { DataSet } from 'vis-data';\nimport { Node, Edge } from 'vis-network';\nimport help from './util/genericHelpers';\nimport GraphImmut from './classes/GraphImmut/GraphImmut';\nimport { EdgeImmutPlain } from \"./classes/GraphImmut/EdgeImmut\";\nimport NodeImmut, { NodeImmutPlain } from \"./classes/GraphImmut/NodeImmut\";\nimport { GraphPlain } from \"./util/predefinedGraphs\";\n\ninterface UpToDateProperties {\n    name: string;\n    upToDate: boolean;\n    type: string;\n    always?: boolean;\n    applyFunc?: (ignoreDuplicate?: boolean) => any;\n    [index: string]: undefined | string | boolean | ((ignoreDuplicate?: boolean) => any)\n}\n\ninterface GraphProperties {\n    vertices: number;\n    edges: number;\n    colormode: number;\n    eulerian: boolean;\n    \"Approx. Chromatic Welsh\": number | null;\n    \"Connected Components\": number | null;\n    \"Strongly Connected Components\": number | null;\n    cyclic: boolean;\n\n    [index: string]: boolean | number | null;\n}\n\ninterface GraphStateData {\n    stronglyConnectedComponents: null | { [key: number]: number };\n    connectedComponents: null | { [key: number]: number };\n    graphColoringWelsh: null | number[];\n\n    [index: string]: null | number[] | { [key: number]: number };\n}\n\nexport interface AddNodeI {\n    id?: number\n    label: string;\n    x: number;\n    y: number;\n    color?: string;\n}\n\nexport interface GraphStateHistory {\n    upToDate: UpToDateProperties[];\n    state: GraphStateData;\n    graph: GraphImmut;\n    graphProperties: GraphProperties;\n    [index: string]: UpToDateProperties[] | GraphStateData | GraphImmut | GraphProperties;\n}\n\nconst getInt = (v: string | number): number => {\n    if (typeof v === 'number') {\n        return v;\n    }\n    return parseInt(v);\n};\n\nexport default class GraphState {\n    public static workerPool: (Worker | null)[] = [];\n    public static backHistory: GraphStateHistory[] = [];\n    public static forwardHistory: GraphStateHistory[] = [];\n    public static maxHistory = 10;\n    public static upToDate: UpToDateProperties[] = [\n        {\n            name: \"Approx. Chromatic Welsh\", upToDate: false, type: \"property\",\n            applyFunc: () => {\n                return window.ui.makeAndPrintGraphColoringWelsh();\n            }\n        },\n        {\n            name: \"graphColoringWelsh\", upToDate: false, type: \"state\",\n            applyFunc: () => {\n                return window.ui.makeAndPrintGraphColoringWelsh();\n            }\n        },\n        { name: \"vertices\", upToDate: true, always: true, type: \"property\" },\n        { name: \"edges\", upToDate: true, always: true, type: \"property\" },\n        {\n            name: \"eulerian\", upToDate: false, type: \"property\",\n            applyFunc: (i) => {\n                return window.ui.makeAndPrintEulerian(i);\n            }\n        },\n        {\n            name: \"Connected Components\", upToDate: false, type: \"property\",\n            applyFunc: () => {\n                window.ui.getAlgorithms().find((v) => v.name === 'Connected Components')!.applyFunc();\n            }\n        },\n        {\n            name: \"connectedComponents\", upToDate: false, type: \"state\",\n            applyFunc: () => {\n                window.ui.getAlgorithms().find((v) => v.name === 'Connected Components')!.applyFunc();\n            }\n        },\n        {\n            name: \"Strongly Connected Components\", upToDate: false, type: \"property\",\n            applyFunc: () => {\n                window.ui.getAlgorithms().find((v) => v.name === 'Strongly Connected Components')!.applyFunc();\n            }\n        },\n        {\n            name: \"stronglyConnectedComponents\", upToDate: false, type: \"state\",\n            applyFunc: () => {\n                window.ui.getAlgorithms().find((v) => v.name === 'Strongly Connected Components')!.applyFunc();\n            }\n        },\n        {\n            name: \"cyclic\", upToDate: false, type: \"property\",\n            applyFunc: () => {\n                return window.ui.makeAndPrintIsCyclic();\n            }\n        },\n    ];\n    public static state: GraphStateData = {\n        stronglyConnectedComponents: null,\n        connectedComponents: null,\n        graphColoringWelsh: null,\n    };\n    public static graph: GraphImmut;\n    public static graphProperties: GraphProperties = {\n        vertices: 0,\n        edges: 0,\n        colormode: 0,\n        eulerian: false,\n        \"Approx. Chromatic Welsh\": null,\n        \"Connected Components\": null,\n        \"Strongly Connected Components\": null,\n        cyclic: false,\n    };\n\n    static setUpToDate(value = false, listOptions?: string[]) {\n        const all = listOptions === null || typeof listOptions === \"undefined\";\n        let property = false;\n        GraphState.upToDate.forEach((v) => {\n            if ((!(\"always\" in v) || !v.always) && (all || listOptions!.indexOf(v.name) > -1)) {\n                v.upToDate = value;\n                if (v.type === \"property\") {\n                    property = true;\n                }\n            }\n        });\n        if (property) {\n            GraphState.makeAndPrintProperties();\n        }\n    }\n\n    static async getProperty(property: keyof GraphProperties, updateIfNotUpdated = false, ignoreDuplicate = false): Promise<any> {\n        const a = GraphState.upToDate.find((v) => {\n            return (\"name\" in v && v.name === property);\n        })!;\n        if (!a.upToDate) {\n            if (\"applyFunc\" in a && typeof a.applyFunc === \"function\" && updateIfNotUpdated) {\n                await a.applyFunc(ignoreDuplicate);\n            }\n            else {\n                return null;\n            }\n        }\n        if (a.type === \"state\") {\n            return Promise.resolve(GraphState.state[property]);\n        }\n        return Promise.resolve(GraphState.graphProperties[property]);\n    }\n\n    static async makeAndPrintProperties(recalcLong = false) {\n        const directional = window.settings.getOption(\"direction\");\n\n        GraphState.graphProperties.vertices = GraphState.graph.getNumberOfNodes();\n        GraphState.graphProperties.edges = GraphState.graph.getNumberOfEdges();\n\n        if (!directional) {\n            await GraphState.getProperty(\"eulerian\", true, true);\n        }\n\n        const p = Object.keys(GraphState.graphProperties);\n        if (recalcLong) {\n            p.forEach(async (v) => {\n                await GraphState.getProperty(v, true);\n            });\n        }\n\n        const printableProperties: any = {};\n        await Promise.all(p.map(async (v) => {\n            printableProperties[v] = await GraphState.getProperty(v);\n        }));\n\n        GraphState.printGraphProperties(printableProperties);\n    }\n\n    static printGraphProperties(properties: any) {\n        let p = \"\";\n        Object.keys(properties).forEach((k) => {\n            if (properties[k] !== null) {\n                p += `${help.toTitleCase(k)}: ${properties[k]}\\n`;\n            }\n        });\n        p = p.trim();\n        p = help.htmlEncode(p);\n        document.getElementById(\"graphProps\")!.innerHTML = `<p class='nav-link'>${p}</p>`;\n    }\n\n    private static updateGraph(graph = GraphState.graph) {\n        let nodes = graph.getAllNodes() as NodeImmutPlain[];\n        let edges = graph.getAllEdges() as EdgeImmutPlain[];\n        if (!window.settings.getOption(\"customColors\")) {\n            nodes = GraphState.clearColorFromNodes(nodes);\n            edges = GraphState.clearColorFromEdges(edges);\n        }\n        window.main.setData({ nodes, edges });\n    }\n\n    static resetColor() {\n        const saveState = window.settings.getOption(\"customColors\");\n        window.settings.changeOption(\"customColors\", false);\n        this.updateGraph();\n        window.settings.changeOption(\"customColors\", saveState);\n\n    }\n\n    static addEdge(from: number | string, to: number | string, weight = 0, graph = GraphState.graph) {\n        const edgeFrom = getInt(from);\n        const edgeTo = getInt(to);\n        graph = graph.addEdge(edgeFrom, edgeTo, weight);\n        this.updateGraph(graph);\n    }\n\n    static addNode(data: AddNodeI, graph = GraphState.graph) {\n        graph = graph.addNode({ label: data.label, x: data.x, y: data.y, color: data.color });\n        this.updateGraph(graph);\n    }\n\n    static editNode(id: number | string, label: string, color?: string, graph = GraphState.graph) {\n        const iId = getInt(id);\n        graph = graph.editNode(iId, { label, color });\n        window.main.setData(GraphState.getGraphData(graph), false, false);\n    }\n\n    static editEdge(from: number | string, to: number | string,\n        newWeight: number, oldWeight: number, graph = GraphState.graph) {\n        const edgeFrom = getInt(from);\n        const edgeTo = getInt(to);\n        const newGraph = graph.editEdge(edgeFrom, edgeTo, newWeight, oldWeight);\n        if (newGraph instanceof GraphImmut) {\n            window.main.setData(GraphState.getGraphData(newGraph), false, false);\n        }\n    }\n\n    static deleteEdge(from: number | string, to: number | string, weight: (undefined | null | number) = null, graph = GraphState.graph) {\n        const edgeFrom = getInt(from);\n        const edgeTo = getInt(to);\n        graph = graph.deleteEdge(edgeFrom, edgeTo, weight, false);\n        this.updateGraph(graph);\n    }\n\n    static deleteNode(id: number | string, graph = GraphState.graph) {\n        const iId = getInt(id);\n        const newGraph = graph.deleteNode(iId);\n        if (newGraph instanceof GraphImmut) {\n            this.updateGraph(newGraph);\n        }\n    }\n\n    static checkAdjacency(from: number | string, to: number | string , graph = GraphState.graph): boolean {\n        const nodeFrom = getInt(from);\n        const nodeTo = getInt(to);\n        return graph.areAdjacent(nodeFrom, nodeTo);\n    }\n\n    static clearColorFromNodes(nodes: NodeImmutPlain[]): NodeImmutPlain[] {\n        nodes.forEach((v) => {\n            v.color = null;\n        });\n        return nodes;\n    }\n\n    static clearColorFromEdges(edges: EdgeImmutPlain[]): EdgeImmutPlain[] {\n        edges.forEach((v) => {\n            delete v.color;\n        });\n        return edges;\n    }\n\n    static nodeIDToLabel(id: number, graph = GraphState.graph): string {\n        const n = graph.getNode(id, true);\n        if (n !== false && n !== null && n instanceof NodeImmut && n.getLabel().trim().length > 0) {\n            return n.getLabel().trim();\n        }\n\n        return id.toString();\n    }\n\n    // Preferentially search by ID, label, and case-insensitive label\n    static nodeLabelToID(label: string, graph = GraphState.graph) {\n        let n = graph.getAllNodes(true) as NodeImmut[];\n        n = n.filter((node) => {\n            return node.getLabel().toLowerCase() === label.toLowerCase() || node.getID().toString() === label;\n        });\n\n        if (n.length === 0) {\n            return -1;\n        }\n        else if (n.length === 1) {\n            return n[0].getID();\n        }\n\n        let rID = -1;\n        let found = false;\n\n        n.forEach((node) => {\n            if (!found && node.getID().toString() === label) {\n                rID = node.getID();\n                found = true;\n            }\n        });\n\n        if (found) {\n            return rID;\n        }\n\n        n.forEach((node) => {\n            if (!found && node.getLabel() === label) {\n                rID = node.getID();\n                found = true;\n            }\n        });\n\n        if (found) {\n            return rID;\n        }\n\n        n.forEach((node) => {\n            if (!found && node.getLabel().toLowerCase() === label.toLowerCase()) {\n                rID = node.getID();\n                found = true;\n            }\n        });\n\n        return rID;\n    }\n\n    // Return graph as a Vis compatible dataset\n    static getGraphAsDataSet(graph: GraphImmut): { nodes: DataSet<Node>; edges: DataSet<Edge> } {\n        const d = GraphState.getGraphData(graph);\n        if (graph.isWeighted()) {\n            d.edges.forEach((e) => {\n                e.label = e.weight.toString();\n            });\n        }\n        d.edges.forEach((e) => {\n            if ('color' in e) {\n                e.color = { color: e.color };\n            }\n        });\n\n        return { nodes: new DataSet(d.nodes as Node[]), edges: new DataSet(d.edges as Edge[]) };\n    }\n\n    static setLocations(locations: { [key: string]: { x: number; y: number } }, graph = GraphState.graph): GraphImmut {\n        let newNodes = graph.getAllNodesAsImmutableList();\n        Object.keys(locations).forEach((i) => {\n            const v = locations[i];\n            const node = newNodes.get(parseInt(i))!;\n            // Only change when there is actually a new position\n            if (node.getAttribute(\"x\") !== v.x || node.getAttribute(\"y\") !== v.y) {\n                // Batch up all changes that we'll be making\n                newNodes = newNodes.set(parseInt(i), node.editNode(node.getLabel(), { x: v.x, y: v.y }));\n            }\n        });\n\n        return new GraphImmut(newNodes, graph.getAllEdgesAsImmutableList(), graph.isDirected(), graph.isWeighted());\n    }\n\n    static getGraphData(graph = GraphState.graph, clearNodeColors = false, clearEdgeColors = false): GraphPlain {\n        const nodes = graph.getAllNodes() as NodeImmutPlain[];\n        const edges = graph.getAllEdges() as EdgeImmutPlain[];\n        return {\n            nodes: clearNodeColors ? GraphState.clearColorFromNodes(nodes) : nodes,\n            edges: clearEdgeColors ? GraphState.clearColorFromEdges(edges) : edges,\n            directed: graph.isDirected(),\n            weighted: graph.isWeighted()\n        };\n    }\n}\n","import EN_US from \"src/EN_US\";\n\nexport enum Languages {\n    EN_US = \"EN_US\",\n\n}\n\nexport let current = {} as typeof EN_US;\n\n\nexport const setLanguage = async () => {\n    current = (await import(`../${window.settings.getOption(\"language\") || Languages.EN_US}.ts`)).default;\n};\n","\"use strict\";\n\nimport gHelp from './util/graphHelpers';\nimport help, { ModalFormRow } from './util/genericHelpers';\nimport randomColor from 'randomcolor';\nimport GraphState, { AddNodeI, GraphStateHistory } from './graphState';\nimport GraphImmut from \"./classes/GraphImmut/GraphImmut\";\nimport { NodeImmutPlain } from \"./classes/GraphImmut/NodeImmut\";\nimport { EdgeImmutPlain } from \"./classes/GraphImmut/EdgeImmut\";\nimport { GraphPlain } from \"./util/predefinedGraphs\";\nimport { Network, Node as VisNode, Edge } from \"vis-network\";\nimport { DataSet } from \"vis-data\";\nimport * as languages from \"./languages\";\n\n\nexport interface MainI {\n    graphState: typeof GraphState;\n    container: HTMLElement;\n    visWeightEdgeEdit: (data: VisEditEdgeInternal, callback: Function) => void;\n    visOptions: {\n        edges: { smooth: boolean};\n        interaction: { hover: boolean };\n        manipulation: {\n            addNode: (data: AddNodeI, callback: Function) => void;\n            editNode: (data: AddNodeI, callback: Function) => void;\n            addEdge: (data: VisEdgeInternal, callback?: Function) => void;\n            editEdge: (data: VisEdgeInternal, callback: Function) => void;\n            deleteEdge: (data: { edges: string[] }, callback?: Function) => void;\n            deleteNode: (data: { nodes: string[] }, callback: Function) => void\n        },\n        locale?: string,\n        locales?: any,\n    };\n    cancelEdit: (callback: Function) => void;\n    saveData: (data: any, callback: Function, operation: string, label: string, color: string) => Promise<void>;\n    nodeLabelIDValidator: (v: string) => (boolean | string);\n    applyColors: () => Promise<void>;\n    setData: (data: GraphPlain, recalcProps?: boolean, graphChanged?: boolean, rearrangeGraph?: boolean) => void;\n    saveState: () => void;\n    getStateForSaving: () => GraphStateHistory;\n    undo: () => void;\n    redo: () => void;\n    applyState: (undo?: boolean, newState?: any) => void;\n    saveStateLocalStorage: () => void;\n    shuffleNetworkLayout: () => void;\n    randomizeNetworkLayoutSeed: (network: VisNetworkInternals) => void;\n    addNetworkListeners: (network: Network) => void\n}\n\ninterface VisNetworkEvent {\n    edges: DataSet<Edge>;\n    nodes: DataSet<VisNode>;\n}\n\ninterface VisNetworkInternals extends Network {\n    layoutEngine: {\n        randomSeed: number,\n        initialRandomSeed: number\n    }\n}\n\ninterface VisEditEdgeInternal {\n    from: { id: string | number };\n    to: { id: string | number };\n    label?: string\n}\n\ninterface VisEdgeInternal {\n    from: string | number;\n    to: string | number;\n    id: string;\n    label?: string\n}\n\nconst customColorPallete = {\n    \"1: blue\": \"DEFAULT\",\n    \"2: red\": \"#ff3f3f\",\n    \"3: orange\": \"#ffbf64\",\n    \"4: yellow\": \"#ffff00\",\n    \"5: green\": \"#00ff80\",\n    \"6: violet\": \"#f964ff\"\n};\n  \n\n //    { type: \"select\", label: \"Color\", optionValues: [0, 1, 2, 3, 4, 5], optionText: [\"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"violet\"], initialValue: 0}\n                //]);\n// const basicColors = ['#ff3f3f ', '#ffbf64', '#ffff00', '#00ff80', '#00a0ff', '#f964ff'];\n\nconst self: MainI = {\n    graphState: GraphState,\n    container: document.getElementById('network')!,\n    // Function used to overwrite the edge edit functionality when weights are active\n    visWeightEdgeEdit: (data: VisEditEdgeInternal, callback) => {\n        help.showFormModal(($modal, vals) => {\n            callback(null);\n            $modal.modal(\"hide\");\n            const value = parseFloat(vals[0]);\n            GraphState.editEdge(data.from.id, data.to.id, value, parseFloat(data.label!));\n        }, languages.current.EditEdge, languages.current.Save, [\n            {\n                type: \"numeric\",\n                label: languages.current.WeightCapacity,\n                initialValue: parseFloat(data.label!)\n            }\n        ]);\n    },\n    visOptions: {\n        edges: { smooth: false},\n        interaction: { hover: true },\n        manipulation: {\n            addNode: async (data, callback) => {\n                const customColors = window.settings.getOption(\"customColors\");\n                const options: ModalFormRow[] = [\n                    {\n                        type: \"html\",\n                        initialValue: `<p>${help.stringReplacement(languages.current.NodeId, await GraphState.getProperty(\"vertices\"))}</p>`\n                    },\n\n                    { type: \"text\", label: languages.current.LabelLabel, initialValue: gHelp.generateLabelFromNumber(await GraphState.getProperty(\"vertices\")) }\n\n                ];\n                if (customColors) {\n                    options.push({ type: \"select\", label: languages.current.Color, optionText: Object.keys(customColorPallete), optionValues: Object.values(customColorPallete) });\n                }\n                const $popup = help.makeFormModal(languages.current.AddNode, languages.current.Save, options);\n\n                $popup.on(\"click\", \".btn-success\", () => {\n                    $popup.modal(\"hide\");\n                    self.saveData(data, callback, \"add\", $popup.find(\"input\").first().val() as string, $popup.find(\"select\").first().val() as string);\n                }).on(\"click\", \".btn-cancel\", () => {\n                    $popup.modal(\"hide\");\n                    self.cancelEdit(callback);\n                }).on(\"hidden.bs.modal\", () => {\n                    $popup.remove();\n                    self.cancelEdit(callback);\n                }).modal(\"show\");\n            },\n            editNode: (data, callback) => {\n                const customColors = window.settings.getOption(\"customColors\");\n                const initialColor = Object.getOwnPropertyNames(data.color).includes(\"background\") ? (data.color as any).background : \"white\";\n\n                const options: ModalFormRow[] = [\n                    {\n                        type: \"html\",\n                        initialValue: `<p>${help.stringReplacement(languages.current.NodeId, data.id + \"\")}</p>`\n                    },\n                    { type: \"text\", label: languages.current.LabelLabel, initialValue: data.label },\n\n                //    { type: \"select\", label: \"Color\", optionValues: [0, 1, 2, 3, 4, 5], optionText: [\"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"violet\"], initialValue: 0}\n                //]);\n\n\n                ];\n                if (customColors) {\n                    options.push({ type: \"select\", label: languages.current.Color, optionText: Object.keys(customColorPallete), optionValues: Object.values(customColorPallete), initialValue: initialColor });\n                }\n                const $popup = help.makeFormModal(languages.current.EditNode, languages.current.Save, options);\n\n                $popup.on(\"click\", \".btn-success\", () => {\n                    $popup.modal(\"hide\");\n                    self.saveData(data, callback, \"editNode\", $popup.find(\"input\").first().val() as string, $popup.find(\"select\").first().val() as string);\n                }).on(\"click\", \".btn-cancel\", () => {\n                    $popup.modal(\"hide\");\n                    self.cancelEdit(callback);\n                }).on(\"hidden.bs.modal\", () => {\n                    $popup.remove();\n                    self.cancelEdit(callback);\n                }).modal(\"show\");\n            },\n            addEdge: (data, callback) => {\n                const apply = () => {\n                    if (typeof callback === \"function\") {\n                        callback(null);\n                    }\n                    GraphState.addEdge(data.from, data.to);\n                };\n                if (data.from === data.to) {\n                    alert(languages.current.ConnectNodeToItselfAlert);\n                    return;\n                }\n                else if (GraphState.checkAdjacency(data.from, data.to)) {\n                    alert(languages.current.AlreadyConnectedNodes);\n                    return;\n                }\n\n                apply();\n            },\n            /*addEdge: (data, callback) => {\n                const apply = () => {\n                    if (typeof callback === \"function\") {\n                        callback(null);\n                    }\n                    GraphState.addEdge(data.from, data.to);\n                };\n                if (data.from === data.to) {\n                    if (confirm(languages.current.ConnectNodeToItselfConfirmation)) {\n\n                        apply();\n                    }\n                    return;\n                }\n\n                apply();\n            },*/\n            editEdge: (data, callback) => {\n                callback(null);\n                self.visOptions.manipulation.deleteEdge({ edges: [data.id] });\n                self.visOptions.manipulation.addEdge(data);\n            },\n            deleteEdge: (data, callback) => {\n                if (typeof callback === \"function\") {\n                    callback(null);\n                }\n                data.edges.forEach((v: any) => {\n                    let weight = null;\n                    const edge = (window.network as any).body.data.edges.get(v);\n                    const weightFromLabel = edge.label;\n                    if (typeof weightFromLabel !== \"undefined\") {\n                        weight = parseFloat(weightFromLabel);\n                    }\n\n                    GraphState.deleteEdge(edge.from, edge.to, weight);\n                });\n            },\n            deleteNode: (data, callback) => {\n                callback(null);\n                data.nodes.forEach((v: string) => {\n                    GraphState.deleteNode(v);\n                });\n            },\n        },\n    },\n\n    cancelEdit: (callback) => {\n        if (typeof callback === \"function\") {\n            callback(null);\n        }\n    },\n\n    saveData: async (data, callback, operation, label, color) => {\n        callback(null);\n\n        data.label = label;\n        data.color = color;\n        if (color === \"DEFAULT\") {\n            data.color = undefined;\n        }\n        if (operation === \"add\") {\n            GraphState.addNode(data);\n        }\n        else if (operation === \"editNode\") {\n            GraphState.editNode(data.id, data.label, data.color);\n        }\n    },\n\n    nodeLabelIDValidator: (v) => {\n        if (GraphState.nodeLabelToID(v) > -1) {\n            return true;\n        }\n        return languages.current.InvalidLabelOrId;\n    },\n\n    applyColors: async () => {\n        if (window.settings.getOption(\"direction\")) {\n            return;\n        }\n\n        const coloring = GraphState.graphProperties.colormode;\n\n        let graphColors : any;\n        let chromaticNumber : any;\n\n        alert(coloring);\n\n        if (coloring === 2) {\n            graphColors = await GraphState.getProperty(\"graphColoringWelsh\", true);\n            chromaticNumber = await GraphState.getProperty(\"Approx. Chromatic Welsh\", true);\n        }\n        else {\n            alert(\"No correct colormode\");\n            return;\n        }\n\n        const basicColors = ['#ff3f3f', '#ffbf64', '#ffff00', '#00ff80', '#00a0ff', '#f964ff'];\n        const addColors = randomColor({ count: chromaticNumber > 7 ? chromaticNumber - 6 : 1, luminosity: \"light\" });\n\n        const colors = [...basicColors, ...addColors];\n\n        // const colors = randomColor({ count: chromaticNumber, luminosity: \"light\" });\n        let G = GraphState.graph;\n        (G.getAllNodes() as NodeImmutPlain[]).forEach((v) => {\n            G = G.editNode(v.id, { color: colors[graphColors[v.id]] });\n        });\n        self.setData(GraphState.getGraphData(G), false, false);\n    },\n\n    setData: (data, recalcProps = false, graphChanged = true, rearrangeGraph = false) => {\n        // Store existing positions in the data if we're supposed to keep the layout\n        if (rearrangeGraph) {\n            data.nodes.forEach((v) => {\n                delete v.x;\n                delete v.y;\n            });\n        }\n\n        if (graphChanged) {\n            self.saveState();\n        }\n\n        if (\"directed\" in data && typeof data.directed !== \"undefined\") {\n            window.settings.changeOption(\"direction\", data.directed);\n        }\n        if (\"weighted\" in data && typeof data.weighted !== \"undefined\") {\n            window.settings.changeOption(\"weights\", data.weighted);\n        }\n        const directional = window.settings.getOption(\"direction\") as boolean;\n        const weighted = window.settings.getOption(\"weights\") as boolean;\n\n        const g = new GraphImmut(data.nodes, data.edges, directional, weighted);\n        GraphState.graph = g;\n\n        // Set a new random seed so that the layout will be different\n        self.randomizeNetworkLayoutSeed(window.network as unknown as VisNetworkInternals);\n        window.network.setData(GraphState.getGraphAsDataSet(g));\n        GraphState.graph = GraphState.setLocations(window.network.getPositions());\n\n        window.network.disableEditMode();\n        window.network.enableEditMode();\n\n        if (graphChanged) {\n            window.ui.stopLoadingAnimation();\n            window.ui.isRunning = {};\n            window.ui.terminateAllWebWorkers();\n            window.ui.printGraphAlgorithms();\n            help.printout(\"\");\n            GraphState.setUpToDate();\n            GraphState.makeAndPrintProperties(recalcProps);\n        }\n\n        self.saveStateLocalStorage();\n    },\n\n    saveState: () => {\n        if (GraphState.graph === null) {\n            return;\n        }\n\n        if (GraphState.backHistory.length >= GraphState.maxHistory) {\n            GraphState.backHistory.shift();\n        }\n\n        GraphState.backHistory.push(self.getStateForSaving());\n        GraphState.forwardHistory = [];\n        document.getElementsByClassName(\"icon-undo\")!.item(0)!.parentElement!.parentElement!.classList.add(\"active\");\n    },\n\n    getStateForSaving: () => {\n        const state: any = {};\n        Object.keys(GraphState).forEach((k: string) => {\n            const v: any = (GraphState as any)[k];\n            if (typeof v !== \"function\") {\n                if (typeof v !== \"object\") {\n                    state[k] = v;\n                }\n                else {\n                    if (k === \"graph\" && v !== null) {\n                        state[k] = v;\n                    }\n                    if (!k.toLowerCase().includes(\"history\")) {\n                        state[k] = help.deepCopy(true, Array.isArray(v) ? [] : {}, v);\n                    }\n                }\n            }\n        });\n\n        return state as GraphStateHistory;\n    },\n\n    undo: () => {\n        if (GraphState.backHistory.length > 0) {\n            self.applyState(true);\n        }\n    },\n\n    redo: () => {\n        if (GraphState.forwardHistory.length > 0) {\n            self.applyState(false);\n        }\n    },\n\n    applyState: (undo = true, newState: null | GraphStateHistory = null) => {\n        const firstLoad = newState !== null;\n        const currentState = self.getStateForSaving();\n\n        if (!firstLoad) {\n            if (undo) {\n                newState = GraphState.backHistory.pop()!;\n            }\n            else {\n                newState = GraphState.forwardHistory.pop()!;\n            }\n        }\n\n        //@ts-ignore Ignore accessing private props. I do this because saving the state lost the type of the data\n        newState.graph = new GraphImmut(newState.graph.nodes, newState.graph.edges, newState.graph.directed, newState.graph.weighted);\n\n        window.settings.changeOption(\"direction\", newState!.graph.isDirected());\n        window.settings.changeOption(\"weights\", newState!.graph.isWeighted());\n\n        GraphState.graph = newState!.graph;\n\n        window.network.setData(GraphState.getGraphAsDataSet(GraphState.graph));\n        window.network.disableEditMode();\n        window.network.enableEditMode();\n\n        window.ui.printGraphAlgorithms();\n        help.printout(\"\");\n\n        Object.keys(newState!).forEach((k: string) => {\n            const v = newState![k];\n            if (typeof v !== \"object\") {\n                (GraphState as any)[k] = v;\n            }\n            else if (!k.toLowerCase().includes(\"history\") && k.toLowerCase() !== \"graph\") {\n                if (k.toLowerCase() === \"uptodate\") {\n                    Object.keys((GraphState as any)[k]).forEach((oldKey) => {\n                        (GraphState as any)[k][oldKey].upToDate = (v as any)[oldKey].upToDate;\n                    });\n                }\n                else {\n                    (GraphState as any)[k] = help.deepCopy(true, (GraphState as any)[k], v);\n                }\n            }\n        });\n\n        GraphState.makeAndPrintProperties().then(() => {\n            if (undo && !firstLoad) {\n                document.getElementsByClassName(\"icon-redo\")!.item(0)!.parentElement!.parentElement!.classList.add(\"active\");\n                if (GraphState.backHistory.length === 0) {\n                    document.getElementsByClassName(\"icon-undo\")!.item(0)!.parentElement!.parentElement!.classList.remove(\"active\");\n                }\n                GraphState.forwardHistory.push(currentState);\n            }\n            else if (!undo && !firstLoad) {\n                document.getElementsByClassName(\"icon-undo\")!.item(0)!.parentElement!.parentElement!.classList.add(\"active\");\n                if (GraphState.forwardHistory.length === 0) {\n                    document.getElementsByClassName(\"icon-redo\")!.item(0)!.parentElement!.parentElement!.classList.remove(\"active\");\n                }\n                GraphState.backHistory.push(currentState);\n            }\n\n            self.saveStateLocalStorage();\n        });\n    },\n\n    saveStateLocalStorage: () => {\n        if (window.settings.checkForLocalStorage()) {\n            localStorage.setItem(\"graphPlayground.lastState\", JSON.stringify(self.getStateForSaving()));\n        }\n    },\n\n    shuffleNetworkLayout: () => {\n        self.setData({\n            nodes: GraphState.graph.getAllNodes() as NodeImmutPlain[],\n            edges: GraphState.graph.getAllEdges() as EdgeImmutPlain[]\n        }, false, false, true);\n    },\n\n    randomizeNetworkLayoutSeed: (network) => {\n        const r = Math.round(Math.random() * 1000000);\n        network.layoutEngine.randomSeed = r;\n        network.layoutEngine.initialRandomSeed = r;\n    },\n\n    addNetworkListeners: (network) => {\n        // Enable edit node/edge when double clicking\n        network.on(\"doubleClick\", (p: VisNetworkEvent) => {\n            if (window.settings.getOption(\"weights\") && \"edges\" in p && p.edges.length === 1) {\n                network.editEdgeMode();\n            }\n            if (\"nodes\" in p && p.nodes.length === 1 && window.settings.getOption(\"fastColorChange\")) {\n                \n                \n                const chosenNode = p.nodes as unknown as number[];\n                const nodeId = chosenNode[0];\n\n                const data = GraphState.graph.getNodeForColor(nodeId);\n\n                if (typeof data !== 'boolean') {\n                    //console.log(data);\n                    const newColor = gHelp.toggleNodeColor(data);\n                    GraphState.editNode(data.getID(), data.getLabel(), newColor);\n                }\n                else {\n                    alert(\"Double-click selection of node doesn't work.\")\n                }\n\n                \n\n                // if (typeof data === \"String\") {\n                //     gHelp.toggleNodeColor(data);\n                // }\n                \n\n                // console.log(data);\n\n\n\n                // const currentNode = GraphState.graph.getNode(p.nodes[0] as number, true);\n\n                // GraphState.editNode(data.id, data.label, data.color);\n\n            }\n            if (\"nodes\" in p && p.nodes.length === 1 && !window.settings.getOption(\"fastColorChange\")) {\n                network.editNode();\n            }\n        });\n\n        // Save locations of nodes after dragging\n        network.on(\"dragEnd\", () => {\n            GraphState.graph = GraphState.setLocations(network.getPositions());\n            self.saveStateLocalStorage(); // Save the new locations as part of the state\n        });\n\n        // Delete nodes/edges when hit \"Delete\"\n        let lastNetworkClickEvent: Event | null = null;\n        network.on('click', (event) => {\n            lastNetworkClickEvent = event;\n        });\n\n        // Delete key to delete node or edge\n        document.addEventListener('keyup', (key) => {\n            if (key.key === \"Delete\" && lastNetworkClickEvent !== null) {\n                if (self.container.contains((lastNetworkClickEvent as any).event.target)) {\n                    if ((\"edges\" in lastNetworkClickEvent && (lastNetworkClickEvent as any).edges.length === 1)\n                        || (\"nodes\" in lastNetworkClickEvent && (lastNetworkClickEvent as any).nodes.length === 1)) {\n                        network.deleteSelected();\n                    }\n                }\n            }\n        });\n\n        // Undo/Redo keyboard commands\n        document.addEventListener(\"keydown\", (e) => {\n            if ((e.key.toLowerCase() === 'y' && e.ctrlKey) || (e.key.toLowerCase() === 'z' && e.ctrlKey && e.shiftKey)) {\n                self.redo();\n            }\n            else if (e.key.toLowerCase() === 'z' && e.ctrlKey) {\n                self.undo();\n            }\n        });\n\n        // When clicking off of the network, remove the Delete functionality\n        document.addEventListener(\"click\", (e) => {\n            if (self.container !== e.target && !self.container.contains(e.target as Node)) {\n                lastNetworkClickEvent = null;\n            }\n        });\n    },\n\n};\n\nexport default self;\n","\"use strict\";\ninterface SettingsList {\n    nodePhysics: boolean;\n    direction: boolean;\n    weights: boolean;\n\n    [index: string]: boolean;\n}\n\nexport default class Settings {\n    private static readonly defaults: SettingsList = {\n        nodePhysics: true,\n        direction: false,\n        weights: false\n    };\n    private static current: any = {};\n\n    public static checkForLocalStorage() {\n        try {\n            const x = \"__storage_test__\";\n            localStorage.setItem(x, x);\n            localStorage.removeItem(x);\n            return true;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    public static saveSettings() {\n        if (Settings.checkForLocalStorage()) {\n            localStorage.setItem(\"graphPlayground.settings\", JSON.stringify(Settings.current));\n        }\n    }\n\n    public static loadSettings() {\n        if (Settings.checkForLocalStorage()) {\n            const settings = localStorage.getItem(\"graphPlayground.settings\");\n            if (settings === null) {\n                Settings.current = settings;\n            } else {\n                Settings.current = JSON.parse(settings);\n            }\n        }\n        if (Settings.current === null) {\n            Settings.current = {};\n        }\n        Settings.setAll();\n    }\n\n    public static setAll() {\n        window.network.setOptions({ nodes: { physics: Settings.getOption(\"nodePhysics\") as boolean } });\n        window.network.setOptions({ edges: { arrows: { to: Settings.getOption(\"direction\") as boolean } } });\n        if (Settings.getOption(\"weights\")) {\n            window.network.setOptions({\n                manipulation: {\n                    editEdge: {\n                        editWithoutDrag: window.main.visWeightEdgeEdit\n                    }\n                }\n            });\n        } else {\n            window.network.setOptions({ manipulation: { editEdge: window.main.visOptions.manipulation.editEdge } });\n        }\n    }\n\n    public static changeOption(option: string, value: string | boolean): void {\n        Settings.current[option] = value;\n        Settings.saveSettings();\n        Settings.setAll();\n    }\n\n    public static getOption(option: string): string | boolean {\n        if (option in Settings.current) {\n            return Settings.current[option];\n        }\n        return Settings.defaults[option];\n    }\n}\n","\"use strict\";\n\nimport * as $ from \"jquery\";\n\nexport declare interface ModalFormRow {\n    type: string;\n    label?: string;\n    initialValue?: any;\n    id?: string | number;\n    extraAttrs?: any;\n    validationFunc?: (value: any, container: JQuery) => boolean | string;\n    clickDismiss?: boolean;\n    onclick?: (...args: any[]) => void;\n    optionText?: any[];\n    optionValues?: any[];\n}\n\ndeclare interface BasicMapType {\n    class: string;\n    id: string;\n    value: any;\n\n    [key: number]: any;\n\n    [key: string]: any;\n}\n\nconst defaultCancelCb = ($modal: JQuery) => {\n    $modal.modal(\"hide\");\n};\n\nconst self = {\n    deepCopy(deep: boolean, clone: any, copy: any) {\n        const isPlainObject = (obj: any) => {\n            if (!obj || {}.toString.call(obj) !== \"[object Object]\") {\n                return false;\n            }\n\n            let proto = Object.getPrototypeOf(obj);\n\n            if (!proto) {\n                return true;\n            }\n\n            // Objects with prototype are plain iff they were constructed by a global Object function\n            let Ctor = {}.hasOwnProperty.call(proto, \"constructor\") && proto.constructor;\n            return (\n                typeof Ctor === \"function\" &&\n                {}.hasOwnProperty.toString.call(Ctor) === {}.hasOwnProperty.toString.call(Object)\n            );\n        };\n\n        let options,\n            name,\n            src,\n            copyIsArray,\n            target = arguments[0] || {},\n            i = 1,\n            length = arguments.length;\n\n        // Handle a deep copy situation\n        if (typeof target === \"boolean\") {\n            deep = target;\n\n            // Skip the boolean and the target\n            target = arguments[i] || {};\n            i++;\n        }\n\n        // Handle case when target is a string or something (possible in deep copy)\n        if (typeof target !== \"object\" && typeof target !== \"function\") {\n            target = {};\n        }\n\n        if (i === length) {\n            target = this;\n            i--;\n        }\n\n        for (; i < length; i++) {\n            // Only deal with non-null/undefined values\n            if ((options = arguments[i]) != null) {\n                // Extend the base object\n                for (name in options) {\n                    src = target[name];\n                    copy = options[name];\n\n                    // Prevent never-ending loop\n                    if (target === copy) {\n                        continue;\n                    }\n\n                    // Recurse if we're merging plain objects or arrays\n                    if (deep && copy && (isPlainObject(copy) || (copyIsArray = Array.isArray(copy)))) {\n                        if (copyIsArray) {\n                            copyIsArray = false;\n                            clone = src && Array.isArray(src) ? src : [];\n                        } else {\n                            clone = src && isPlainObject(src) ? src : {};\n                        }\n\n                        // Never move original objects, clone them\n                        target[name] = self.deepCopy(deep, clone, copy);\n\n                        // Don't bring in undefined values\n                    } else if (copy !== undefined) {\n                        target[name] = copy;\n                    }\n                }\n            }\n        }\n\n        // Return the modified object\n        return target;\n    },\n\n    deepFreeze: <T extends Object>(o: T): Readonly<T> => {\n        Object.freeze(o);\n\n        Object.getOwnPropertyNames(o).forEach((prop: string | number) => {\n            if (\n                o.hasOwnProperty(prop) &&\n                (o as any)[prop] !== null &&\n                (typeof (o as any)[prop] === \"object\" || typeof (o as any)[prop] === \"function\") &&\n                !Object.isFrozen((o as any)[prop])\n            ) {\n                self.deepFreeze((o as any)[prop]);\n            }\n        });\n\n        return o;\n    },\n\n    sort: <T>(arr: T[], compareFunction: (a: any, b: any) => number): T[] => {\n        return [...arr].sort(compareFunction);\n    },\n\n    datasetToArray: (ds: any, key: string): Readonly<any[]> => {\n        const r: any[] = [];\n        ds.forEach((v: { [index: string]: any }) => {\n            r.push(v[key]);\n        });\n        return self.deepFreeze(r);\n    },\n\n    keepOnlyKeys: <T>(arr: T[], keys: string[]): Readonly<T[]> => {\n        arr = arr.slice();\n        arr.forEach((v: any) => {\n            const k = Object.keys(v);\n            k.forEach(key => {\n                if (keys.indexOf(key) < 0) {\n                    delete v[key];\n                }\n            });\n        });\n        return self.deepFreeze(arr);\n    },\n\n    getFileExtension: (filename: string): string => {\n        return filename.split(\".\").splice(-1)[0];\n    },\n\n    htmlEncode: (string: string): string => {\n        const t = document.createElement(\"textarea\");\n        t.textContent = string;\n        string = t.innerHTML.replace(/(?:\\r\\n|\\r|\\n)/g, \"<br/>\");\n        return string;\n    },\n\n    printout: (text: string, escape?: string): void => {\n        if (escape) {\n            text = self.htmlEncode(escape);\n        }\n        document.getElementById(\"printout\")!.innerHTML = text;\n    },\n\n    flatten: <T>(map: { [key: string]: T }): Readonly<T[]> => {\n        const r: T[] = [];\n        Object.keys(map).forEach(i => {\n            r.push(map[i]);\n        });\n        return self.deepFreeze(r);\n    },\n\n    rotate: (map: { [key: string]: any }): Readonly<any> => {\n        const r: any = {};\n        Object.keys(map).forEach(i => {\n            if (map[i] in r) {\n                r[map[i]].push(i);\n            } else {\n                r[map[i]] = [i];\n            }\n        });\n        return self.deepFreeze(r);\n    },\n\n    max: (iterable: any[]): number => {\n        return iterable.reduce((a, b) => {\n            return Math.max(a, b);\n        });\n    },\n\n    toTitleCase: (str: string): string => {\n        return str.replace(/(?:^|\\s)\\w/g, match => {\n            return match.toUpperCase();\n        });\n    },\n\n    stringReplacement: (str: string, ...replacements: string[]) => {\n        return replacements.reduce((val, replacement, i) => {\n            return val.replace(`$${i + 1}`, replacement);\n        }, str);\n    },\n\n    showSimpleModal: (title: string, body: string): void => {\n        self.showFormModal(null, title, null, [{ type: \"html\", initialValue: body }], null, false);\n    },\n\n    makeFormModal: (title: string, successText: string | null, form: ModalFormRow[], footer = true): JQuery => {\n        const f = $(\"<div>\", { class: \"modal-body form-group\" });\n        form.forEach((formRow, i) => {\n            if (!(\"initialValue\" in formRow)) {\n                formRow.initialValue = \"\";\n            }\n\n            let id = \"form-modal-\" + i;\n            if (\"id\" in formRow && formRow.id !== \"\" && formRow.id !== null && typeof formRow.id === \"string\") {\n                id = formRow.id;\n            }\n\n            const basicMap: BasicMapType = { class: \"form-control\", id, value: formRow.initialValue };\n\n            if (\"extraAttrs\" in formRow) {\n                Object.keys(formRow.extraAttrs).forEach(attrname => {\n                    if (typeof formRow.extraAttrs[attrname] !== \"function\") {\n                        basicMap[attrname] = formRow.extraAttrs[attrname];\n                    }\n                });\n            }\n\n            let validFunc: typeof formRow[\"validationFunc\"] = () => true;\n            if (\"validationFunc\" in formRow && typeof formRow.validationFunc === \"function\") {\n                validFunc = formRow.validationFunc;\n            }\n\n            const generalValidator = (event: any, valueMutator: null | ((v: any) => any) = null) => {\n                const $v = $(event.target);\n                let val = $v.val();\n                if (valueMutator !== null && typeof valueMutator === \"function\") {\n                    val = valueMutator(val);\n                }\n                const valid = validFunc!(val, $v);\n\n                if (valid === true) {\n                    $v.removeClass(\"is-invalid\")\n                        .next(\"#feedback-\" + i)\n                        .remove();\n                } else {\n                    $v.addClass(\"is-invalid\");\n                    if ($v.next(\"#feedback-\" + i).length === 0) {\n                        $v.after($(\"<div>\", { class: \"invalid-feedback\", id: \"feedback-\" + i }).text(valid));\n                    }\n                }\n            };\n\n            if (formRow.type === \"html\") {\n                f.append($(formRow.initialValue));\n            } else if (formRow.type === \"checkbox\") {\n                basicMap.type = \"checkbox\";\n                basicMap.class = \"form-check-input\";\n                delete basicMap.value;\n                if (formRow.initialValue) {\n                    basicMap.checked = \"\";\n                }\n\n                f.append(\n                    $(\"<div>\", { class: \"form-check\" }).append(\n                        $(\"<label>\", { for: id, class: \"form-check-label\" })\n                            .text(formRow.label!)\n                            .prepend($(\"<input>\", basicMap))\n                    )\n                );\n            } else {\n                f.append($(\"<label>\", { for: id, class: \"col-form-label\" }).text(formRow.label!));\n\n                if (formRow.type === \"button\") {\n                    if (\"clickDismiss\" in formRow && formRow.clickDismiss === true) {\n                        basicMap.class += \" btn-dismiss\";\n                    }\n                    const $b = $(\"<button>\", basicMap).text(formRow.initialValue);\n                    if (\"onclick\" in formRow && typeof formRow.onclick === \"function\") {\n                        $b.on(\"click\", formRow.onclick);\n                    }\n                    f.append($b);\n                } else if (formRow.type === \"numeric\") {\n                    basicMap.type = \"number\";\n                    f.append(\n                        $(\"<input>\", basicMap).on(\"blur validate\", e => {\n                            generalValidator(e, parseFloat);\n                        })\n                    );\n                } else if (formRow.type === \"text\") {\n                    basicMap.type = \"text\";\n                    f.append($(\"<input>\", basicMap).on(\"blur validate\", generalValidator));\n                } else if (formRow.type === \"file\") {\n                    basicMap.type = \"file\";\n                    basicMap.class = \"form-control-file form-control\";\n                    f.append($(\"<input>\", basicMap).on(\"blur validate\", generalValidator));\n                } else if (formRow.type === \"textarea\") {\n                    const $b = $(\"<textarea>\", basicMap).on(\"blur validate\", generalValidator);\n                    if (\"onclick\" in formRow) {\n                        $b.on(\"click\", formRow.onclick!);\n                    }\n                    f.append($b);\n                } else if (formRow.type === \"select\") {\n                    const $options = $(\"<select>\", basicMap);\n                    formRow.optionText!.forEach((oText, oIndex) => {\n                        if (oIndex < formRow.optionValues!.length) {\n                            let selected = false;\n                            if (formRow.initialValue === formRow.optionValues![oIndex]) {\n                                selected = true;\n                            }\n                            $options.append($(\"<option>\", { value: formRow.optionValues![oIndex], selected }).text(oText));\n                        } else {\n                            let selected = false;\n                            if (formRow.initialValue === oText) {\n                                selected = true;\n                            }\n                            $options.append($(\"<option>\", { selected }).text(oText));\n                        }\n                    });\n                    f.append($options.on(\"blur validate\", generalValidator));\n                }\n            }\n        });\n\n        let $footer: JQuery<HTMLElement> | null = $(\"<div>\", { class: \"modal-footer\" })\n            .append($(\"<button>\", { class: \"btn btn-success\", type: \"button\" }).text(successText!))\n            .append($(\"<button>\", { class: \"btn btn-danger btn-cancel\", type: \"button\" }).text(\"Cancel\"));\n\n        if (footer === false) {\n            $footer = null;\n        }\n\n        const $modal = $(\"<div>\", { class: \"modal fade\", tabindex: \"-1\", role: \"dialog\", \"aria-hidden\": \"true\" });\n        $modal.append(\n            $(\"<div>\", { class: \"modal-dialog\" }).append(\n                $(\"<div>\", { class: \"modal-content\" })\n                    .append(\n                        $(\"<div>\", { class: \"modal-header\" })\n                            .append($(\"<h5>\", { class: \"modal-title\" }).text(title))\n                            .append(\n                                $(\"<button>\", {\n                                    class: \"close\",\n                                    \"data-dismiss\": \"modal\",\n                                    \"aria-label\": \"close\"\n                                }).append($(\"<span>\", { \"aria-hidden\": \"true\" }).html(\"&times;\"))\n                            )\n                    )\n                    .append(f)\n                    .append($footer!)\n            )\n        );\n        $modal\n            .find(\"input, textarea\")\n            .off(\"keyup\")\n            .on(\"keyup\", e => {\n                if (e.key === \"Enter\") {\n                    $(\".btn-success\")\n                        .last()\n                        .trigger(\"click\");\n                }\n            });\n        $modal.on(\"shown.bs.modal\", () => {\n            $modal\n                .find(\"input[type='text'], input[type='number'], textarea\")\n                .first()\n                .trigger(\"focus\");\n        });\n\n        return $modal;\n    },\n\n    showFormModal: (\n        successCb: null | (($modal: JQuery, vals: any[]) => void),\n        title: string,\n        successText: string | null,\n        form: ModalFormRow[],\n        cancelCb: null | (($modal: JQuery) => void) = defaultCancelCb,\n        footer = true\n    ) => {\n        const $modal = self.makeFormModal(title, successText, form, footer);\n\n        $modal\n            .on(\"click\", \".btn-cancel\", () => {\n                if (typeof cancelCb === \"function\") {\n                    cancelCb($modal);\n                } else {\n                    $modal.modal(\"hide\");\n                }\n            })\n            .on(\"click\", \".btn-dismiss\", () => {\n                $modal.modal(\"hide\");\n            })\n            .on(\"click\", \".btn-success\", () => {\n                const vals: any[] = [];\n                let hasErrors = false;\n\n                $modal.find(\"input, textarea, select\").each((i, v) => {\n                    const $v = $(v);\n\n                    if (($v as any).tagName === \"SELECT\") {\n                        vals.push($v.find(\":selected\").val());\n                    } else if ($v.attr(\"type\") === \"checkbox\") {\n                        vals.push($v.prop(\"checked\"));\n                    } else if ($v.attr(\"type\") === \"file\") {\n                        vals.push(($v.get(0) as any).files);\n                    } else if ($v.attr(\"type\") === \"number\") {\n                        vals.push(parseFloat($v.val() as string));\n                    } else {\n                        vals.push($v.val());\n                    }\n\n                    if ($v.trigger(\"validate\").hasClass(\"is-invalid\")) {\n                        hasErrors = true;\n                    }\n                });\n\n                if (!hasErrors && typeof successCb === \"function\") {\n                    successCb($modal, vals);\n                }\n            })\n            .on(\"hidden.bs.modal\", () => {\n                $modal.remove();\n            })\n            .modal(\"show\");\n    }\n};\n\nexport default self;\n","\"use strict\";\n\nimport gHelp from './graphHelpers';\nimport help from './genericHelpers';\nimport {EdgeImmutPlain} from \"../classes/GraphImmut/EdgeImmut\";\nimport NodeImmut, {NodeImmutPlain} from \"../classes/GraphImmut/NodeImmut\";\nimport { makeMain } from '@sentry/browser';\n\ninterface Degree {\n    in: number;\n    out: number;\n}\n\nconst capitalLetters = help.deepFreeze([\n    \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"\n]) as string[];\n\nexport default {\n    findVertexDegreesDirectional: (adjacencyMatrix: Array<Array<number>>): Degree[] => {\n        // Adjacency stores IDs of edges TO\n        const degrees: Degree[] = [];\n        adjacencyMatrix.forEach((v, i) => {\n            if (i in degrees) {\n                degrees[i].out += v.length;\n            }\n            else {\n                degrees[i] = {out: v.length, in: 0};\n            }\n            v.forEach((outV) => {\n                if (outV in degrees) {\n                    degrees[outV].in += 1;\n                }\n                else {\n                    degrees[outV] = {in: 1, out: 0};\n                }\n            });\n        });\n\n        return degrees;\n    },\n\n    interpolateNodesFromEdges: (edges: EdgeImmutPlain[]): NodeImmutPlain[] => {\n        const nodes: NodeImmutPlain[] = [];\n\n        // MH: TODO NOT REALLY CLEAN\n        window.settings.changeOption(\"customColors\", true);\n\n        edges.forEach((v) => {\n            nodes[v.from] = {id: v.from, label: gHelp.generateLabelFromNumber(v.from)};\n            nodes[v.to] = {id: v.to, label: gHelp.generateLabelFromNumber(v.to)};\n        });\n\n        return nodes;\n    },\n\n    generateLabelFromNumber : (prelabel: number) : string => {\n        if (typeof prelabel === \"number\" && (prelabel >= 0 && prelabel <=25)) {\n            return capitalLetters[prelabel];\n        } else {\n            return prelabel.toString();\n        }\n    },\n\n\n    compareColor : (color1: string | undefined | null, color2: string | undefined | null) => {\n        if (color1 === null || color1 === undefined) {\n            color1 = \"DEFAULT\";\n        }\n        if (color2 === null || color2 === undefined) {\n            color2 = \"DEFAULT\";\n        }\n\n        return color1 === color2;\n\n    },\n\n    toggleNodeColor : (node: NodeImmut) : string | undefined => {\n        \n        const customColorPalleteArray = [\"DEFAULT\", \"#ff3f3f\", \"#ffbf64\", \"#ffff00\", \"#00ff80\", \"#f964ff\"];\n        const customColorPalleteInverted = {\n            \"#ff3f3f\": 1,\n            \"#ffbf64\": 2,\n            \"#ffff00\": 3,\n            \"#00ff80\": 4,\n            \"#f964ff\": 5\n        };\n\n        const currentColor = node.getAttribute('color');\n\n        let currentIndex = 0;        \n\n        if (currentColor === null || currentColor === undefined) {\n            currentIndex = 0;\n        }\n        else {\n            const currentColorString = currentColor as string;\n            currentIndex = customColorPalleteArray.indexOf(currentColorString);\n        }\n\n        if (currentIndex === 5 || currentIndex < 0) {\n            return undefined;\n        }\n\n        return customColorPalleteArray[(currentIndex+1)%6];\n    }\n};\n","var map = {\n\t\"./EN_US.ts\": [\n\t\t\"./src/EN_US.ts\",\n\t\t9,\n\t\t\"src_EN_US_ts\"\n\t],\n\t\"./custom.d.ts\": [\n\t\t\"./src/custom.d.ts\",\n\t\t7,\n\t\t\"src_custom_d_ts\"\n\t],\n\t\"./js/GraphAlgorithms.ts\": [\n\t\t\"./src/js/GraphAlgorithms.ts\",\n\t\t9,\n\t\t\"src_js_GraphAlgorithms_ts\"\n\t],\n\t\"./js/UIInteractions.ts\": [\n\t\t\"./src/js/UIInteractions.ts\",\n\t\t9\n\t],\n\t\"./js/app.ts\": [\n\t\t\"./src/js/app.ts\",\n\t\t9\n\t],\n\t\"./js/classes/GraphImmut/EdgeImmut.ts\": [\n\t\t\"./src/js/classes/GraphImmut/EdgeImmut.ts\",\n\t\t9\n\t],\n\t\"./js/classes/GraphImmut/GraphImmut.ts\": [\n\t\t\"./src/js/classes/GraphImmut/GraphImmut.ts\",\n\t\t9\n\t],\n\t\"./js/classes/GraphImmut/NodeImmut.ts\": [\n\t\t\"./src/js/classes/GraphImmut/NodeImmut.ts\",\n\t\t9\n\t],\n\t\"./js/classes/SpanningTree.ts\": [\n\t\t\"./src/js/classes/SpanningTree.ts\",\n\t\t9,\n\t\t\"src_js_classes_SpanningTree_ts\"\n\t],\n\t\"./js/dataImportExport.ts\": [\n\t\t\"./src/js/dataImportExport.ts\",\n\t\t9,\n\t\t\"src_js_dataImportExport_ts\"\n\t],\n\t\"./js/graphState.ts\": [\n\t\t\"./src/js/graphState.ts\",\n\t\t9\n\t],\n\t\"./js/languages.ts\": [\n\t\t\"./src/js/languages.ts\",\n\t\t9\n\t],\n\t\"./js/main.ts\": [\n\t\t\"./src/js/main.ts\",\n\t\t9\n\t],\n\t\"./js/settings.ts\": [\n\t\t\"./src/js/settings.ts\",\n\t\t9\n\t],\n\t\"./js/util/genericHelpers.ts\": [\n\t\t\"./src/js/util/genericHelpers.ts\",\n\t\t9\n\t],\n\t\"./js/util/graphHelpers.ts\": [\n\t\t\"./src/js/util/graphHelpers.ts\",\n\t\t9\n\t],\n\t\"./js/util/predefinedGraphs.ts\": [\n\t\t\"./src/js/util/predefinedGraphs.ts\",\n\t\t9,\n\t\t\"src_js_util_predefinedGraphs_ts\"\n\t],\n\t\"./js/workers/GraphAlgorithmWorker.ts\": [\n\t\t\"./src/js/workers/GraphAlgorithmWorker.ts\",\n\t\t9,\n\t\t\"src_js_GraphAlgorithms_ts\",\n\t\t\"src_js_workers_GraphAlgorithmWorker_ts\"\n\t],\n\t\"./js/workers/pwaServiceWorker.ts\": [\n\t\t\"./src/js/workers/pwaServiceWorker.ts\",\n\t\t7,\n\t\t\"src_js_workers_pwaServiceWorker_ts\"\n\t],\n\t\"./overloadTypes.d.ts\": [\n\t\t\"./src/overloadTypes.d.ts\",\n\t\t7,\n\t\t\"src_overloadTypes_d_ts\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(2).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__.t(id, ids[1] | 16)\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = \"./src lazy recursive ^\\\\.\\\\/.*\\\\.ts$\";\nmodule.exports = webpackAsyncContext;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \"-\" + {\"src_js_util_predefinedGraphs_ts\":\"5b726e6a0ca030329847\",\"src_EN_US_ts\":\"64c43e855a8b2c75aae2\",\"src_custom_d_ts\":\"cc488757333ac874f6ba\",\"src_js_GraphAlgorithms_ts\":\"d0fb34d1bc8538664c23\",\"src_js_classes_SpanningTree_ts\":\"a6d712f9d026bc75194c\",\"src_js_dataImportExport_ts\":\"e1376f4f20be13d7f744\",\"src_js_workers_GraphAlgorithmWorker_ts\":\"b0e58b5b949a4eaa5b2d\",\"src_js_workers_pwaServiceWorker_ts\":\"25c948cdc5f264cad919\",\"src_overloadTypes_d_ts\":\"71c8dfa2c6943d2e4d22\"}[chunkId] + \".min.js\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"graphPlayground:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\t;\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"bundle\": 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkgraphPlayground\"] = self[\"webpackChunkgraphPlayground\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"vendors\"], () => (__webpack_require__(\"./src/js/app.ts\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":[],"sourceRoot":""}