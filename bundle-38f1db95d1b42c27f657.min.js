/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/UIInteractions.ts":
/*!**********************************!*\
  !*** ./src/js/UIInteractions.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _util_graphHelpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/graphHelpers */ "./src/js/util/graphHelpers.ts");
/* harmony import */ var _util_genericHelpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/genericHelpers */ "./src/js/util/genericHelpers.ts");
/* harmony import */ var _graphState__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./graphState */ "./src/js/graphState.ts");
/* harmony import */ var worker_loader_workers_GraphAlgorithmWorker__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! worker-loader!./workers/GraphAlgorithmWorker */ "./node_modules/worker-loader/dist/cjs.js!./src/js/workers/GraphAlgorithmWorker.ts");
/* harmony import */ var _classes_GraphImmut_EdgeImmut__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./classes/GraphImmut/EdgeImmut */ "./src/js/classes/GraphImmut/EdgeImmut.ts");
/* harmony import */ var _classes_GraphImmut_GraphImmut__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./classes/GraphImmut/GraphImmut */ "./src/js/classes/GraphImmut/GraphImmut.ts");
/* harmony import */ var _languages__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./languages */ "./src/js/languages.ts");
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};



//@ts-ignore




var makeAndPrintShortestPath = function (title, fn, weighted) {
    var myName = _languages__WEBPACK_IMPORTED_MODULE_6__.current.ShortestPath;
    if (UIInteractions.isRunning[myName]) {
        UIInteractions.printAlreadyRunning(myName);
        return;
    }
    UIInteractions.isRunning[myName] = true;
    _util_genericHelpers__WEBPACK_IMPORTED_MODULE_1__["default"].showFormModal(function ($modal, values) {
        $modal.modal("hide");
        var source = _graphState__WEBPACK_IMPORTED_MODULE_2__["default"].nodeLabelToID(values[0]);
        var sink = _graphState__WEBPACK_IMPORTED_MODULE_2__["default"].nodeLabelToID(values[1]);
        var iStartedProgress = UIInteractions.startLoadingAnimation();
        var w = UIInteractions.getWorkerIfPossible(function (e) {
            var a = e.data;
            w.cleanup();
            if (iStartedProgress) {
                UIInteractions.stopLoadingAnimation();
            }
            UIInteractions.isRunning[myName] = false;
            if (a === false) {
                if (fn.includes("dijkstra")) {
                    _util_genericHelpers__WEBPACK_IMPORTED_MODULE_1__["default"].showSimpleModal(_languages__WEBPACK_IMPORTED_MODULE_6__.current.DijkstraError, _languages__WEBPACK_IMPORTED_MODULE_6__.current.DijkstraErrorHTML);
                }
                else if (fn.includes("bellman")) {
                    _util_genericHelpers__WEBPACK_IMPORTED_MODULE_1__["default"].showSimpleModal(_languages__WEBPACK_IMPORTED_MODULE_6__.current.BellmanFordError, _languages__WEBPACK_IMPORTED_MODULE_6__.current.BellmanFordErrorHTML);
                }
                return;
            }
            a = a;
            var p = "<h3>" + title + "</h3><hr>" + _util_genericHelpers__WEBPACK_IMPORTED_MODULE_1__["default"].stringReplacement(_languages__WEBPACK_IMPORTED_MODULE_6__.current.NoPathFromAToB, _util_genericHelpers__WEBPACK_IMPORTED_MODULE_1__["default"].htmlEncode(source.toString()), _util_genericHelpers__WEBPACK_IMPORTED_MODULE_1__["default"].htmlEncode(sink.toString()));
            if (a.pathExists) {
                p = _util_genericHelpers__WEBPACK_IMPORTED_MODULE_1__["default"].stringReplacement(_languages__WEBPACK_IMPORTED_MODULE_6__.current.ShortestPathFromAToB, title, _graphState__WEBPACK_IMPORTED_MODULE_2__["default"].nodeIDToLabel(source), _graphState__WEBPACK_IMPORTED_MODULE_2__["default"].nodeIDToLabel(sink), a.distance);
                if (weighted) {
                    p += "\n" + _util_genericHelpers__WEBPACK_IMPORTED_MODULE_1__["default"].stringReplacement(_languages__WEBPACK_IMPORTED_MODULE_6__.current.WithWeightedCost, a.cost);
                }
                p += "\n\n" + _languages__WEBPACK_IMPORTED_MODULE_6__.current.UsingPath;
                p = _util_genericHelpers__WEBPACK_IMPORTED_MODULE_1__["default"].htmlEncode(p);
                var graph = _graphState__WEBPACK_IMPORTED_MODULE_2__["default"].getGraphData(_graphState__WEBPACK_IMPORTED_MODULE_2__["default"].graph, false, true);
                var G_1 = new _classes_GraphImmut_GraphImmut__WEBPACK_IMPORTED_MODULE_5__["default"](graph.nodes, graph.edges, graph.directed, graph.weighted);
                a.path.forEach(function (v, i) {
                    p += _util_genericHelpers__WEBPACK_IMPORTED_MODULE_1__["default"].htmlEncode(_graphState__WEBPACK_IMPORTED_MODULE_2__["default"].nodeIDToLabel(v)) + " &rarr; ";
                    if (i > 0) {
                        G_1 = G_1.editEdge(a.path[i - 1], v, null, null, "#FF0000");
                    }
                });
                _graphState__WEBPACK_IMPORTED_MODULE_2__["default"].graph = G_1;
                window.main.setData(_graphState__WEBPACK_IMPORTED_MODULE_2__["default"].getGraphData(G_1), false, false, false);
                p = p.slice(0, -8);
                p = "<h3>" + title + "</h3><hr>" + p;
            }
            _util_genericHelpers__WEBPACK_IMPORTED_MODULE_1__["default"].printout(p);
        });
        w.send({
            type: fn,
            args: [source, sink],
            convertToGraphImmut: true,
            graph: window.main.graphState.getGraphData()
        });
    }, title, _languages__WEBPACK_IMPORTED_MODULE_6__.current.Go, [
        {
            label: _languages__WEBPACK_IMPORTED_MODULE_6__.current.StartNode,
            type: "text",
            validationFunc: window.main.nodeLabelIDValidator
        },
        {
            label: _languages__WEBPACK_IMPORTED_MODULE_6__.current.EndNode,
            type: "text",
            validationFunc: window.main.nodeLabelIDValidator
        }
    ]);
};
var makeAndPrintComponents = function (stronglyConnected) { return __awaiter(void 0, void 0, void 0, function () {
    var a, cc, componentKey, iStartedProgress, w;
    return __generator(this, function (_a) {
        a = null;
        cc = _languages__WEBPACK_IMPORTED_MODULE_6__.current.ConnectedComponents;
        componentKey = "connectedComponents";
        if (stronglyConnected) {
            if (!window.settings.getOption("direction")) {
                return [2 /*return*/];
            }
            cc = _languages__WEBPACK_IMPORTED_MODULE_6__.current.StronglyConnectedComponents;
            componentKey = "stronglyConnectedComponents";
        }
        else {
            if (window.settings.getOption("direction")) {
                return [2 /*return*/];
            }
        }
        if (UIInteractions.isRunning[cc]) {
            UIInteractions.printAlreadyRunning(cc);
            return [2 /*return*/, Promise.reject(_languages__WEBPACK_IMPORTED_MODULE_6__.current.TaskAlreadyRunning)];
        }
        UIInteractions.isRunning[cc] = true;
        iStartedProgress = UIInteractions.startLoadingAnimation();
        w = UIInteractions.getWorkerIfPossible(function (e) {
            a = e.data;
            w.cleanup();
            _graphState__WEBPACK_IMPORTED_MODULE_2__["default"].graphProperties[cc] = a.count;
            _graphState__WEBPACK_IMPORTED_MODULE_2__["default"].setUpToDate(true, [cc, componentKey]);
            _graphState__WEBPACK_IMPORTED_MODULE_2__["default"].state[componentKey] = a.components;
            var components = _util_genericHelpers__WEBPACK_IMPORTED_MODULE_1__["default"].flatten(a.components);
            var p = _util_genericHelpers__WEBPACK_IMPORTED_MODULE_1__["default"].stringReplacement(_languages__WEBPACK_IMPORTED_MODULE_6__.current.NumberOfConnectedComponents, cc, a.count);
            p += "\n\n";
            components.forEach(function (v, i) {
                p += _util_genericHelpers__WEBPACK_IMPORTED_MODULE_1__["default"].stringReplacement(_languages__WEBPACK_IMPORTED_MODULE_6__.current.VertexIsInConnectedComponentNumber, _graphState__WEBPACK_IMPORTED_MODULE_2__["default"].nodeIDToLabel(i), v + "") + "\n";
            });
            p += "\n" + JSON.stringify(_util_genericHelpers__WEBPACK_IMPORTED_MODULE_1__["default"].rotate(a.components), null, 4) + "\n\n";
            p = "<h3>" + cc + "</h3><hr>" + _util_genericHelpers__WEBPACK_IMPORTED_MODULE_1__["default"].htmlEncode(p);
            if (iStartedProgress) {
                UIInteractions.stopLoadingAnimation();
            }
            UIInteractions.isRunning[cc] = false;
            _util_genericHelpers__WEBPACK_IMPORTED_MODULE_1__["default"].printout(p);
        });
        w.send({
            type: componentKey,
            args: [],
            graph: window.main.graphState.getGraphData(),
            convertToGraphImmut: true
        });
        return [2 /*return*/];
    });
}); };
var WorkerProxy = /** @class */ (function () {
    function WorkerProxy(id, w, listener) {
        var _this = this;
        this.id = id;
        this.worker = w;
        this.listener = listener;
        w.postMessage({ type: "id", id: id });
        w.onmessage = function (e) {
            _this.listener({ data: e.data.data });
        };
    }
    WorkerProxy.prototype.send = function (data) {
        this.worker.postMessage(data);
    };
    WorkerProxy.prototype.cleanup = function () {
        this.worker.terminate();
        _graphState__WEBPACK_IMPORTED_MODULE_2__["default"].workerPool[this.id] = null;
    };
    return WorkerProxy;
}());
var UIInteractions = /** @class */ (function () {
    function UIInteractions() {
    }
    UIInteractions.getAlgorithms = function () {
        return [
            {
                //name: "Graph Coloring Welsh",
                name: _languages__WEBPACK_IMPORTED_MODULE_6__.current.GraphColoring,
                directional: false,
                applyFunc: UIInteractions.makeAndPrintGraphColoringWelsh,
                display: true
            },
            {
                name: _languages__WEBPACK_IMPORTED_MODULE_6__.current.ConnectedComponents,
                directional: false,
                applyFunc: function () {
                    makeAndPrintComponents(false);
                },
                display: true
            },
            {
                name: _languages__WEBPACK_IMPORTED_MODULE_6__.current.StronglyConnectedComponents,
                directional: true,
                display: true,
                applyFunc: function () {
                    makeAndPrintComponents(true);
                }
            },
            {
                name: _languages__WEBPACK_IMPORTED_MODULE_6__.current.BFS,
                directional: false,
                applyFunc: function () {
                    makeAndPrintShortestPath(_languages__WEBPACK_IMPORTED_MODULE_6__.current.BFS, "breadthFirstSearch", false);
                },
                display: true
            },
            {
                name: _languages__WEBPACK_IMPORTED_MODULE_6__.current.Dijkstra,
                applyFunc: function () {
                    makeAndPrintShortestPath(_languages__WEBPACK_IMPORTED_MODULE_6__.current.Dijkstra, "dijkstraSearch", true);
                },
                display: true
            },
            {
                name: _languages__WEBPACK_IMPORTED_MODULE_6__.current.BellmanFord,
                weighted: true,
                directional: true,
                applyFunc: function () {
                    makeAndPrintShortestPath(_languages__WEBPACK_IMPORTED_MODULE_6__.current.BellmanFord, "bellmanFord", true);
                },
                display: true
            },
            {
                name: _languages__WEBPACK_IMPORTED_MODULE_6__.current.FordFulkerson,
                weighted: true,
                directional: true,
                applyFunc: UIInteractions.makeAndPrintFFMCMF,
                display: true
            },
            {
                name: _languages__WEBPACK_IMPORTED_MODULE_6__.current.KruskalMST,
                weighted: true,
                directional: false,
                applyFunc: UIInteractions.makeAndPrintKruskal,
                display: true
            },
            {
                name: _languages__WEBPACK_IMPORTED_MODULE_6__.current.Cyclic,
                applyFunc: UIInteractions.makeAndPrintIsCyclic,
                directional: true,
                display: true
            },
            {
                name: _languages__WEBPACK_IMPORTED_MODULE_6__.current.TopoSort,
                applyFunc: UIInteractions.makeAndPrintTopologicalSort,
                directional: true,
                display: true
            },
            {
                name: _languages__WEBPACK_IMPORTED_MODULE_6__.current.Eulerian,
                directional: false,
                display: false,
                applyFunc: null
            },
            {
                name: _languages__WEBPACK_IMPORTED_MODULE_6__.current.Eulerian,
                directional: true,
                display: true,
                applyFunc: UIInteractions.makeAndPrintDirectionalEulerian
            }
        ];
    };
    UIInteractions.registerListeners = function () {
        var _this = this;
        var makeSimpleClickListener = function (selector, fn) {
            document.querySelector(selector).addEventListener("click", function (e) {
                e.preventDefault();
                fn();
            });
        };
        makeSimpleClickListener("#print-help-link", UIInteractions.printHelp);
        makeSimpleClickListener("#graph-options-link", UIInteractions.printOptions);
        makeSimpleClickListener("#load-petersen-link", function () { return __awaiter(_this, void 0, void 0, function () {
            var predefined;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, __webpack_require__.e(/*! import() */ "src_js_util_predefinedGraphs_ts").then(__webpack_require__.bind(__webpack_require__, /*! ./util/predefinedGraphs */ "./src/js/util/predefinedGraphs.ts"))];
                    case 1:
                        predefined = (_a.sent()).default;
                        window.main.setData(predefined.Petersen(), false, true, true);
                        return [2 /*return*/];
                }
            });
        }); });
        makeSimpleClickListener("#load-konigsberg-link", function () { return __awaiter(_this, void 0, void 0, function () {
            var predefined;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, __webpack_require__.e(/*! import() */ "src_js_util_predefinedGraphs_ts").then(__webpack_require__.bind(__webpack_require__, /*! ./util/predefinedGraphs */ "./src/js/util/predefinedGraphs.ts"))];
                    case 1:
                        predefined = (_a.sent()).default;
                        window.main.setData(predefined.Konigsberg(), false, true, true);
                        return [2 /*return*/];
                }
            });
        }); });
        makeSimpleClickListener("#load-graphG1-link", function () { return __awaiter(_this, void 0, void 0, function () {
            var predefined;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, __webpack_require__.e(/*! import() */ "src_js_util_predefinedGraphs_ts").then(__webpack_require__.bind(__webpack_require__, /*! ./util/predefinedGraphs */ "./src/js/util/predefinedGraphs.ts"))];
                    case 1:
                        predefined = (_a.sent()).default;
                        window.main.setData(predefined.GraphG1(), false, true, true);
                        return [2 /*return*/];
                }
            });
        }); });
        makeSimpleClickListener("#load-complete-link", function () { return __awaiter(_this, void 0, void 0, function () {
            var predefined;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, __webpack_require__.e(/*! import() */ "src_js_util_predefinedGraphs_ts").then(__webpack_require__.bind(__webpack_require__, /*! ./util/predefinedGraphs */ "./src/js/util/predefinedGraphs.ts"))];
                    case 1:
                        predefined = (_a.sent()).default;
                        predefined.Complete();
                        return [2 /*return*/];
                }
            });
        }); });
        makeSimpleClickListener("#load-hypercube-link", function () { return __awaiter(_this, void 0, void 0, function () {
            var predefined;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, __webpack_require__.e(/*! import() */ "src_js_util_predefinedGraphs_ts").then(__webpack_require__.bind(__webpack_require__, /*! ./util/predefinedGraphs */ "./src/js/util/predefinedGraphs.ts"))];
                    case 1:
                        predefined = (_a.sent()).default;
                        predefined.Hypercube();
                        return [2 /*return*/];
                }
            });
        }); });
        makeSimpleClickListener("#load-custom-link", function () { return __awaiter(_this, void 0, void 0, function () {
            var predefined;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, __webpack_require__.e(/*! import() */ "src_js_util_predefinedGraphs_ts").then(__webpack_require__.bind(__webpack_require__, /*! ./util/predefinedGraphs */ "./src/js/util/predefinedGraphs.ts"))];
                    case 1:
                        predefined = (_a.sent()).default;
                        predefined.Custom();
                        return [2 /*return*/];
                }
            });
        }); });
        makeSimpleClickListener("#load-default-color", function () { return __awaiter(_this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                _graphState__WEBPACK_IMPORTED_MODULE_2__["default"].resetColor();
                return [2 /*return*/];
            });
        }); });
        makeSimpleClickListener("#check-coloring", function () { return __awaiter(_this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                _graphState__WEBPACK_IMPORTED_MODULE_2__["default"].checkColoring();
                return [2 /*return*/];
            });
        }); });
        makeSimpleClickListener("#undo-link", window.main.undo);
        makeSimpleClickListener("#redo-link", window.main.redo);
        makeSimpleClickListener("#calculate-all-properties-link", function () { return __awaiter(_this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, _graphState__WEBPACK_IMPORTED_MODULE_2__["default"].makeAndPrintProperties(true)];
            });
        }); });
        makeSimpleClickListener("#new-graph-layout-link", window.main.shuffleNetworkLayout);
        makeSimpleClickListener("#import-file-link", function () { return __awaiter(_this, void 0, void 0, function () {
            var imp;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, __webpack_require__.e(/*! import() */ "src_js_dataImportExport_ts").then(__webpack_require__.bind(__webpack_require__, /*! ./dataImportExport */ "./src/js/dataImportExport.ts"))];
                    case 1:
                        imp = (_a.sent()).default;
                        imp.makeImportFileModal();
                        return [2 /*return*/];
                }
            });
        }); });
        makeSimpleClickListener("#import-text-link", function () { return __awaiter(_this, void 0, void 0, function () {
            var imp;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, __webpack_require__.e(/*! import() */ "src_js_dataImportExport_ts").then(__webpack_require__.bind(__webpack_require__, /*! ./dataImportExport */ "./src/js/dataImportExport.ts"))];
                    case 1:
                        imp = (_a.sent()).default;
                        imp.makeImportTextModal();
                        return [2 /*return*/];
                }
            });
        }); });
        makeSimpleClickListener("#export-file-link", function () { return __awaiter(_this, void 0, void 0, function () {
            var imp;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, __webpack_require__.e(/*! import() */ "src_js_dataImportExport_ts").then(__webpack_require__.bind(__webpack_require__, /*! ./dataImportExport */ "./src/js/dataImportExport.ts"))];
                    case 1:
                        imp = (_a.sent()).default;
                        imp.makeExportFileModal();
                        return [2 /*return*/];
                }
            });
        }); });
        makeSimpleClickListener("#export-text-link", function () { return __awaiter(_this, void 0, void 0, function () {
            var imp;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, __webpack_require__.e(/*! import() */ "src_js_dataImportExport_ts").then(__webpack_require__.bind(__webpack_require__, /*! ./dataImportExport */ "./src/js/dataImportExport.ts"))];
                    case 1:
                        imp = (_a.sent()).default;
                        imp.makeExportTextModal();
                        return [2 /*return*/];
                }
            });
        }); });
        document.querySelector("#fileDropdown").innerText = _languages__WEBPACK_IMPORTED_MODULE_6__.current.File;
        document.querySelector("#import-file-link").innerText = _languages__WEBPACK_IMPORTED_MODULE_6__.current.ImportFile;
        document.querySelector("#import-text-link").innerText = _languages__WEBPACK_IMPORTED_MODULE_6__.current.ImportText;
        document.querySelector("#export-file-link").innerText = _languages__WEBPACK_IMPORTED_MODULE_6__.current.ExportFile;
        document.querySelector("#export-text-link").innerText = _languages__WEBPACK_IMPORTED_MODULE_6__.current.ExportText;
        document.querySelector("#calculate-all-properties-link").innerText = _languages__WEBPACK_IMPORTED_MODULE_6__.current.CalculateAllProperties;
        document.querySelector("#new-graph-layout-link").innerText = _languages__WEBPACK_IMPORTED_MODULE_6__.current.NewGraphLayout;
        document.querySelector("#graph-options-link").innerText = _languages__WEBPACK_IMPORTED_MODULE_6__.current.GraphOptions;
        document.querySelector("#print-help-link").innerText = _languages__WEBPACK_IMPORTED_MODULE_6__.current.Help;
        document.querySelector("#example-graphs-label").innerText = _languages__WEBPACK_IMPORTED_MODULE_6__.current.ExampleGraphs;
        document.querySelector("#load-petersen-link").innerText = _languages__WEBPACK_IMPORTED_MODULE_6__.current.LoadPetersen;
        document.querySelector("#load-konigsberg-link").innerText = _languages__WEBPACK_IMPORTED_MODULE_6__.current.LoadKonigsberg;
        document.querySelector("#load-complete-link").innerText = _languages__WEBPACK_IMPORTED_MODULE_6__.current.LoadComplete;
        document.querySelector("#load-hypercube-link").innerText = _languages__WEBPACK_IMPORTED_MODULE_6__.current.LoadHypercube;
        document.querySelector("#load-custom-link").innerText = _languages__WEBPACK_IMPORTED_MODULE_6__.current.LoadCustom;
        document.querySelector("#algorithms-label").innerText = _languages__WEBPACK_IMPORTED_MODULE_6__.current.Algorithms;
        document.querySelector("#graph-properties-label").innerText = _languages__WEBPACK_IMPORTED_MODULE_6__.current.GraphProperties;
        document.querySelector("#results-label").innerText = _languages__WEBPACK_IMPORTED_MODULE_6__.current.Results;
    };
    UIInteractions.printHelp = function () {
        _util_genericHelpers__WEBPACK_IMPORTED_MODULE_1__["default"].showSimpleModal(_languages__WEBPACK_IMPORTED_MODULE_6__.current.Help, _languages__WEBPACK_IMPORTED_MODULE_6__.current.IssuesHTML);
    };
    UIInteractions.printOptions = function () {
        _util_genericHelpers__WEBPACK_IMPORTED_MODULE_1__["default"].showFormModal(function ($modal, vals) {
            $modal.modal("hide");
            if (window.settings.getOption("nodePhysics") !== vals[0]) {
                window.settings.changeOption("nodePhysics", vals[0]); // Physics
            }
            // if (window.settings.getOption("direction") !== vals[1]) {
            //     window.settings.changeOption("direction", vals[1]);
            //     let G = GraphState.graph;
            //     G = vals[1] ? G.asDirected(true) : G.asUndirected();
            //     // Clear node coloring because graph color doesn't apply to directed graphs
            //     window.main.setData(GraphState.getGraphData(G, true));
            // }
            // if (window.settings.getOption("weights") !== vals[2]) {
            //     window.settings.changeOption("weights", vals[2]);
            //     let G = GraphState.graph;
            //     G = vals[2] ? G.asWeighted() : G.asUnweighted();
            //     window.main.setData(GraphState.getGraphData(G));
            // }
            // if (window.settings.getOption("customColors") !== vals[1]) {
            //     window.settings.changeOption("customColors", vals[1]);
            // }
            if (window.settings.getOption("smoothEdges") !== vals[1]) {
                window.settings.changeOption("smoothEdges", vals[1]);
                window.network.setOptions({ edges: { smooth: vals[1] } });
                var G = _graphState__WEBPACK_IMPORTED_MODULE_2__["default"].graph;
                window.main.setData(_graphState__WEBPACK_IMPORTED_MODULE_2__["default"].getGraphData(G));
            }
            if (window.settings.getOption("fastColorChange") !== vals[2]) {
                window.settings.changeOption("fastColorChange", vals[2]);
            }
        }, _languages__WEBPACK_IMPORTED_MODULE_6__.current.Options, _languages__WEBPACK_IMPORTED_MODULE_6__.current.Save, [
            {
                label: _languages__WEBPACK_IMPORTED_MODULE_6__.current.GraphPhysics,
                initialValue: window.settings.getOption("nodePhysics"),
                type: "checkbox"
            },
            // {
            //     label: languages.current.DiGraph,
            //     initialValue: window.settings.getOption("direction"),
            //     type: "checkbox"
            // },
            // {
            //     label: languages.current.WeightedGraph,
            //     initialValue: window.settings.getOption("weights"),
            //     type: "checkbox"
            // },
            // {
            //     label: languages.current.CustomNodeColors,
            //     initialValue: window.settings.getOption("customColors"),
            //     type: "checkbox"
            // }
            {
                label: _languages__WEBPACK_IMPORTED_MODULE_6__.current.SmoothEdges,
                initialValue: window.settings.getOption("smoothEdges"),
                type: "checkbox"
            },
            {
                label: _languages__WEBPACK_IMPORTED_MODULE_6__.current.FastColorChange,
                initialValue: window.settings.getOption("fastColorChange"),
                type: "checkbox"
            }
        ], null);
    };
    UIInteractions.terminateAllWebWorkers = function () {
        for (var _i = 0, _a = _graphState__WEBPACK_IMPORTED_MODULE_2__["default"].workerPool; _i < _a.length; _i++) {
            var v = _a[_i];
            if (v !== null && v instanceof window.Worker) {
                v.terminate();
            }
        }
        _graphState__WEBPACK_IMPORTED_MODULE_2__["default"].workerPool = [];
    };
    UIInteractions.getWorkerIfPossible = function (onmessage) {
        var nextIndex = _graphState__WEBPACK_IMPORTED_MODULE_2__["default"].workerPool.findIndex(function (v) {
            return v === null || typeof v === "undefined";
        });
        if (nextIndex === -1) {
            nextIndex = _graphState__WEBPACK_IMPORTED_MODULE_2__["default"].workerPool.length;
        }
        var w = new worker_loader_workers_GraphAlgorithmWorker__WEBPACK_IMPORTED_MODULE_3__["default"]();
        _graphState__WEBPACK_IMPORTED_MODULE_2__["default"].workerPool[nextIndex] = w;
        return new WorkerProxy(nextIndex, w, onmessage);
    };
    UIInteractions.startLoadingAnimation = function () {
        var prog = document.getElementById("task-spinner");
        if (prog.style.display !== "flex") {
            prog.style.display = "flex";
            return true;
        }
        return false;
    };
    UIInteractions.stopLoadingAnimation = function () {
        var prog = document.getElementById("task-spinner");
        if (prog.style.display !== "none") {
            prog.style.display = "none";
        }
    };
    UIInteractions.printAlreadyRunning = function (name) {
        var n = _languages__WEBPACK_IMPORTED_MODULE_6__.current.ThisTask;
        if (name) {
            n = name;
        }
        _util_genericHelpers__WEBPACK_IMPORTED_MODULE_1__["default"].showSimpleModal(_languages__WEBPACK_IMPORTED_MODULE_6__.current.TaskAlreadyRunning, "<p>" + _util_genericHelpers__WEBPACK_IMPORTED_MODULE_1__["default"].stringReplacement(_languages__WEBPACK_IMPORTED_MODULE_6__.current.TaskAlreadyRunningBody, n) + "</p>");
    };
    //const myName = "Graph Coloring Welsh";
    UIInteractions.checkGraphColoring = function () {
        var _this = this;
        var myName = _languages__WEBPACK_IMPORTED_MODULE_6__.current.CheckColoring;
        if (UIInteractions.isRunning[myName]) {
            UIInteractions.printAlreadyRunning(myName);
            return Promise.reject(_languages__WEBPACK_IMPORTED_MODULE_6__.current.TaskAlreadyRunning);
        }
        UIInteractions.isRunning[myName] = true;
        return new Promise(function (resolve) { return __awaiter(_this, void 0, void 0, function () {
            var a, printCC, iStartedProgress, w_1;
            return __generator(this, function (_a) {
                if (window.settings.getOption("direction")) {
                    UIInteractions.isRunning[myName] = false;
                    return [2 /*return*/, resolve()];
                }
                a = {
                    done: false,
                    conflict: []
                };
                printCC = function () {
                    // GraphState.graphProperties.colormode = 2;
                    // GraphState.graphProperties["Approx. Chromatic Welsh"] = a.chromaticNumber;
                    // GraphState.setUpToDate(true, ["Approx. Chromatic Welsh", "graphColoringWelsh"]);
                    // (GraphState.state.graphColoringWelsh as {}) = a.colors;
                    // const colors = help.flatten(a.colors);
                    // let p = help.stringReplacement(languages.current.NumberOfVertices, colors.length + "");
                    // p += "\n" + help.stringReplacement(languages.current.ChromaticNumberIs, a.chromaticNumber + "");
                    // p += "\n\n";
                    // colors.forEach((v, i) => {
                    //     p += help.stringReplacement(languages.current.VertexGetsColor, GraphState.nodeIDToLabel(i), v + "") + "\n";
                    // });                
                    // p += `\n${JSON.stringify(help.rotate(a.colors), null, 4)}\n\n`;
                    var p = "<h3>" + _languages__WEBPACK_IMPORTED_MODULE_6__.current.GraphColoringTitle + "</h3>"; //<hr>${help.htmlEncode(p)}`;
                    //p += `<br/><button class='btn btn-primary' onclick='main.applyColors()'>${languages.current.ReColor}</button>`;
                    _util_genericHelpers__WEBPACK_IMPORTED_MODULE_1__["default"].printout(p);
                    //window.main.applyColors();
                };
                iStartedProgress = UIInteractions.startLoadingAnimation();
                if (!(a.done !== false)) {
                    w_1 = UIInteractions.getWorkerIfPossible(function (e) {
                        a = e.data;
                        printCC();
                        w_1.cleanup();
                        if (iStartedProgress) {
                            UIInteractions.stopLoadingAnimation();
                        }
                        UIInteractions.isRunning[myName] = false;
                        resolve(e.data);
                    });
                    w_1.send({
                        type: "checkColoring",
                        args: [],
                        graph: window.main.graphState.getGraphData(),
                        convertToGraphImmut: true
                    });
                }
                else {
                    printCC();
                    if (iStartedProgress) {
                        UIInteractions.stopLoadingAnimation();
                    }
                    UIInteractions.isRunning[myName] = false;
                }
                return [2 /*return*/];
            });
        }); });
    };
    UIInteractions.makeAndPrintGraphColoringWelsh = function () {
        var _this = this;
        var myName = _languages__WEBPACK_IMPORTED_MODULE_6__.current.GraphColoring;
        if (UIInteractions.isRunning[myName]) {
            UIInteractions.printAlreadyRunning(myName);
            return Promise.reject(_languages__WEBPACK_IMPORTED_MODULE_6__.current.TaskAlreadyRunning);
        }
        UIInteractions.isRunning[myName] = true;
        return new Promise(function (resolve) { return __awaiter(_this, void 0, void 0, function () {
            var a, _a, printGC, iStartedProgress, _b, w_2;
            return __generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        if (window.settings.getOption("direction")) {
                            UIInteractions.isRunning[myName] = false;
                            return [2 /*return*/, resolve()];
                        }
                        _a = {};
                        return [4 /*yield*/, _graphState__WEBPACK_IMPORTED_MODULE_2__["default"].getProperty("Approx. Chromatic Welsh")];
                    case 1:
                        a = (_a.chromaticNumber = (_c.sent()),
                            _a.colors = _graphState__WEBPACK_IMPORTED_MODULE_2__["default"].state.graphColoringWelsh,
                            _a);
                        printGC = function () {
                            _graphState__WEBPACK_IMPORTED_MODULE_2__["default"].graphProperties.colormode = 2;
                            _graphState__WEBPACK_IMPORTED_MODULE_2__["default"].graphProperties["Approx. Chromatic Welsh"] = a.chromaticNumber;
                            _graphState__WEBPACK_IMPORTED_MODULE_2__["default"].setUpToDate(true, ["Approx. Chromatic Welsh", "graphColoringWelsh"]);
                            _graphState__WEBPACK_IMPORTED_MODULE_2__["default"].state.graphColoringWelsh = a.colors;
                            var colors = _util_genericHelpers__WEBPACK_IMPORTED_MODULE_1__["default"].flatten(a.colors);
                            // p += `\nApprox. Chromatic Number from Welsh algorithm: ${a.chromaticNumber}`;
                            var p = _util_genericHelpers__WEBPACK_IMPORTED_MODULE_1__["default"].stringReplacement(_languages__WEBPACK_IMPORTED_MODULE_6__.current.NumberOfVertices, colors.length + "");
                            p += "\n" + _util_genericHelpers__WEBPACK_IMPORTED_MODULE_1__["default"].stringReplacement(_languages__WEBPACK_IMPORTED_MODULE_6__.current.ChromaticNumberIs, a.chromaticNumber + "");
                            p += "\n\n";
                            colors.forEach(function (v, i) {
                                p += _util_genericHelpers__WEBPACK_IMPORTED_MODULE_1__["default"].stringReplacement(_languages__WEBPACK_IMPORTED_MODULE_6__.current.VertexGetsColor, _graphState__WEBPACK_IMPORTED_MODULE_2__["default"].nodeIDToLabel(i), v + "") + "\n";
                            });
                            /*help.printout(p)
            
                            if (!confirm("Do you want to continue")) {
                                window.main.applyColors();
                                return;
                            }*/
                            p += "\n" + JSON.stringify(_util_genericHelpers__WEBPACK_IMPORTED_MODULE_1__["default"].rotate(a.colors), null, 4) + "\n\n";
                            p = "<h3>" + _languages__WEBPACK_IMPORTED_MODULE_6__.current.GraphColoringTitle + "</h3><hr>" + _util_genericHelpers__WEBPACK_IMPORTED_MODULE_1__["default"].htmlEncode(p);
                            p += "<br/><button class='btn btn-primary' onclick='main.applyColors()'>" + _languages__WEBPACK_IMPORTED_MODULE_6__.current.ReColor + "</button>";
                            _util_genericHelpers__WEBPACK_IMPORTED_MODULE_1__["default"].printout(p);
                            window.main.applyColors();
                        };
                        iStartedProgress = UIInteractions.startLoadingAnimation();
                        _b = a.chromaticNumber !== null;
                        if (!_b) return [3 /*break*/, 3];
                        return [4 /*yield*/, _graphState__WEBPACK_IMPORTED_MODULE_2__["default"].getProperty("graphColoringWelsh")];
                    case 2:
                        _b = (_c.sent()) !== null;
                        _c.label = 3;
                    case 3:
                        if (!(_b)) {
                            w_2 = UIInteractions.getWorkerIfPossible(function (e) {
                                a = e.data;
                                printGC();
                                w_2.cleanup();
                                if (iStartedProgress) {
                                    UIInteractions.stopLoadingAnimation();
                                }
                                UIInteractions.isRunning[myName] = false;
                                resolve(e.data);
                            });
                            w_2.send({
                                type: "colorNetworkWelsh",
                                args: [],
                                graph: window.main.graphState.getGraphData(),
                                convertToGraphImmut: true
                            });
                        }
                        else {
                            printGC();
                            if (iStartedProgress) {
                                UIInteractions.stopLoadingAnimation();
                            }
                            UIInteractions.isRunning[myName] = false;
                        }
                        return [2 /*return*/];
                }
            });
        }); });
    };
    UIInteractions.makeAndPrintDirectionalEulerian = function () {
        var _this = this;
        var myName = _languages__WEBPACK_IMPORTED_MODULE_6__.current.Eulerian;
        if (UIInteractions.isRunning[myName]) {
            UIInteractions.printAlreadyRunning(myName);
            return Promise.reject(_languages__WEBPACK_IMPORTED_MODULE_6__.current.TaskAlreadyRunning);
        }
        UIInteractions.isRunning[myName] = true;
        return new Promise(function (resolve) { return __awaiter(_this, void 0, void 0, function () {
            var iStartedProgress, w, scc;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!window.settings.getOption("direction")) {
                            UIInteractions.isRunning[myName] = false;
                            return [2 /*return*/, resolve()];
                        }
                        iStartedProgress = UIInteractions.startLoadingAnimation();
                        w = UIInteractions.getWorkerIfPossible(function (e) {
                            _graphState__WEBPACK_IMPORTED_MODULE_2__["default"].graphProperties.eulerian = e.data;
                            _graphState__WEBPACK_IMPORTED_MODULE_2__["default"].setUpToDate(true, ["eulerian"]);
                            w.cleanup();
                            if (iStartedProgress) {
                                UIInteractions.stopLoadingAnimation();
                            }
                            UIInteractions.isRunning[myName] = false;
                            resolve(e.data);
                        });
                        return [4 /*yield*/, _graphState__WEBPACK_IMPORTED_MODULE_2__["default"].getProperty("stronglyConnectedComponents", true)];
                    case 1:
                        scc = _a.sent();
                        w.send({
                            type: "directionalEulerian",
                            args: [_util_graphHelpers__WEBPACK_IMPORTED_MODULE_0__["default"].findVertexDegreesDirectional(_graphState__WEBPACK_IMPORTED_MODULE_2__["default"].graph.getFullAdjacency()), scc]
                        });
                        return [2 /*return*/];
                }
            });
        }); });
    };
    UIInteractions.makeAndPrintEulerian = function (ignoreDuplicate) {
        var _this = this;
        if (ignoreDuplicate === void 0) { ignoreDuplicate = false; }
        var myName = _languages__WEBPACK_IMPORTED_MODULE_6__.current.Eulerian;
        if (UIInteractions.isRunning[myName]) {
            if (ignoreDuplicate) {
                return Promise.resolve();
            }
            UIInteractions.printAlreadyRunning(myName);
            return Promise.reject(_languages__WEBPACK_IMPORTED_MODULE_6__.current.TaskAlreadyRunning);
        }
        UIInteractions.isRunning[myName] = true;
        return new Promise(function (resolve) { return __awaiter(_this, void 0, void 0, function () {
            var iStartedProgress, cc, w;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (window.settings.getOption("direction")) {
                            UIInteractions.isRunning[myName] = false;
                            return [2 /*return*/, resolve(UIInteractions.makeAndPrintDirectionalEulerian())];
                        }
                        iStartedProgress = UIInteractions.startLoadingAnimation();
                        return [4 /*yield*/, _graphState__WEBPACK_IMPORTED_MODULE_2__["default"].getProperty("connectedComponents", true)];
                    case 1:
                        cc = _a.sent();
                        w = UIInteractions.getWorkerIfPossible(function (e) {
                            _graphState__WEBPACK_IMPORTED_MODULE_2__["default"].graphProperties.eulerian = e.data;
                            _graphState__WEBPACK_IMPORTED_MODULE_2__["default"].setUpToDate(true, ["eulerian"]);
                            if (iStartedProgress) {
                                UIInteractions.stopLoadingAnimation();
                            }
                            UIInteractions.isRunning[myName] = false;
                            w.cleanup();
                            resolve(e.data);
                        });
                        w.send({
                            type: "hasEulerianCircuit",
                            args: [_graphState__WEBPACK_IMPORTED_MODULE_2__["default"].graph.getAllOutDegrees(), cc]
                        });
                        return [2 /*return*/];
                }
            });
        }); });
    };
    UIInteractions.makeAndPrintFFMCMF = function () {
        var _this = this;
        if (!window.settings.getOption("direction") || !window.settings.getOption("weights")) {
            return;
        }
        var myName = _languages__WEBPACK_IMPORTED_MODULE_6__.current.FordFulkerson;
        if (UIInteractions.isRunning[myName]) {
            UIInteractions.printAlreadyRunning(myName);
            return;
        }
        UIInteractions.isRunning[myName] = true;
        _util_genericHelpers__WEBPACK_IMPORTED_MODULE_1__["default"].showFormModal(function ($modal, values) { return __awaiter(_this, void 0, void 0, function () {
            var source, sink, a, cb, iStartedProgress, w;
            return __generator(this, function (_a) {
                $modal.modal("hide");
                source = _graphState__WEBPACK_IMPORTED_MODULE_2__["default"].nodeLabelToID(values[0]);
                sink = _graphState__WEBPACK_IMPORTED_MODULE_2__["default"].nodeLabelToID(values[1]);
                a = null;
                cb = function () {
                    var p = "<h3>" + _languages__WEBPACK_IMPORTED_MODULE_6__.current.FordFulkerson + "</h3><hr>" + _util_genericHelpers__WEBPACK_IMPORTED_MODULE_1__["default"].stringReplacement(_languages__WEBPACK_IMPORTED_MODULE_6__.current.NoPathFromAToB, _util_genericHelpers__WEBPACK_IMPORTED_MODULE_1__["default"].htmlEncode(_graphState__WEBPACK_IMPORTED_MODULE_2__["default"].nodeIDToLabel(source)), _util_genericHelpers__WEBPACK_IMPORTED_MODULE_1__["default"].htmlEncode(_graphState__WEBPACK_IMPORTED_MODULE_2__["default"].nodeIDToLabel(sink)));
                    if (a === false) {
                        _util_genericHelpers__WEBPACK_IMPORTED_MODULE_1__["default"].printout(p);
                        return;
                    }
                    a = a;
                    p = _languages__WEBPACK_IMPORTED_MODULE_6__.current.FordFulkersonMaxFlowMinCut + " " + _util_genericHelpers__WEBPACK_IMPORTED_MODULE_1__["default"].stringReplacement(_languages__WEBPACK_IMPORTED_MODULE_6__.current.MaxFlowFromAToB, _graphState__WEBPACK_IMPORTED_MODULE_2__["default"].nodeIDToLabel(source), _graphState__WEBPACK_IMPORTED_MODULE_2__["default"].nodeIDToLabel(sink), a.maxFlow + "");
                    p += "\n\n" + _languages__WEBPACK_IMPORTED_MODULE_6__.current.UsingCapacities + "\n\n";
                    p = _util_genericHelpers__WEBPACK_IMPORTED_MODULE_1__["default"].htmlEncode(p);
                    a.flowPath.forEach(function (v) {
                        p += _util_genericHelpers__WEBPACK_IMPORTED_MODULE_1__["default"].stringReplacement(_languages__WEBPACK_IMPORTED_MODULE_6__.current.FlowWithCapacity, _graphState__WEBPACK_IMPORTED_MODULE_2__["default"].nodeIDToLabel(v.from), _graphState__WEBPACK_IMPORTED_MODULE_2__["default"].nodeIDToLabel(v.to), v.flow + "", v.capacity + "");
                        p += "\n";
                    });
                    p = p.trim();
                    p = "<h3>" + _languages__WEBPACK_IMPORTED_MODULE_6__.current.FordFulkersonMaxFlowMinCut + "</h3><hr>" + p;
                    _util_genericHelpers__WEBPACK_IMPORTED_MODULE_1__["default"].printout(p);
                };
                iStartedProgress = UIInteractions.startLoadingAnimation();
                w = UIInteractions.getWorkerIfPossible(function (e) {
                    a = e.data;
                    UIInteractions.isRunning[myName] = false;
                    cb();
                    if (iStartedProgress) {
                        UIInteractions.stopLoadingAnimation();
                    }
                    w.cleanup();
                });
                w.send({
                    type: "fordFulkerson",
                    args: [source, sink],
                    convertToGraphImmut: true,
                    graph: window.main.graphState.getGraphData()
                });
                return [2 /*return*/];
            });
        }); }, _languages__WEBPACK_IMPORTED_MODULE_6__.current.FordFulkersonMaxFlowMinCut, _languages__WEBPACK_IMPORTED_MODULE_6__.current.Go, [
            {
                label: _languages__WEBPACK_IMPORTED_MODULE_6__.current.SourceNode,
                type: "text",
                validationFunc: window.main.nodeLabelIDValidator
            },
            {
                label: _languages__WEBPACK_IMPORTED_MODULE_6__.current.SinkNode,
                type: "text",
                validationFunc: window.main.nodeLabelIDValidator
            }
        ]);
    };
    UIInteractions.makeAndPrintKruskal = function () {
        if (window.settings.getOption("direction") || !window.settings.getOption("weights")) {
            return;
        }
        var myName = _languages__WEBPACK_IMPORTED_MODULE_6__.current.KruskalMST;
        if (UIInteractions.isRunning[myName]) {
            UIInteractions.printAlreadyRunning(myName);
            return;
        }
        UIInteractions.isRunning[myName] = true;
        var iStartedProgress = UIInteractions.startLoadingAnimation();
        var w = UIInteractions.getWorkerIfPossible(function (e) {
            var a = e.data;
            w.cleanup();
            var p = _util_genericHelpers__WEBPACK_IMPORTED_MODULE_1__["default"].stringReplacement(_languages__WEBPACK_IMPORTED_MODULE_6__.current.KruskalMSTTotalWeight, a.totalWeight + "");
            p += "\n\n" + _languages__WEBPACK_IMPORTED_MODULE_6__.current.UsingEdges + "\n\n";
            p = _util_genericHelpers__WEBPACK_IMPORTED_MODULE_1__["default"].htmlEncode(p);
            a.mst.forEach(function (v) {
                p += _graphState__WEBPACK_IMPORTED_MODULE_2__["default"].nodeIDToLabel(new _classes_GraphImmut_EdgeImmut__WEBPACK_IMPORTED_MODULE_4__["default"](v).getFrom()) + "&rarr;";
                p += _graphState__WEBPACK_IMPORTED_MODULE_2__["default"].nodeIDToLabel(new _classes_GraphImmut_EdgeImmut__WEBPACK_IMPORTED_MODULE_4__["default"](v).getTo()) + "\n";
            });
            p = p.trim();
            p = "<h3>" + _languages__WEBPACK_IMPORTED_MODULE_6__.current.KruskalMST + "</h3><hr>" + p;
            if (iStartedProgress) {
                UIInteractions.stopLoadingAnimation();
            }
            UIInteractions.isRunning[myName] = false;
            _util_genericHelpers__WEBPACK_IMPORTED_MODULE_1__["default"].printout(p);
        });
        w.send({
            type: "kruskal",
            args: [],
            convertToGraphImmut: true,
            graph: window.main.graphState.getGraphData()
        });
    };
    UIInteractions.makeAndPrintIsCyclic = function () {
        if (!window.settings.getOption("direction")) {
            return Promise.resolve();
        }
        var myName = _languages__WEBPACK_IMPORTED_MODULE_6__.current.Cyclic;
        if (UIInteractions.isRunning[myName]) {
            UIInteractions.printAlreadyRunning(myName);
            return Promise.reject(_languages__WEBPACK_IMPORTED_MODULE_6__.current.TaskAlreadyRunning);
        }
        UIInteractions.isRunning[myName] = true;
        return new Promise(function (resolve) {
            var iStartedProgress = UIInteractions.startLoadingAnimation();
            var w = UIInteractions.getWorkerIfPossible(function (e) {
                _graphState__WEBPACK_IMPORTED_MODULE_2__["default"].graphProperties.cyclic = e.data;
                _graphState__WEBPACK_IMPORTED_MODULE_2__["default"].setUpToDate(true, ["cyclic"]);
                w.cleanup();
                if (iStartedProgress) {
                    UIInteractions.stopLoadingAnimation();
                }
                UIInteractions.isRunning[myName] = false;
                resolve();
            });
            w.send({
                type: "isGraphCyclic",
                args: [],
                convertToGraphImmut: true,
                graph: window.main.graphState.getGraphData()
            });
        });
    };
    UIInteractions.makeAndPrintTopologicalSort = function () {
        if (!window.settings.getOption("direction")) {
            return;
        }
        var myName = _languages__WEBPACK_IMPORTED_MODULE_6__.current.TopoSort;
        if (UIInteractions.isRunning[myName]) {
            UIInteractions.printAlreadyRunning(myName);
            return;
        }
        UIInteractions.isRunning[myName] = true;
        var iStartedProgress = UIInteractions.startLoadingAnimation();
        var w = UIInteractions.getWorkerIfPossible(function (e) {
            var a = e.data;
            w.cleanup();
            if (iStartedProgress) {
                UIInteractions.stopLoadingAnimation();
            }
            UIInteractions.isRunning[myName] = false;
            if (a === true) {
                _graphState__WEBPACK_IMPORTED_MODULE_2__["default"].graphProperties.cyclic = true;
                _graphState__WEBPACK_IMPORTED_MODULE_2__["default"].setUpToDate(true, ["cyclic"]);
                _util_genericHelpers__WEBPACK_IMPORTED_MODULE_1__["default"].printout(_languages__WEBPACK_IMPORTED_MODULE_6__.current.TopoSortErrorHTML);
                return;
            }
            var p = _languages__WEBPACK_IMPORTED_MODULE_6__.current.TopoSort + ":\n\n";
            p = _util_genericHelpers__WEBPACK_IMPORTED_MODULE_1__["default"].htmlEncode(p);
            a.forEach(function (v) {
                p += _graphState__WEBPACK_IMPORTED_MODULE_2__["default"].nodeIDToLabel(v.id) + ", ";
            });
            p = p.slice(0, -2);
            p = "<h3>" + _languages__WEBPACK_IMPORTED_MODULE_6__.current.TopoSort + "</h3><hr>" + p;
            _util_genericHelpers__WEBPACK_IMPORTED_MODULE_1__["default"].printout(p);
        });
        w.send({
            type: "topologicalSort",
            args: [],
            convertToGraphImmut: true,
            graph: window.main.graphState.getGraphData()
        });
    };
    UIInteractions.printGraphAlgorithms = function () {
        var $div = document.getElementById("algorithms-pane");
        $div.innerHTML = "";
        var directional = window.settings.getOption("direction");
        var weighted = window.settings.getOption("weights");
        var addAlgoToPane = function (alg) {
            var navlink = document.createElement("a");
            navlink.classList.add("nav-link");
            navlink.setAttribute("href", "#");
            navlink.innerText = alg.name;
            navlink.addEventListener("click", function (e) {
                e.preventDefault();
                alg.applyFunc();
            });
            $div.appendChild(navlink);
        };
        var a = UIInteractions.getAlgorithms();
        a.forEach(function (alg) {
            if (!alg.display) {
                return;
            }
            if (("directional" in alg && alg.directional === directional) || !("directional" in alg)) {
                if (("weighted" in alg && alg.weighted === weighted) || !("weighted" in alg)) {
                    addAlgoToPane(alg);
                }
            }
            else if (("weighted" in alg && alg.weighted === weighted) || !("weighted" in alg)) {
                if (("directional" in alg && alg.directional === directional) || !("directional" in alg)) {
                    addAlgoToPane(alg);
                }
            }
        });
    };
    UIInteractions.isRunning = {};
    return UIInteractions;
}());
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (UIInteractions);


/***/ }),

/***/ "./src/js/app.ts":
/*!***********************!*\
  !*** ./src/js/app.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var bootstrap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bootstrap */ "./node_modules/bootstrap/dist/js/bootstrap.js");
/* harmony import */ var bootstrap__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(bootstrap__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var vis_network__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vis-network */ "./node_modules/vis-network/peer/umd/vis-network.min.js");
/* harmony import */ var vis_network__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(vis_network__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _main__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./main */ "./src/js/main.ts");
/* harmony import */ var _settings__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./settings */ "./src/js/settings.ts");
/* harmony import */ var _UIInteractions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./UIInteractions */ "./src/js/UIInteractions.ts");
/* harmony import */ var _languages__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./languages */ "./src/js/languages.ts");

var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};






window.main = _main__WEBPACK_IMPORTED_MODULE_2__["default"];
window.settings = _settings__WEBPACK_IMPORTED_MODULE_3__["default"];
_languages__WEBPACK_IMPORTED_MODULE_5__.setLanguage().then(function () {
    window.ui = _UIInteractions__WEBPACK_IMPORTED_MODULE_4__["default"];
    window.ui.registerListeners();
    _main__WEBPACK_IMPORTED_MODULE_2__["default"].visOptions.locales = _languages__WEBPACK_IMPORTED_MODULE_5__.current.VisLocale;
    _main__WEBPACK_IMPORTED_MODULE_2__["default"].visOptions.locale = "";
    window.network = new vis_network__WEBPACK_IMPORTED_MODULE_1__.Network(_main__WEBPACK_IMPORTED_MODULE_2__["default"].container, {}, _main__WEBPACK_IMPORTED_MODULE_2__["default"].visOptions);
    _settings__WEBPACK_IMPORTED_MODULE_3__["default"].loadSettings();
    _main__WEBPACK_IMPORTED_MODULE_2__["default"].addNetworkListeners(window.network);
    var loadDefault = true;
    if (_settings__WEBPACK_IMPORTED_MODULE_3__["default"].checkForLocalStorage()) {
        var s = localStorage.getItem("graphPlayground.lastState");
        if (s !== null) {
            var jsonGraph = JSON.parse(s);
            if ("graph" in jsonGraph && "nodes" in jsonGraph.graph) {
                loadDefault = false;
                _main__WEBPACK_IMPORTED_MODULE_2__["default"].applyState(false, jsonGraph);
            }
        }
    }
    if (loadDefault) {
        (function () { return __awaiter(void 0, void 0, void 0, function () {
            var predefined;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, __webpack_require__.e(/*! import() */ "src_js_util_predefinedGraphs_ts").then(__webpack_require__.bind(__webpack_require__, /*! ./util/predefinedGraphs */ "./src/js/util/predefinedGraphs.ts"))];
                    case 1:
                        predefined = (_a.sent()).default;
                        _main__WEBPACK_IMPORTED_MODULE_2__["default"].setData(predefined.Petersen(), false, true, true);
                        return [2 /*return*/];
                }
            });
        }); })();
    }
});


/***/ }),

/***/ "./src/js/classes/GraphImmut/EdgeImmut.ts":
/*!************************************************!*\
  !*** ./src/js/classes/GraphImmut/EdgeImmut.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });

var EdgeImmut = /** @class */ (function () {
    function EdgeImmut(from, to, weight, extraAttrs) {
        var _newTarget = this.constructor;
        var _this = this;
        if (weight === void 0) { weight = 1; }
        if (extraAttrs === void 0) { extraAttrs = null; }
        if (typeof from === "object") {
            extraAttrs = Object.keys(from)
                .filter(function (key) { return !["from", "to", "weight"].includes(key); })
                .reduce(function (obj, key) {
                obj[key] = from[key];
                return obj;
            }, {});
            to = from.to;
            weight = from.weight;
            from = from.from;
        }
        this.attributes = {};
        if (extraAttrs !== null && typeof extraAttrs === "object") {
            Object.keys(extraAttrs).forEach(function (key) {
                _this.attributes[key] = Object.freeze(extraAttrs[key]);
            });
        }
        this.attributes = Object.freeze(this.attributes);
        this.from = Object.freeze(from);
        this.to = Object.freeze(to);
        this.weight = Object.freeze(parseFloat(weight));
        if (_newTarget === EdgeImmut) {
            Object.freeze(this);
        }
    }
    EdgeImmut.prototype.getFrom = function () {
        return this.from;
    };
    EdgeImmut.prototype.getTo = function () {
        return this.to;
    };
    EdgeImmut.prototype.getWeight = function () {
        return this.weight;
    };
    EdgeImmut.prototype.getAttribute = function (attribute) {
        if (attribute in this.attributes) {
            return this.attributes[attribute];
        }
        return null;
    };
    EdgeImmut.prototype.getAllAttributes = function () {
        return this.attributes;
    };
    EdgeImmut.prototype.toPlain = function () {
        var _this = this;
        var toReturn = { from: this.from, to: this.to, weight: this.weight };
        Object.keys(this.attributes).forEach(function (key) {
            if (!(key in toReturn)) {
                toReturn[key] = _this.attributes[key];
            }
        });
        return toReturn;
    };
    EdgeImmut.prototype.editEdge = function (newWeight, extraAttrs) {
        if (extraAttrs === void 0) { extraAttrs = {}; }
        // Merge existing and new attributes favoring the new
        var attributes = Object.assign({}, this.attributes);
        Object.keys(extraAttrs).forEach(function (key) {
            attributes[key] = extraAttrs[key];
        });
        return new EdgeImmut(this.getFrom(), this.getTo(), newWeight === null ? this.getWeight() : newWeight, attributes);
    };
    return EdgeImmut;
}());
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (EdgeImmut);


/***/ }),

/***/ "./src/js/classes/GraphImmut/GraphImmut.ts":
/*!*************************************************!*\
  !*** ./src/js/classes/GraphImmut/GraphImmut.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var immutable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! immutable */ "./node_modules/immutable/dist/immutable.es.js");
/* harmony import */ var _NodeImmut__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./NodeImmut */ "./src/js/classes/GraphImmut/NodeImmut.ts");
/* harmony import */ var _EdgeImmut__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./EdgeImmut */ "./src/js/classes/GraphImmut/EdgeImmut.ts");




var filterExtraAttr = function (data, labels) {
    return Object.keys(data)
        .filter(function (key) { return !(labels).includes(key); })
        .reduce(function (obj, key) {
        obj[key] = data[key];
        return obj;
    }, {});
};
var filterNodeExtraAttr = function (data) {
    return filterExtraAttr(data, ["label", "id"]);
};
var filterEdgeExtraAttr = function (data) {
    return filterExtraAttr(data, ["from", "to", "weight"]);
};
var genericEdgesToImmutEdges = function (edges, nodeMap) {
    if (nodeMap === void 0) { nodeMap = {}; }
    if (edges === null) {
        return false;
    }
    var newEdges = (0,immutable__WEBPACK_IMPORTED_MODULE_2__.List)();
    if (typeof edges === 'object') {
        edges.forEach(function (edge) {
            var weight = 0;
            var from = 0;
            var to = 0;
            var extraAttrs = {};
            if ("weight" in edge) {
                weight = parseFloat(edge.weight);
            }
            if ("from" in edge) {
                from = nodeMap[edge.from];
            }
            if ("to" in edge) {
                to = nodeMap[edge.to];
            }
            if ("attributes" in edge) {
                extraAttrs = filterEdgeExtraAttr(edge.attributes);
            }
            else {
                extraAttrs = filterEdgeExtraAttr(edge);
            }
            newEdges = newEdges.push(new _EdgeImmut__WEBPACK_IMPORTED_MODULE_1__["default"](from, to, weight, extraAttrs));
        });
    }
    else {
        return false;
    }
    return newEdges;
};
var genericNodesToImmutNodes = function (nodes) {
    if (nodes === null) {
        return false;
    }
    var newNodes = (0,immutable__WEBPACK_IMPORTED_MODULE_2__.List)();
    var nodeMap = {};
    if (typeof nodes === "number") {
        // Create the nodes
        for (var i = 0; i < Math.floor(nodes); i++) {
            newNodes = newNodes.set(i, new _NodeImmut__WEBPACK_IMPORTED_MODULE_0__["default"](i));
            nodeMap[i] = i;
        }
    }
    else if (typeof nodes === 'object') {
        var nodeNum_1 = 0;
        nodes.forEach(function (n) {
            var id = nodeNum_1++;
            var label = null;
            var extraAttrs = null;
            if ("label" in n) {
                label = n.label;
            }
            if ("id" in n) {
                nodeMap[n.id] = id;
                if ("label" in n && n.label === n.id.toString()) {
                    label = id.toString();
                }
            }
            else {
                nodeMap[id] = id;
            }
            if ("attributes" in n) {
                extraAttrs = filterNodeExtraAttr(n.attributes);
            }
            else {
                extraAttrs = filterNodeExtraAttr(n);
            }
            newNodes = newNodes.set(id, new _NodeImmut__WEBPACK_IMPORTED_MODULE_0__["default"](id, label, extraAttrs));
        });
    }
    else {
        return false;
    }
    return { nodes: Object.freeze(newNodes), map: nodeMap };
};
var GraphImmut = /** @class */ (function () {
    function GraphImmut(nodes, edges, directed, weighted) {
        var _newTarget = this.constructor;
        if (edges === void 0) { edges = null; }
        if (directed === void 0) { directed = false; }
        if (weighted === void 0) { weighted = false; }
        this.directed = Object.freeze(directed);
        this.weighted = Object.freeze(weighted);
        var nodeMap = {};
        // Make Nodes
        if (typeof nodes === "number" || (typeof nodes === "object" && !(nodes instanceof immutable__WEBPACK_IMPORTED_MODULE_2__.List))) {
            var n = genericNodesToImmutNodes(nodes);
            if (typeof n !== "object") {
                throw new Error("Unable to parse node input!");
            }
            this.nodes = n.nodes;
            nodeMap = n.map;
        }
        else if (nodes instanceof immutable__WEBPACK_IMPORTED_MODULE_2__.List) {
            this.nodes = nodes;
        }
        else {
            throw new Error("Illegal type of 'node' input to GraphImmut constructor");
        }
        this.nodes = Object.freeze(this.nodes);
        this.numNodes = Object.freeze(this.nodes.size);
        // If we are given edges, add them to the graph
        if (edges !== null && typeof edges === "object" && !(edges instanceof immutable__WEBPACK_IMPORTED_MODULE_2__.List)) {
            var e = genericEdgesToImmutEdges(edges, nodeMap);
            if (typeof e !== "object") {
                throw new Error("Unable to parse Edge input");
            }
            this.edges = e;
        }
        else if (edges instanceof immutable__WEBPACK_IMPORTED_MODULE_2__.List) {
            this.edges = edges;
        }
        else {
            this.edges = (0,immutable__WEBPACK_IMPORTED_MODULE_2__.List)();
        }
        this.edges = Object.freeze(this.edges);
        this.numEdges = Object.freeze(this.edges.size);
        if (_newTarget === GraphImmut) {
            Object.freeze(this);
        }
    }
    GraphImmut.prototype.getNode = function (id, rich) {
        if (rich === void 0) { rich = false; }
        if (id >= this.numNodes) {
            return false;
        }
        var node = this.nodes.get(id);
        if (typeof node === "undefined") {
            return false;
        }
        if (rich) {
            return node;
        }
        return node.toPlain();
    };
    GraphImmut.prototype.getNodeForColor = function (id) {
        var node = this.nodes.get(id);
        if (typeof node === "undefined") {
            return false;
        }
        return node;
    };
    GraphImmut.prototype.addNode = function (data) {
        if (data === void 0) { data = null; }
        if (data === null) {
            data = {};
        }
        var id = this.numNodes;
        if (!("label" in data)) {
            data.label = id.toString();
        }
        var extraAttrs = filterNodeExtraAttr(data);
        return new GraphImmut(this.nodes.set(id, new _NodeImmut__WEBPACK_IMPORTED_MODULE_0__["default"](id, data.label, extraAttrs)), this.edges, this.directed, this.weighted);
    };
    GraphImmut.prototype.editNode = function (id, data) {
        if (!this.nodes.has(id)) {
            return false;
        }
        var extraAttrs = filterNodeExtraAttr(data);
        if (!("label" in data)) {
            data.label = this.getNode(id, true).getLabel();
        }
        return new GraphImmut(this.nodes.set(id, this.getNode(id, true).editNode(data.label, extraAttrs)), this.edges, this.directed, this.weighted);
    };
    GraphImmut.prototype.deleteNode = function (id) {
        // Make sure the ID exists
        if (!(id >= 0 && id < this.numNodes)) {
            return false;
        }
        var nodeMap = {}; // Map for old IDs to new ones since we're deleting an entry
        // Remove it from the node list
        var nodeCount = 0;
        var newNodes = this.nodes
            .filter(function (n) {
            if (n.getID() === id) {
                nodeMap[n.getID()] = -1;
            }
            else {
                nodeMap[n.getID()] = nodeCount++;
            }
            return n.getID() !== id;
        })
            .map(function (node) {
            var label = node.getLabel();
            if (node.getID().toString() === label) {
                label = nodeMap[node.getID()].toString();
            }
            return new _NodeImmut__WEBPACK_IMPORTED_MODULE_0__["default"](nodeMap[node.getID()], label, node.getAllAttributes());
        });
        // Remap edges
        var newEdges = this.edges
            .filter(function (edge) {
            return !(edge.getFrom() === id || edge.getTo() === id);
        })
            .map(function (edge) {
            return new _EdgeImmut__WEBPACK_IMPORTED_MODULE_1__["default"](nodeMap[edge.getFrom()], nodeMap[edge.getTo()], edge.getWeight(), edge.getAllAttributes());
        });
        return new GraphImmut(newNodes, newEdges, this.directed, this.weighted);
    };
    GraphImmut.prototype.addEdge = function (from, to, weight) {
        if (weight === void 0) { weight = 1; }
        if (!this.weighted) {
            weight = 1; // Ensure that edge weights are 1 if this is an unweighted graph
        }
        var newEdges = this.edges.push(new _EdgeImmut__WEBPACK_IMPORTED_MODULE_1__["default"](from, to, parseFloat(weight)));
        return new GraphImmut(this.nodes, newEdges, this.directed, this.weighted);
    };
    GraphImmut.prototype.deleteEdge = function (from, to, weight, deleteAll) {
        var _this = this;
        if (weight === void 0) { weight = null; }
        if (deleteAll === void 0) { deleteAll = true; }
        if (weight !== null) {
            weight = parseFloat(weight);
        }
        var foundOneEdge = false;
        var newEdges = this.edges.filter(function (edge) {
            // If we're not deleting everything and we have found one edge, then do not filter anymore
            if (foundOneEdge && !deleteAll) {
                return true;
            }
            // If we have an exact match
            if (edge.getFrom() === from && edge.getTo() === to && (weight === null || edge.getWeight() === weight)) {
                foundOneEdge = true;
                return false; // Remove this edge
            }
            // If we are undirected, check for opposing matches
            if (!_this.directed) {
                if (edge.getFrom() === to && edge.getTo() === from && (weight === null || edge.getWeight() === weight)) {
                    foundOneEdge = true;
                    return false; // Remove this edge
                }
            }
            return true;
        });
        return new GraphImmut(this.nodes, newEdges, this.directed, this.weighted);
    };
    GraphImmut.prototype.editEdge = function (from, to, newWeight, oldWeight, color) {
        var _this = this;
        if (oldWeight === void 0) { oldWeight = null; }
        if (color === void 0) { color = null; }
        var foundFirst = false;
        if (oldWeight !== null) {
            oldWeight = parseFloat(oldWeight);
        }
        var newEdges = this.edges;
        this.edges.forEach(function (edge, index) {
            if (foundFirst) {
                return;
            }
            if (((edge.getFrom() === from && edge.getTo() === to)
                || (!_this.isDirected() && edge.getFrom() === to && edge.getTo() === from))
                && (oldWeight === null || edge.getWeight() === oldWeight)) {
                if (color !== null) {
                    newEdges = newEdges.set(index, edge.editEdge(newWeight === null ? null : parseFloat(newWeight), { color: color }));
                }
                else {
                    newEdges = newEdges.set(index, edge.editEdge(newWeight === null ? null : parseFloat(newWeight)));
                }
                foundFirst = true;
            }
        });
        return new GraphImmut(this.nodes, newEdges, this.directed, this.weighted);
    };
    GraphImmut.prototype.getAllNodes = function (rich) {
        if (rich === void 0) { rich = false; }
        if (rich) {
            return this.nodes.toArray();
        }
        return this.nodes.map(function (node) {
            return node.toPlain();
        }).toArray();
    };
    GraphImmut.prototype.getAllNodesAsImmutableList = function () {
        return this.nodes;
    };
    GraphImmut.prototype.getAllEdgesAsImmutableList = function () {
        return this.edges;
    };
    GraphImmut.prototype.getAllEdges = function (rich) {
        if (rich === void 0) { rich = false; }
        if (rich) {
            return this.edges.toArray();
        }
        return this.edges.map(function (edge) {
            return edge.toPlain();
        }).toArray();
    };
    GraphImmut.prototype.getNumberOfNodes = function () {
        return this.numNodes;
    };
    GraphImmut.prototype.getNumberOfEdges = function () {
        return this.numEdges;
    };
    GraphImmut.prototype.getAllOutDegrees = function () {
        var degrees = [];
        this.nodes.forEach(function (_, i) {
            degrees[i] = 0;
        });
        this.edges.forEach(function (edge) {
            if (degrees.includes(edge.getFrom())) {
                degrees[edge.getFrom()]++;
            }
            else {
                degrees[edge.getFrom()] = 1;
            }
        });
        return degrees;
    };
    GraphImmut.prototype.asWeighted = function () {
        return new GraphImmut(this.nodes, this.edges.map(function (edge) {
            return edge.editEdge(1);
        }), this.directed, true);
    };
    GraphImmut.prototype.asUnweighted = function () {
        return new GraphImmut(this.nodes, this.edges.map(function (edge) {
            return edge.editEdge(1);
        }), this.directed, false);
    };
    GraphImmut.prototype.asDirected = function (doubleEdges) {
        if (doubleEdges === void 0) { doubleEdges = false; }
        if (!doubleEdges) {
            return new GraphImmut(this.nodes, this.edges, true, this.weighted);
        }
        var newEdges = this.edges;
        this.edges.forEach(function (edge) {
            newEdges = newEdges.push(new _EdgeImmut__WEBPACK_IMPORTED_MODULE_1__["default"](edge.getTo(), edge.getFrom(), edge.getWeight(), edge.getAllAttributes()));
        });
        return new GraphImmut(this.nodes, newEdges, true, this.weighted);
    };
    GraphImmut.prototype.asUndirected = function () {
        var newEdges = (0,immutable__WEBPACK_IMPORTED_MODULE_2__.List)();
        var addedEdges = {};
        this.edges.forEach(function (edge) {
            var from = edge.getFrom();
            var to = edge.getTo();
            if (to < from) {
                from = to;
                to = edge.getFrom();
            }
            if (!(from + "_" + to in addedEdges)) {
                addedEdges[from + "_" + to] = null;
                newEdges = newEdges.push(new _EdgeImmut__WEBPACK_IMPORTED_MODULE_1__["default"](from, to, edge.getWeight(), edge.getAllAttributes()));
            }
        });
        return new GraphImmut(this.nodes, newEdges, false, this.weighted);
    };
    GraphImmut.prototype.asChangedDirectedWeighted = function (directed, weighted) {
        var G = this;
        if (directed && !this.directed) {
            G = G.asDirected();
        }
        else if (!directed && this.directed) {
            G = G.asUndirected();
        }
        if (weighted && !this.weighted) {
            G = G.asWeighted();
        }
        else if (!weighted && this.weighted) {
            G = G.asUnweighted();
        }
        return G;
    };
    // MH: Adjacency matrix
    GraphImmut.prototype.getNodeAdjacency = function (id) {
        var _this = this;
        var adj = [];
        this.edges.forEach(function (edge) {
            if (edge.getFrom() === id) {
                adj.push(edge.getTo());
            }
            else if (!_this.directed && edge.getTo() === id) {
                adj.push(edge.getFrom());
            }
        });
        return adj;
    };
    GraphImmut.prototype.getFullAdjacency = function () {
        var _this = this;
        var adj = [];
        this.nodes.forEach(function (n) {
            adj[n.getID()] = _this.getNodeAdjacency(n.getID());
        });
        return adj;
    };
    GraphImmut.prototype.areAdjacent = function (id1, id2) {
        return this.getNodeAdjacency(id1).includes(id2);
    };
    GraphImmut.prototype.getEdgesBetween = function (id1, id2) {
        var _this = this;
        var edgeList = [];
        if (id1 >= this.numNodes || id2 >= this.numNodes) {
            return edgeList;
        }
        this.edges.forEach(function (edge) {
            if (!_this.directed && edge.getFrom() === id2 && edge.getTo() === id1) {
                edgeList.push(edge);
            }
            if (edge.getFrom() === id1 && edge.getTo() === id2) {
                edgeList.push(edge);
            }
        });
        return edgeList;
    };
    GraphImmut.prototype.getMinWeightEdgeBetween = function (id1, id2) {
        var minWeight = Infinity;
        this.getEdgesBetween(id1, id2).forEach(function (edge) {
            if (edge.getWeight() < minWeight) {
                minWeight = edge.getWeight();
            }
        });
        return minWeight;
    };
    // Take a multigraph and reduce all multiple edges to a single edge, weighted using the reducer
    GraphImmut.prototype.reduceMultiGraph = function (reducer, initialValue) {
        var _this = this;
        if (reducer === void 0) { reducer = Math.min; }
        if (initialValue === void 0) { initialValue = Infinity; }
        var multiEdges = [];
        this.nodes.forEach(function (node) {
            // If we have duplicates
            var adj = _this.getNodeAdjacency(node.getID());
            var uniques = new Set(adj);
            if (uniques.size < adj.length) {
                uniques.forEach(function (to) {
                    var newWeight = _this.getEdgesBetween(node.getID(), to).reduce(function (acc, edge) {
                        return reducer(acc, edge.getWeight());
                    }, initialValue);
                    multiEdges.push({ from: node.getID(), to: to, weight: parseFloat(newWeight) });
                });
            }
        });
        // Remove all multigraph edges and replace them with single new edges
        var newEdges = this.edges.filter(function (edge) {
            var keep = true;
            multiEdges.forEach(function (duplicateEdge) {
                if (edge.getFrom() === duplicateEdge.from && edge.getTo() === duplicateEdge.to) {
                    keep = false;
                }
            });
            return keep;
        });
        multiEdges.forEach(function (edge) {
            newEdges = newEdges.push(new _EdgeImmut__WEBPACK_IMPORTED_MODULE_1__["default"](edge.from, edge.to, edge.weight));
        });
        return new GraphImmut(this.nodes, newEdges, this.directed, this.weighted);
    };
    GraphImmut.prototype.isWeighted = function () {
        return this.weighted;
    };
    GraphImmut.prototype.isDirected = function () {
        return this.directed;
    };
    return GraphImmut;
}());
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (GraphImmut);


/***/ }),

/***/ "./src/js/classes/GraphImmut/NodeImmut.ts":
/*!************************************************!*\
  !*** ./src/js/classes/GraphImmut/NodeImmut.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _util_genericHelpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../util/genericHelpers */ "./src/js/util/genericHelpers.ts");


var capitalLetters = _util_genericHelpers__WEBPACK_IMPORTED_MODULE_0__["default"].deepFreeze([
    "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"
]);
var NodeImmut = /** @class */ (function () {
    function NodeImmut(id, label, extraAttrs) {
        var _newTarget = this.constructor;
        var _this = this;
        if (label === void 0) { label = null; }
        if (extraAttrs === void 0) { extraAttrs = null; }
        if (label === null) {
            // MH: If the id is an integer number and between 0 and 25, than take a capital letter from the alphabet as label
            if (typeof id === "number" && (id >= 0 && id <= 25)) {
                this.label = capitalLetters[id];
            }
            else {
                this.label = id.toString();
            }
        }
        else {
            this.label = label;
        }
        this.attributes = {};
        if (extraAttrs !== null && typeof extraAttrs === "object") {
            Object.keys(extraAttrs).forEach(function (key) {
                _this.attributes[key] = Object.freeze(extraAttrs[key]);
            });
        }
        this.attributes = Object.freeze(this.attributes);
        this.label = Object.freeze(this.label);
        this.id = Object.freeze(id);
        if (_newTarget === NodeImmut) {
            Object.freeze(this);
        }
    }
    NodeImmut.prototype.toPlain = function () {
        var _this = this;
        var toReturn = { id: this.id, label: this.label };
        Object.keys(this.attributes).forEach(function (key) {
            if (!(key in toReturn)) {
                toReturn[key] = _this.attributes[key];
            }
        });
        return toReturn;
    };
    NodeImmut.prototype.getID = function () {
        return this.id;
    };
    NodeImmut.prototype.getLabel = function () {
        return this.label;
    };
    NodeImmut.prototype.getAttribute = function (attribute) {
        if (attribute in this.attributes) {
            return this.attributes[attribute];
        }
        return null;
    };
    NodeImmut.prototype.getAllAttributes = function () {
        return this.attributes;
    };
    NodeImmut.prototype.editNode = function (label, extraAttrs) {
        if (label === void 0) { label = null; }
        if (extraAttrs === void 0) { extraAttrs = null; }
        if (label === null) {
            label = this.getLabel();
        }
        // Merge existing and new attributes favoring the new
        var attributes = Object.assign({}, this.attributes);
        if (extraAttrs !== null) {
            Object.keys(extraAttrs).forEach(function (key) {
                attributes[key] = extraAttrs[key];
            });
        }
        return new NodeImmut(this.getID(), label, attributes);
    };
    return NodeImmut;
}());
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (NodeImmut);


/***/ }),

/***/ "./src/js/graphState.ts":
/*!******************************!*\
  !*** ./src/js/graphState.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var vis_data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vis-data */ "./node_modules/vis-data/peer/umd/vis-data.min.js");
/* harmony import */ var vis_data__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vis_data__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _util_genericHelpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/genericHelpers */ "./src/js/util/genericHelpers.ts");
/* harmony import */ var _classes_GraphImmut_GraphImmut__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./classes/GraphImmut/GraphImmut */ "./src/js/classes/GraphImmut/GraphImmut.ts");
/* harmony import */ var _classes_GraphImmut_NodeImmut__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./classes/GraphImmut/NodeImmut */ "./src/js/classes/GraphImmut/NodeImmut.ts");

var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};




var getInt = function (v) {
    if (typeof v === 'number') {
        return v;
    }
    return parseInt(v);
};
var GraphState = /** @class */ (function () {
    function GraphState() {
    }
    GraphState.setUpToDate = function (value, listOptions) {
        if (value === void 0) { value = false; }
        var all = listOptions === null || typeof listOptions === "undefined";
        var property = false;
        GraphState.upToDate.forEach(function (v) {
            if ((!("always" in v) || !v.always) && (all || listOptions.indexOf(v.name) > -1)) {
                v.upToDate = value;
                if (v.type === "property") {
                    property = true;
                }
            }
        });
        if (property) {
            GraphState.makeAndPrintProperties();
        }
    };
    GraphState.getProperty = function (property, updateIfNotUpdated, ignoreDuplicate) {
        if (updateIfNotUpdated === void 0) { updateIfNotUpdated = false; }
        if (ignoreDuplicate === void 0) { ignoreDuplicate = false; }
        return __awaiter(this, void 0, void 0, function () {
            var a;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        a = GraphState.upToDate.find(function (v) {
                            return ("name" in v && v.name === property);
                        });
                        if (!!a.upToDate) return [3 /*break*/, 3];
                        if (!("applyFunc" in a && typeof a.applyFunc === "function" && updateIfNotUpdated)) return [3 /*break*/, 2];
                        return [4 /*yield*/, a.applyFunc(ignoreDuplicate)];
                    case 1:
                        _a.sent();
                        return [3 /*break*/, 3];
                    case 2: return [2 /*return*/, null];
                    case 3:
                        if (a.type === "state") {
                            return [2 /*return*/, Promise.resolve(GraphState.state[property])];
                        }
                        return [2 /*return*/, Promise.resolve(GraphState.graphProperties[property])];
                }
            });
        });
    };
    GraphState.makeAndPrintProperties = function (recalcLong) {
        if (recalcLong === void 0) { recalcLong = false; }
        return __awaiter(this, void 0, void 0, function () {
            var directional, p, printableProperties;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        directional = window.settings.getOption("direction");
                        GraphState.graphProperties.vertices = GraphState.graph.getNumberOfNodes();
                        GraphState.graphProperties.edges = GraphState.graph.getNumberOfEdges();
                        if (!!directional) return [3 /*break*/, 2];
                        return [4 /*yield*/, GraphState.getProperty("eulerian", true, true)];
                    case 1:
                        _a.sent();
                        _a.label = 2;
                    case 2:
                        p = Object.keys(GraphState.graphProperties);
                        if (recalcLong) {
                            p.forEach(function (v) { return __awaiter(_this, void 0, void 0, function () {
                                return __generator(this, function (_a) {
                                    switch (_a.label) {
                                        case 0: return [4 /*yield*/, GraphState.getProperty(v, true)];
                                        case 1:
                                            _a.sent();
                                            return [2 /*return*/];
                                    }
                                });
                            }); });
                        }
                        printableProperties = {};
                        return [4 /*yield*/, Promise.all(p.map(function (v) { return __awaiter(_this, void 0, void 0, function () {
                                var _a, _b;
                                return __generator(this, function (_c) {
                                    switch (_c.label) {
                                        case 0:
                                            _a = printableProperties;
                                            _b = v;
                                            return [4 /*yield*/, GraphState.getProperty(v)];
                                        case 1:
                                            _a[_b] = _c.sent();
                                            return [2 /*return*/];
                                    }
                                });
                            }); }))];
                    case 3:
                        _a.sent();
                        GraphState.printGraphProperties(printableProperties);
                        return [2 /*return*/];
                }
            });
        });
    };
    GraphState.printGraphProperties = function (properties) {
        var p = "";
        Object.keys(properties).forEach(function (k) {
            if (properties[k] !== null) {
                p += _util_genericHelpers__WEBPACK_IMPORTED_MODULE_1__["default"].toTitleCase(k) + ": " + properties[k] + "\n";
            }
        });
        p = p.trim();
        p = _util_genericHelpers__WEBPACK_IMPORTED_MODULE_1__["default"].htmlEncode(p);
        document.getElementById("graphProps").innerHTML = "<p class='nav-link'>" + p + "</p>";
    };
    GraphState.updateGraph = function (graph) {
        if (graph === void 0) { graph = GraphState.graph; }
        var nodes = graph.getAllNodes();
        var edges = graph.getAllEdges();
        if (!window.settings.getOption("customColors")) {
            nodes = GraphState.clearColorFromNodes(nodes);
            edges = GraphState.clearColorFromEdges(edges);
        }
        window.main.setData({ nodes: nodes, edges: edges });
    };
    GraphState.resetColor = function () {
        var saveState = window.settings.getOption("customColors");
        window.settings.changeOption("customColors", false);
        this.updateGraph();
        window.settings.changeOption("customColors", saveState);
    };
    GraphState.checkColoring = function () {
        console.log("Here we are.");
    };
    GraphState.addEdge = function (from, to, weight, graph) {
        if (weight === void 0) { weight = 0; }
        if (graph === void 0) { graph = GraphState.graph; }
        var edgeFrom = getInt(from);
        var edgeTo = getInt(to);
        graph = graph.addEdge(edgeFrom, edgeTo, weight);
        this.updateGraph(graph);
    };
    GraphState.addNode = function (data, graph) {
        if (graph === void 0) { graph = GraphState.graph; }
        graph = graph.addNode({ label: data.label, x: data.x, y: data.y, color: data.color });
        this.updateGraph(graph);
    };
    GraphState.editNode = function (id, label, color, graph) {
        if (graph === void 0) { graph = GraphState.graph; }
        var iId = getInt(id);
        graph = graph.editNode(iId, { label: label, color: color });
        window.main.setData(GraphState.getGraphData(graph), false, false);
    };
    // static toggleNodeColor(id: number | string, label: string, graph = GraphState.graph) {
    //     const iId = getInt(id);
    //     graph = graph.editNode(iId, { label, color });
    //     window.main.setData(GraphState.getGraphData(graph), false, false);
    // }
    GraphState.editEdge = function (from, to, newWeight, oldWeight, graph) {
        if (graph === void 0) { graph = GraphState.graph; }
        var edgeFrom = getInt(from);
        var edgeTo = getInt(to);
        var newGraph = graph.editEdge(edgeFrom, edgeTo, newWeight, oldWeight);
        if (newGraph instanceof _classes_GraphImmut_GraphImmut__WEBPACK_IMPORTED_MODULE_2__["default"]) {
            window.main.setData(GraphState.getGraphData(newGraph), false, false);
        }
    };
    GraphState.deleteEdge = function (from, to, weight, graph) {
        if (weight === void 0) { weight = null; }
        if (graph === void 0) { graph = GraphState.graph; }
        var edgeFrom = getInt(from);
        var edgeTo = getInt(to);
        graph = graph.deleteEdge(edgeFrom, edgeTo, weight, false);
        this.updateGraph(graph);
    };
    GraphState.deleteNode = function (id, graph) {
        if (graph === void 0) { graph = GraphState.graph; }
        var iId = getInt(id);
        var newGraph = graph.deleteNode(iId);
        if (newGraph instanceof _classes_GraphImmut_GraphImmut__WEBPACK_IMPORTED_MODULE_2__["default"]) {
            this.updateGraph(newGraph);
        }
    };
    GraphState.checkAdjacency = function (from, to, graph) {
        if (graph === void 0) { graph = GraphState.graph; }
        var nodeFrom = getInt(from);
        var nodeTo = getInt(to);
        return graph.areAdjacent(nodeFrom, nodeTo);
    };
    GraphState.clearColorFromNodes = function (nodes) {
        nodes.forEach(function (v) {
            v.color = null;
        });
        return nodes;
    };
    GraphState.clearColorFromEdges = function (edges) {
        edges.forEach(function (v) {
            delete v.color;
        });
        return edges;
    };
    GraphState.nodeIDToLabel = function (id, graph) {
        if (graph === void 0) { graph = GraphState.graph; }
        var n = graph.getNode(id, true);
        if (n !== false && n !== null && n instanceof _classes_GraphImmut_NodeImmut__WEBPACK_IMPORTED_MODULE_3__["default"] && n.getLabel().trim().length > 0) {
            return n.getLabel().trim();
        }
        return id.toString();
    };
    // Preferentially search by ID, label, and case-insensitive label
    GraphState.nodeLabelToID = function (label, graph) {
        if (graph === void 0) { graph = GraphState.graph; }
        var n = graph.getAllNodes(true);
        n = n.filter(function (node) {
            return node.getLabel().toLowerCase() === label.toLowerCase() || node.getID().toString() === label;
        });
        if (n.length === 0) {
            return -1;
        }
        else if (n.length === 1) {
            return n[0].getID();
        }
        var rID = -1;
        var found = false;
        n.forEach(function (node) {
            if (!found && node.getID().toString() === label) {
                rID = node.getID();
                found = true;
            }
        });
        if (found) {
            return rID;
        }
        n.forEach(function (node) {
            if (!found && node.getLabel() === label) {
                rID = node.getID();
                found = true;
            }
        });
        if (found) {
            return rID;
        }
        n.forEach(function (node) {
            if (!found && node.getLabel().toLowerCase() === label.toLowerCase()) {
                rID = node.getID();
                found = true;
            }
        });
        return rID;
    };
    // Return graph as a Vis compatible dataset
    GraphState.getGraphAsDataSet = function (graph) {
        var d = GraphState.getGraphData(graph);
        if (graph.isWeighted()) {
            d.edges.forEach(function (e) {
                e.label = e.weight.toString();
            });
        }
        d.edges.forEach(function (e) {
            if ('color' in e) {
                e.color = { color: e.color };
            }
        });
        return { nodes: new vis_data__WEBPACK_IMPORTED_MODULE_0__.DataSet(d.nodes), edges: new vis_data__WEBPACK_IMPORTED_MODULE_0__.DataSet(d.edges) };
    };
    GraphState.setLocations = function (locations, graph) {
        if (graph === void 0) { graph = GraphState.graph; }
        var newNodes = graph.getAllNodesAsImmutableList();
        Object.keys(locations).forEach(function (i) {
            var v = locations[i];
            var node = newNodes.get(parseInt(i));
            // Only change when there is actually a new position
            if (node.getAttribute("x") !== v.x || node.getAttribute("y") !== v.y) {
                // Batch up all changes that we'll be making
                newNodes = newNodes.set(parseInt(i), node.editNode(node.getLabel(), { x: v.x, y: v.y }));
            }
        });
        return new _classes_GraphImmut_GraphImmut__WEBPACK_IMPORTED_MODULE_2__["default"](newNodes, graph.getAllEdgesAsImmutableList(), graph.isDirected(), graph.isWeighted());
    };
    GraphState.getGraphData = function (graph, clearNodeColors, clearEdgeColors) {
        if (graph === void 0) { graph = GraphState.graph; }
        if (clearNodeColors === void 0) { clearNodeColors = false; }
        if (clearEdgeColors === void 0) { clearEdgeColors = false; }
        var nodes = graph.getAllNodes();
        var edges = graph.getAllEdges();
        return {
            nodes: clearNodeColors ? GraphState.clearColorFromNodes(nodes) : nodes,
            edges: clearEdgeColors ? GraphState.clearColorFromEdges(edges) : edges,
            directed: graph.isDirected(),
            weighted: graph.isWeighted()
        };
    };
    GraphState.workerPool = [];
    GraphState.backHistory = [];
    GraphState.forwardHistory = [];
    GraphState.maxHistory = 10;
    GraphState.upToDate = [
        {
            name: "Approx. Chromatic Welsh", upToDate: false, type: "property",
            applyFunc: function () {
                return window.ui.makeAndPrintGraphColoringWelsh();
            }
        },
        {
            name: "graphColoringWelsh", upToDate: false, type: "state",
            applyFunc: function () {
                return window.ui.makeAndPrintGraphColoringWelsh();
            }
        },
        { name: "vertices", upToDate: true, always: true, type: "property" },
        { name: "edges", upToDate: true, always: true, type: "property" },
        {
            name: "eulerian", upToDate: false, type: "property",
            applyFunc: function (i) {
                return window.ui.makeAndPrintEulerian(i);
            }
        },
        {
            name: "Connected Components", upToDate: false, type: "property",
            applyFunc: function () {
                window.ui.getAlgorithms().find(function (v) { return v.name === 'Connected Components'; }).applyFunc();
            }
        },
        {
            name: "connectedComponents", upToDate: false, type: "state",
            applyFunc: function () {
                window.ui.getAlgorithms().find(function (v) { return v.name === 'Connected Components'; }).applyFunc();
            }
        },
        {
            name: "Strongly Connected Components", upToDate: false, type: "property",
            applyFunc: function () {
                window.ui.getAlgorithms().find(function (v) { return v.name === 'Strongly Connected Components'; }).applyFunc();
            }
        },
        {
            name: "stronglyConnectedComponents", upToDate: false, type: "state",
            applyFunc: function () {
                window.ui.getAlgorithms().find(function (v) { return v.name === 'Strongly Connected Components'; }).applyFunc();
            }
        },
        {
            name: "cyclic", upToDate: false, type: "property",
            applyFunc: function () {
                return window.ui.makeAndPrintIsCyclic();
            }
        },
    ];
    GraphState.state = {
        stronglyConnectedComponents: null,
        connectedComponents: null,
        graphColoringWelsh: null,
    };
    GraphState.graphProperties = {
        vertices: 0,
        edges: 0,
        colormode: 0,
        eulerian: false,
        "Approx. Chromatic Welsh": null,
        "Connected Components": null,
        "Strongly Connected Components": null,
        cyclic: false,
    };
    return GraphState;
}());
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (GraphState);


/***/ }),

/***/ "./src/js/languages.ts":
/*!*****************************!*\
  !*** ./src/js/languages.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Languages": () => (/* binding */ Languages),
/* harmony export */   "current": () => (/* binding */ current),
/* harmony export */   "setLanguage": () => (/* binding */ setLanguage)
/* harmony export */ });
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var Languages;
(function (Languages) {
    Languages["EN_US"] = "EN_US";
})(Languages || (Languages = {}));
var current = {};
var setLanguage = function () { return __awaiter(void 0, void 0, void 0, function () {
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0: return [4 /*yield*/, __webpack_require__("./src lazy recursive ^\\.\\/.*\\.ts$")("./" + (window.settings.getOption("language") || Languages.EN_US) + ".ts")];
            case 1:
                current = (_a.sent()).default;
                return [2 /*return*/];
        }
    });
}); };


/***/ }),

/***/ "./src/js/main.ts":
/*!************************!*\
  !*** ./src/js/main.ts ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _util_graphHelpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/graphHelpers */ "./src/js/util/graphHelpers.ts");
/* harmony import */ var _util_genericHelpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/genericHelpers */ "./src/js/util/genericHelpers.ts");
/* harmony import */ var randomcolor__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! randomcolor */ "./node_modules/randomcolor/randomColor.js");
/* harmony import */ var randomcolor__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(randomcolor__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _graphState__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./graphState */ "./src/js/graphState.ts");
/* harmony import */ var _classes_GraphImmut_GraphImmut__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./classes/GraphImmut/GraphImmut */ "./src/js/classes/GraphImmut/GraphImmut.ts");
/* harmony import */ var _languages__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./languages */ "./src/js/languages.ts");

var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __spreadArrays = (undefined && undefined.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};






var customColorPallete = {
    "1: blue": "DEFAULT",
    "2: red": "#ff3f3f",
    "3: orange": "#ffbf64",
    "4: yellow": "#ffff00",
    "5: green": "#00ff80",
    "6: violet": "#f964ff"
};
//    { type: "select", label: "Color", optionValues: [0, 1, 2, 3, 4, 5], optionText: ["red", "orange", "yellow", "green", "blue", "violet"], initialValue: 0}
//]);
// const basicColors = ['#ff3f3f ', '#ffbf64', '#ffff00', '#00ff80', '#00a0ff', '#f964ff'];
var self = {
    graphState: _graphState__WEBPACK_IMPORTED_MODULE_3__["default"],
    container: document.getElementById('network'),
    // Function used to overwrite the edge edit functionality when weights are active
    visWeightEdgeEdit: function (data, callback) {
        _util_genericHelpers__WEBPACK_IMPORTED_MODULE_1__["default"].showFormModal(function ($modal, vals) {
            callback(null);
            $modal.modal("hide");
            var value = parseFloat(vals[0]);
            _graphState__WEBPACK_IMPORTED_MODULE_3__["default"].editEdge(data.from.id, data.to.id, value, parseFloat(data.label));
        }, _languages__WEBPACK_IMPORTED_MODULE_5__.current.EditEdge, _languages__WEBPACK_IMPORTED_MODULE_5__.current.Save, [
            {
                type: "numeric",
                label: _languages__WEBPACK_IMPORTED_MODULE_5__.current.WeightCapacity,
                initialValue: parseFloat(data.label)
            }
        ]);
    },
    visOptions: {
        edges: { smooth: false },
        interaction: { hover: true },
        manipulation: {
            addNode: function (data, callback) { return __awaiter(void 0, void 0, void 0, function () {
                var customColors, options, _a, _b, _c, _d, _e, _f, _g, _h, _j, $popup;
                return __generator(this, function (_k) {
                    switch (_k.label) {
                        case 0:
                            customColors = window.settings.getOption("customColors");
                            _a = {
                                type: "html"
                            };
                            _b = "<p>";
                            _d = (_c = _util_genericHelpers__WEBPACK_IMPORTED_MODULE_1__["default"]).stringReplacement;
                            _e = [_languages__WEBPACK_IMPORTED_MODULE_5__.current.NodeId];
                            return [4 /*yield*/, _graphState__WEBPACK_IMPORTED_MODULE_3__["default"].getProperty("vertices")];
                        case 1:
                            _f = [
                                (_a.initialValue = _b + _d.apply(_c, _e.concat([_k.sent()])) + "</p>",
                                    _a)
                            ];
                            _g = { type: "text", label: _languages__WEBPACK_IMPORTED_MODULE_5__.current.LabelLabel };
                            _j = (_h = _util_graphHelpers__WEBPACK_IMPORTED_MODULE_0__["default"]).generateLabelFromNumber;
                            return [4 /*yield*/, _graphState__WEBPACK_IMPORTED_MODULE_3__["default"].getProperty("vertices")];
                        case 2:
                            options = _f.concat([
                                (_g.initialValue = _j.apply(_h, [_k.sent()]), _g)
                            ]);
                            if (customColors) {
                                options.push({ type: "select", label: _languages__WEBPACK_IMPORTED_MODULE_5__.current.Color, optionText: Object.keys(customColorPallete), optionValues: Object.values(customColorPallete) });
                            }
                            $popup = _util_genericHelpers__WEBPACK_IMPORTED_MODULE_1__["default"].makeFormModal(_languages__WEBPACK_IMPORTED_MODULE_5__.current.AddNode, _languages__WEBPACK_IMPORTED_MODULE_5__.current.Save, options);
                            $popup.on("click", ".btn-success", function () {
                                $popup.modal("hide");
                                self.saveData(data, callback, "add", $popup.find("input").first().val(), $popup.find("select").first().val());
                            }).on("click", ".btn-cancel", function () {
                                $popup.modal("hide");
                                self.cancelEdit(callback);
                            }).on("hidden.bs.modal", function () {
                                $popup.remove();
                                self.cancelEdit(callback);
                            }).modal("show");
                            return [2 /*return*/];
                    }
                });
            }); },
            editNode: function (data, callback) {
                var customColors = window.settings.getOption("customColors");
                var initialColor = Object.getOwnPropertyNames(data.color).includes("background") ? data.color.background : "white";
                var options = [
                    {
                        type: "html",
                        initialValue: "<p>" + _util_genericHelpers__WEBPACK_IMPORTED_MODULE_1__["default"].stringReplacement(_languages__WEBPACK_IMPORTED_MODULE_5__.current.NodeId, data.id + "") + "</p>"
                    },
                    { type: "text", label: _languages__WEBPACK_IMPORTED_MODULE_5__.current.LabelLabel, initialValue: data.label },
                ];
                if (customColors) {
                    options.push({ type: "select", label: _languages__WEBPACK_IMPORTED_MODULE_5__.current.Color, optionText: Object.keys(customColorPallete), optionValues: Object.values(customColorPallete), initialValue: initialColor });
                }
                var $popup = _util_genericHelpers__WEBPACK_IMPORTED_MODULE_1__["default"].makeFormModal(_languages__WEBPACK_IMPORTED_MODULE_5__.current.EditNode, _languages__WEBPACK_IMPORTED_MODULE_5__.current.Save, options);
                $popup.on("click", ".btn-success", function () {
                    $popup.modal("hide");
                    self.saveData(data, callback, "editNode", $popup.find("input").first().val(), $popup.find("select").first().val());
                }).on("click", ".btn-cancel", function () {
                    $popup.modal("hide");
                    self.cancelEdit(callback);
                }).on("hidden.bs.modal", function () {
                    $popup.remove();
                    self.cancelEdit(callback);
                }).modal("show");
            },
            addEdge: function (data, callback) {
                var apply = function () {
                    if (typeof callback === "function") {
                        callback(null);
                    }
                    _graphState__WEBPACK_IMPORTED_MODULE_3__["default"].addEdge(data.from, data.to);
                };
                if (data.from === data.to) {
                    alert(_languages__WEBPACK_IMPORTED_MODULE_5__.current.ConnectNodeToItselfAlert);
                    return;
                }
                else if (_graphState__WEBPACK_IMPORTED_MODULE_3__["default"].checkAdjacency(data.from, data.to)) {
                    alert(_languages__WEBPACK_IMPORTED_MODULE_5__.current.AlreadyConnectedNodes);
                    return;
                }
                apply();
            },
            /*addEdge: (data, callback) => {
                const apply = () => {
                    if (typeof callback === "function") {
                        callback(null);
                    }
                    GraphState.addEdge(data.from, data.to);
                };
                if (data.from === data.to) {
                    if (confirm(languages.current.ConnectNodeToItselfConfirmation)) {

                        apply();
                    }
                    return;
                }

                apply();
            },*/
            editEdge: function (data, callback) {
                callback(null);
                self.visOptions.manipulation.deleteEdge({ edges: [data.id] });
                self.visOptions.manipulation.addEdge(data);
            },
            deleteEdge: function (data, callback) {
                if (typeof callback === "function") {
                    callback(null);
                }
                data.edges.forEach(function (v) {
                    var weight = null;
                    var edge = window.network.body.data.edges.get(v);
                    var weightFromLabel = edge.label;
                    if (typeof weightFromLabel !== "undefined") {
                        weight = parseFloat(weightFromLabel);
                    }
                    _graphState__WEBPACK_IMPORTED_MODULE_3__["default"].deleteEdge(edge.from, edge.to, weight);
                });
            },
            deleteNode: function (data, callback) {
                callback(null);
                data.nodes.forEach(function (v) {
                    _graphState__WEBPACK_IMPORTED_MODULE_3__["default"].deleteNode(v);
                });
            },
        },
    },
    cancelEdit: function (callback) {
        if (typeof callback === "function") {
            callback(null);
        }
    },
    saveData: function (data, callback, operation, label, color) { return __awaiter(void 0, void 0, void 0, function () {
        return __generator(this, function (_a) {
            callback(null);
            data.label = label;
            data.color = color;
            if (color === "DEFAULT") {
                data.color = undefined;
            }
            if (operation === "add") {
                _graphState__WEBPACK_IMPORTED_MODULE_3__["default"].addNode(data);
            }
            else if (operation === "editNode") {
                _graphState__WEBPACK_IMPORTED_MODULE_3__["default"].editNode(data.id, data.label, data.color);
            }
            return [2 /*return*/];
        });
    }); },
    nodeLabelIDValidator: function (v) {
        if (_graphState__WEBPACK_IMPORTED_MODULE_3__["default"].nodeLabelToID(v) > -1) {
            return true;
        }
        return _languages__WEBPACK_IMPORTED_MODULE_5__.current.InvalidLabelOrId;
    },
    applyColors: function () { return __awaiter(void 0, void 0, void 0, function () {
        var coloring, graphColors, chromaticNumber, basicColors, addColors, colors, G;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (window.settings.getOption("direction")) {
                        return [2 /*return*/];
                    }
                    coloring = _graphState__WEBPACK_IMPORTED_MODULE_3__["default"].graphProperties.colormode;
                    alert(coloring);
                    if (!(coloring === 2)) return [3 /*break*/, 3];
                    return [4 /*yield*/, _graphState__WEBPACK_IMPORTED_MODULE_3__["default"].getProperty("graphColoringWelsh", true)];
                case 1:
                    graphColors = _a.sent();
                    return [4 /*yield*/, _graphState__WEBPACK_IMPORTED_MODULE_3__["default"].getProperty("Approx. Chromatic Welsh", true)];
                case 2:
                    chromaticNumber = _a.sent();
                    return [3 /*break*/, 4];
                case 3:
                    alert("No correct colormode");
                    return [2 /*return*/];
                case 4:
                    basicColors = ['#ff3f3f', '#ffbf64', '#ffff00', '#00ff80', '#00a0ff', '#f964ff'];
                    addColors = randomcolor__WEBPACK_IMPORTED_MODULE_2___default()({ count: chromaticNumber > 7 ? chromaticNumber - 6 : 1, luminosity: "light" });
                    colors = __spreadArrays(basicColors, addColors);
                    G = _graphState__WEBPACK_IMPORTED_MODULE_3__["default"].graph;
                    G.getAllNodes().forEach(function (v) {
                        G = G.editNode(v.id, { color: colors[graphColors[v.id]] });
                    });
                    self.setData(_graphState__WEBPACK_IMPORTED_MODULE_3__["default"].getGraphData(G), false, false);
                    return [2 /*return*/];
            }
        });
    }); },
    setData: function (data, recalcProps, graphChanged, rearrangeGraph) {
        if (recalcProps === void 0) { recalcProps = false; }
        if (graphChanged === void 0) { graphChanged = true; }
        if (rearrangeGraph === void 0) { rearrangeGraph = false; }
        // Store existing positions in the data if we're supposed to keep the layout
        if (rearrangeGraph) {
            data.nodes.forEach(function (v) {
                delete v.x;
                delete v.y;
            });
        }
        if (graphChanged) {
            self.saveState();
        }
        if ("directed" in data && typeof data.directed !== "undefined") {
            window.settings.changeOption("direction", data.directed);
        }
        if ("weighted" in data && typeof data.weighted !== "undefined") {
            window.settings.changeOption("weights", data.weighted);
        }
        var directional = window.settings.getOption("direction");
        var weighted = window.settings.getOption("weights");
        var g = new _classes_GraphImmut_GraphImmut__WEBPACK_IMPORTED_MODULE_4__["default"](data.nodes, data.edges, directional, weighted);
        _graphState__WEBPACK_IMPORTED_MODULE_3__["default"].graph = g;
        // Set a new random seed so that the layout will be different
        self.randomizeNetworkLayoutSeed(window.network);
        window.network.setData(_graphState__WEBPACK_IMPORTED_MODULE_3__["default"].getGraphAsDataSet(g));
        _graphState__WEBPACK_IMPORTED_MODULE_3__["default"].graph = _graphState__WEBPACK_IMPORTED_MODULE_3__["default"].setLocations(window.network.getPositions());
        window.network.disableEditMode();
        window.network.enableEditMode();
        if (graphChanged) {
            window.ui.stopLoadingAnimation();
            window.ui.isRunning = {};
            window.ui.terminateAllWebWorkers();
            window.ui.printGraphAlgorithms();
            _util_genericHelpers__WEBPACK_IMPORTED_MODULE_1__["default"].printout("");
            _graphState__WEBPACK_IMPORTED_MODULE_3__["default"].setUpToDate();
            _graphState__WEBPACK_IMPORTED_MODULE_3__["default"].makeAndPrintProperties(recalcProps);
        }
        self.saveStateLocalStorage();
    },
    saveState: function () {
        if (_graphState__WEBPACK_IMPORTED_MODULE_3__["default"].graph === null) {
            return;
        }
        if (_graphState__WEBPACK_IMPORTED_MODULE_3__["default"].backHistory.length >= _graphState__WEBPACK_IMPORTED_MODULE_3__["default"].maxHistory) {
            _graphState__WEBPACK_IMPORTED_MODULE_3__["default"].backHistory.shift();
        }
        _graphState__WEBPACK_IMPORTED_MODULE_3__["default"].backHistory.push(self.getStateForSaving());
        _graphState__WEBPACK_IMPORTED_MODULE_3__["default"].forwardHistory = [];
        document.getElementsByClassName("icon-undo").item(0).parentElement.parentElement.classList.add("active");
    },
    getStateForSaving: function () {
        var state = {};
        Object.keys(_graphState__WEBPACK_IMPORTED_MODULE_3__["default"]).forEach(function (k) {
            var v = _graphState__WEBPACK_IMPORTED_MODULE_3__["default"][k];
            if (typeof v !== "function") {
                if (typeof v !== "object") {
                    state[k] = v;
                }
                else {
                    if (k === "graph" && v !== null) {
                        state[k] = v;
                    }
                    if (!k.toLowerCase().includes("history")) {
                        state[k] = _util_genericHelpers__WEBPACK_IMPORTED_MODULE_1__["default"].deepCopy(true, Array.isArray(v) ? [] : {}, v);
                    }
                }
            }
        });
        return state;
    },
    undo: function () {
        if (_graphState__WEBPACK_IMPORTED_MODULE_3__["default"].backHistory.length > 0) {
            self.applyState(true);
        }
    },
    redo: function () {
        if (_graphState__WEBPACK_IMPORTED_MODULE_3__["default"].forwardHistory.length > 0) {
            self.applyState(false);
        }
    },
    applyState: function (undo, newState) {
        if (undo === void 0) { undo = true; }
        if (newState === void 0) { newState = null; }
        var firstLoad = newState !== null;
        var currentState = self.getStateForSaving();
        if (!firstLoad) {
            if (undo) {
                newState = _graphState__WEBPACK_IMPORTED_MODULE_3__["default"].backHistory.pop();
            }
            else {
                newState = _graphState__WEBPACK_IMPORTED_MODULE_3__["default"].forwardHistory.pop();
            }
        }
        //@ts-ignore Ignore accessing private props. I do this because saving the state lost the type of the data
        newState.graph = new _classes_GraphImmut_GraphImmut__WEBPACK_IMPORTED_MODULE_4__["default"](newState.graph.nodes, newState.graph.edges, newState.graph.directed, newState.graph.weighted);
        window.settings.changeOption("direction", newState.graph.isDirected());
        window.settings.changeOption("weights", newState.graph.isWeighted());
        _graphState__WEBPACK_IMPORTED_MODULE_3__["default"].graph = newState.graph;
        window.network.setData(_graphState__WEBPACK_IMPORTED_MODULE_3__["default"].getGraphAsDataSet(_graphState__WEBPACK_IMPORTED_MODULE_3__["default"].graph));
        window.network.disableEditMode();
        window.network.enableEditMode();
        window.ui.printGraphAlgorithms();
        _util_genericHelpers__WEBPACK_IMPORTED_MODULE_1__["default"].printout("");
        Object.keys(newState).forEach(function (k) {
            var v = newState[k];
            if (typeof v !== "object") {
                _graphState__WEBPACK_IMPORTED_MODULE_3__["default"][k] = v;
            }
            else if (!k.toLowerCase().includes("history") && k.toLowerCase() !== "graph") {
                if (k.toLowerCase() === "uptodate") {
                    Object.keys(_graphState__WEBPACK_IMPORTED_MODULE_3__["default"][k]).forEach(function (oldKey) {
                        _graphState__WEBPACK_IMPORTED_MODULE_3__["default"][k][oldKey].upToDate = v[oldKey].upToDate;
                    });
                }
                else {
                    _graphState__WEBPACK_IMPORTED_MODULE_3__["default"][k] = _util_genericHelpers__WEBPACK_IMPORTED_MODULE_1__["default"].deepCopy(true, _graphState__WEBPACK_IMPORTED_MODULE_3__["default"][k], v);
                }
            }
        });
        _graphState__WEBPACK_IMPORTED_MODULE_3__["default"].makeAndPrintProperties().then(function () {
            if (undo && !firstLoad) {
                document.getElementsByClassName("icon-redo").item(0).parentElement.parentElement.classList.add("active");
                if (_graphState__WEBPACK_IMPORTED_MODULE_3__["default"].backHistory.length === 0) {
                    document.getElementsByClassName("icon-undo").item(0).parentElement.parentElement.classList.remove("active");
                }
                _graphState__WEBPACK_IMPORTED_MODULE_3__["default"].forwardHistory.push(currentState);
            }
            else if (!undo && !firstLoad) {
                document.getElementsByClassName("icon-undo").item(0).parentElement.parentElement.classList.add("active");
                if (_graphState__WEBPACK_IMPORTED_MODULE_3__["default"].forwardHistory.length === 0) {
                    document.getElementsByClassName("icon-redo").item(0).parentElement.parentElement.classList.remove("active");
                }
                _graphState__WEBPACK_IMPORTED_MODULE_3__["default"].backHistory.push(currentState);
            }
            self.saveStateLocalStorage();
        });
    },
    saveStateLocalStorage: function () {
        if (window.settings.checkForLocalStorage()) {
            localStorage.setItem("graphPlayground.lastState", JSON.stringify(self.getStateForSaving()));
        }
    },
    shuffleNetworkLayout: function () {
        self.setData({
            nodes: _graphState__WEBPACK_IMPORTED_MODULE_3__["default"].graph.getAllNodes(),
            edges: _graphState__WEBPACK_IMPORTED_MODULE_3__["default"].graph.getAllEdges()
        }, false, false, true);
    },
    randomizeNetworkLayoutSeed: function (network) {
        var r = Math.round(Math.random() * 1000000);
        network.layoutEngine.randomSeed = r;
        network.layoutEngine.initialRandomSeed = r;
    },
    addNetworkListeners: function (network) {
        // Enable edit node/edge when double clicking
        network.on("doubleClick", function (p) {
            if (window.settings.getOption("weights") && "edges" in p && p.edges.length === 1) {
                network.editEdgeMode();
            }
            if ("nodes" in p && p.nodes.length === 1 && window.settings.getOption("fastColorChange")) {
                var chosenNode = p.nodes;
                var nodeId = chosenNode[0];
                var data = _graphState__WEBPACK_IMPORTED_MODULE_3__["default"].graph.getNodeForColor(nodeId);
                if (typeof data !== 'boolean') {
                    //console.log(data);
                    var newColor = _util_graphHelpers__WEBPACK_IMPORTED_MODULE_0__["default"].toggleNodeColor(data);
                    _graphState__WEBPACK_IMPORTED_MODULE_3__["default"].editNode(data.getID(), data.getLabel(), newColor);
                }
                else {
                    alert("Double-click selection of node doesn't work.");
                }
                // if (typeof data === "String") {
                //     gHelp.toggleNodeColor(data);
                // }
                // console.log(data);
                // const currentNode = GraphState.graph.getNode(p.nodes[0] as number, true);
                // GraphState.editNode(data.id, data.label, data.color);
            }
            if ("nodes" in p && p.nodes.length === 1 && !window.settings.getOption("fastColorChange")) {
                network.editNode();
            }
        });
        // Save locations of nodes after dragging
        network.on("dragEnd", function () {
            _graphState__WEBPACK_IMPORTED_MODULE_3__["default"].graph = _graphState__WEBPACK_IMPORTED_MODULE_3__["default"].setLocations(network.getPositions());
            self.saveStateLocalStorage(); // Save the new locations as part of the state
        });
        // Delete nodes/edges when hit "Delete"
        var lastNetworkClickEvent = null;
        network.on('click', function (event) {
            lastNetworkClickEvent = event;
        });
        // Delete key to delete node or edge
        document.addEventListener('keyup', function (key) {
            if (key.key === "Delete" && lastNetworkClickEvent !== null) {
                if (self.container.contains(lastNetworkClickEvent.event.target)) {
                    if (("edges" in lastNetworkClickEvent && lastNetworkClickEvent.edges.length === 1)
                        || ("nodes" in lastNetworkClickEvent && lastNetworkClickEvent.nodes.length === 1)) {
                        network.deleteSelected();
                    }
                }
            }
        });
        // Undo/Redo keyboard commands
        document.addEventListener("keydown", function (e) {
            if ((e.key.toLowerCase() === 'y' && e.ctrlKey) || (e.key.toLowerCase() === 'z' && e.ctrlKey && e.shiftKey)) {
                self.redo();
            }
            else if (e.key.toLowerCase() === 'z' && e.ctrlKey) {
                self.undo();
            }
        });
        // When clicking off of the network, remove the Delete functionality
        document.addEventListener("click", function (e) {
            if (self.container !== e.target && !self.container.contains(e.target)) {
                lastNetworkClickEvent = null;
            }
        });
    },
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (self);


/***/ }),

/***/ "./src/js/settings.ts":
/*!****************************!*\
  !*** ./src/js/settings.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });

var Settings = /** @class */ (function () {
    function Settings() {
    }
    Settings.checkForLocalStorage = function () {
        try {
            var x = "__storage_test__";
            localStorage.setItem(x, x);
            localStorage.removeItem(x);
            return true;
        }
        catch (e) {
            return false;
        }
    };
    Settings.saveSettings = function () {
        if (Settings.checkForLocalStorage()) {
            localStorage.setItem("graphPlayground.settings", JSON.stringify(Settings.current));
        }
    };
    Settings.loadSettings = function () {
        if (Settings.checkForLocalStorage()) {
            var settings = localStorage.getItem("graphPlayground.settings");
            if (settings === null) {
                Settings.current = settings;
            }
            else {
                Settings.current = JSON.parse(settings);
            }
        }
        if (Settings.current === null) {
            Settings.current = {};
        }
        Settings.setAll();
    };
    Settings.setAll = function () {
        window.network.setOptions({ nodes: { physics: Settings.getOption("nodePhysics") } });
        window.network.setOptions({ edges: { arrows: { to: Settings.getOption("direction") } } });
        if (Settings.getOption("weights")) {
            window.network.setOptions({
                manipulation: {
                    editEdge: {
                        editWithoutDrag: window.main.visWeightEdgeEdit
                    }
                }
            });
        }
        else {
            window.network.setOptions({ manipulation: { editEdge: window.main.visOptions.manipulation.editEdge } });
        }
    };
    Settings.changeOption = function (option, value) {
        Settings.current[option] = value;
        Settings.saveSettings();
        Settings.setAll();
    };
    Settings.getOption = function (option) {
        if (option in Settings.current) {
            return Settings.current[option];
        }
        return Settings.defaults[option];
    };
    Settings.defaults = {
        nodePhysics: true,
        direction: false,
        weights: false
    };
    Settings.current = {};
    return Settings;
}());
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Settings);


/***/ }),

/***/ "./src/js/util/genericHelpers.ts":
/*!***************************************!*\
  !*** ./src/js/util/genericHelpers.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);

var __spreadArrays = (undefined && undefined.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};

var defaultCancelCb = function ($modal) {
    $modal.modal("hide");
};
var self = {
    deepCopy: function (deep, clone, copy) {
        var isPlainObject = function (obj) {
            if (!obj || {}.toString.call(obj) !== "[object Object]") {
                return false;
            }
            var proto = Object.getPrototypeOf(obj);
            if (!proto) {
                return true;
            }
            // Objects with prototype are plain iff they were constructed by a global Object function
            var Ctor = {}.hasOwnProperty.call(proto, "constructor") && proto.constructor;
            return (typeof Ctor === "function" &&
                {}.hasOwnProperty.toString.call(Ctor) === {}.hasOwnProperty.toString.call(Object));
        };
        var options, name, src, copyIsArray, target = arguments[0] || {}, i = 1, length = arguments.length;
        // Handle a deep copy situation
        if (typeof target === "boolean") {
            deep = target;
            // Skip the boolean and the target
            target = arguments[i] || {};
            i++;
        }
        // Handle case when target is a string or something (possible in deep copy)
        if (typeof target !== "object" && typeof target !== "function") {
            target = {};
        }
        if (i === length) {
            target = this;
            i--;
        }
        for (; i < length; i++) {
            // Only deal with non-null/undefined values
            if ((options = arguments[i]) != null) {
                // Extend the base object
                for (name in options) {
                    src = target[name];
                    copy = options[name];
                    // Prevent never-ending loop
                    if (target === copy) {
                        continue;
                    }
                    // Recurse if we're merging plain objects or arrays
                    if (deep && copy && (isPlainObject(copy) || (copyIsArray = Array.isArray(copy)))) {
                        if (copyIsArray) {
                            copyIsArray = false;
                            clone = src && Array.isArray(src) ? src : [];
                        }
                        else {
                            clone = src && isPlainObject(src) ? src : {};
                        }
                        // Never move original objects, clone them
                        target[name] = self.deepCopy(deep, clone, copy);
                        // Don't bring in undefined values
                    }
                    else if (copy !== undefined) {
                        target[name] = copy;
                    }
                }
            }
        }
        // Return the modified object
        return target;
    },
    deepFreeze: function (o) {
        Object.freeze(o);
        Object.getOwnPropertyNames(o).forEach(function (prop) {
            if (o.hasOwnProperty(prop) &&
                o[prop] !== null &&
                (typeof o[prop] === "object" || typeof o[prop] === "function") &&
                !Object.isFrozen(o[prop])) {
                self.deepFreeze(o[prop]);
            }
        });
        return o;
    },
    sort: function (arr, compareFunction) {
        return __spreadArrays(arr).sort(compareFunction);
    },
    datasetToArray: function (ds, key) {
        var r = [];
        ds.forEach(function (v) {
            r.push(v[key]);
        });
        return self.deepFreeze(r);
    },
    keepOnlyKeys: function (arr, keys) {
        arr = arr.slice();
        arr.forEach(function (v) {
            var k = Object.keys(v);
            k.forEach(function (key) {
                if (keys.indexOf(key) < 0) {
                    delete v[key];
                }
            });
        });
        return self.deepFreeze(arr);
    },
    getFileExtension: function (filename) {
        return filename.split(".").splice(-1)[0];
    },
    htmlEncode: function (string) {
        var t = document.createElement("textarea");
        t.textContent = string;
        string = t.innerHTML.replace(/(?:\r\n|\r|\n)/g, "<br/>");
        return string;
    },
    printout: function (text, escape) {
        if (escape) {
            text = self.htmlEncode(escape);
        }
        document.getElementById("printout").innerHTML = text;
    },
    flatten: function (map) {
        var r = [];
        Object.keys(map).forEach(function (i) {
            r.push(map[i]);
        });
        return self.deepFreeze(r);
    },
    rotate: function (map) {
        var r = {};
        Object.keys(map).forEach(function (i) {
            if (map[i] in r) {
                r[map[i]].push(i);
            }
            else {
                r[map[i]] = [i];
            }
        });
        return self.deepFreeze(r);
    },
    max: function (iterable) {
        return iterable.reduce(function (a, b) {
            return Math.max(a, b);
        });
    },
    toTitleCase: function (str) {
        return str.replace(/(?:^|\s)\w/g, function (match) {
            return match.toUpperCase();
        });
    },
    stringReplacement: function (str) {
        var replacements = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            replacements[_i - 1] = arguments[_i];
        }
        return replacements.reduce(function (val, replacement, i) {
            return val.replace("$" + (i + 1), replacement);
        }, str);
    },
    showSimpleModal: function (title, body) {
        self.showFormModal(null, title, null, [{ type: "html", initialValue: body }], null, false);
    },
    makeFormModal: function (title, successText, form, footer) {
        if (footer === void 0) { footer = true; }
        var f = jquery__WEBPACK_IMPORTED_MODULE_0__("<div>", { class: "modal-body form-group" });
        form.forEach(function (formRow, i) {
            if (!("initialValue" in formRow)) {
                formRow.initialValue = "";
            }
            var id = "form-modal-" + i;
            if ("id" in formRow && formRow.id !== "" && formRow.id !== null && typeof formRow.id === "string") {
                id = formRow.id;
            }
            var basicMap = { class: "form-control", id: id, value: formRow.initialValue };
            if ("extraAttrs" in formRow) {
                Object.keys(formRow.extraAttrs).forEach(function (attrname) {
                    if (typeof formRow.extraAttrs[attrname] !== "function") {
                        basicMap[attrname] = formRow.extraAttrs[attrname];
                    }
                });
            }
            var validFunc = function () { return true; };
            if ("validationFunc" in formRow && typeof formRow.validationFunc === "function") {
                validFunc = formRow.validationFunc;
            }
            var generalValidator = function (event, valueMutator) {
                if (valueMutator === void 0) { valueMutator = null; }
                var $v = jquery__WEBPACK_IMPORTED_MODULE_0__(event.target);
                var val = $v.val();
                if (valueMutator !== null && typeof valueMutator === "function") {
                    val = valueMutator(val);
                }
                var valid = validFunc(val, $v);
                if (valid === true) {
                    $v.removeClass("is-invalid")
                        .next("#feedback-" + i)
                        .remove();
                }
                else {
                    $v.addClass("is-invalid");
                    if ($v.next("#feedback-" + i).length === 0) {
                        $v.after(jquery__WEBPACK_IMPORTED_MODULE_0__("<div>", { class: "invalid-feedback", id: "feedback-" + i }).text(valid));
                    }
                }
            };
            if (formRow.type === "html") {
                f.append(jquery__WEBPACK_IMPORTED_MODULE_0__(formRow.initialValue));
            }
            else if (formRow.type === "checkbox") {
                basicMap.type = "checkbox";
                basicMap.class = "form-check-input";
                delete basicMap.value;
                if (formRow.initialValue) {
                    basicMap.checked = "";
                }
                f.append(jquery__WEBPACK_IMPORTED_MODULE_0__("<div>", { class: "form-check" }).append(jquery__WEBPACK_IMPORTED_MODULE_0__("<label>", { for: id, class: "form-check-label" })
                    .text(formRow.label)
                    .prepend(jquery__WEBPACK_IMPORTED_MODULE_0__("<input>", basicMap))));
            }
            else {
                f.append(jquery__WEBPACK_IMPORTED_MODULE_0__("<label>", { for: id, class: "col-form-label" }).text(formRow.label));
                if (formRow.type === "button") {
                    if ("clickDismiss" in formRow && formRow.clickDismiss === true) {
                        basicMap.class += " btn-dismiss";
                    }
                    var $b = jquery__WEBPACK_IMPORTED_MODULE_0__("<button>", basicMap).text(formRow.initialValue);
                    if ("onclick" in formRow && typeof formRow.onclick === "function") {
                        $b.on("click", formRow.onclick);
                    }
                    f.append($b);
                }
                else if (formRow.type === "numeric") {
                    basicMap.type = "number";
                    f.append(jquery__WEBPACK_IMPORTED_MODULE_0__("<input>", basicMap).on("blur validate", function (e) {
                        generalValidator(e, parseFloat);
                    }));
                }
                else if (formRow.type === "text") {
                    basicMap.type = "text";
                    f.append(jquery__WEBPACK_IMPORTED_MODULE_0__("<input>", basicMap).on("blur validate", generalValidator));
                }
                else if (formRow.type === "file") {
                    basicMap.type = "file";
                    basicMap.class = "form-control-file form-control";
                    f.append(jquery__WEBPACK_IMPORTED_MODULE_0__("<input>", basicMap).on("blur validate", generalValidator));
                }
                else if (formRow.type === "textarea") {
                    var $b = jquery__WEBPACK_IMPORTED_MODULE_0__("<textarea>", basicMap).on("blur validate", generalValidator);
                    if ("onclick" in formRow) {
                        $b.on("click", formRow.onclick);
                    }
                    f.append($b);
                }
                else if (formRow.type === "select") {
                    var $options_1 = jquery__WEBPACK_IMPORTED_MODULE_0__("<select>", basicMap);
                    formRow.optionText.forEach(function (oText, oIndex) {
                        if (oIndex < formRow.optionValues.length) {
                            var selected = false;
                            if (formRow.initialValue === formRow.optionValues[oIndex]) {
                                selected = true;
                            }
                            $options_1.append(jquery__WEBPACK_IMPORTED_MODULE_0__("<option>", { value: formRow.optionValues[oIndex], selected: selected }).text(oText));
                        }
                        else {
                            var selected = false;
                            if (formRow.initialValue === oText) {
                                selected = true;
                            }
                            $options_1.append(jquery__WEBPACK_IMPORTED_MODULE_0__("<option>", { selected: selected }).text(oText));
                        }
                    });
                    f.append($options_1.on("blur validate", generalValidator));
                }
            }
        });
        var $footer = jquery__WEBPACK_IMPORTED_MODULE_0__("<div>", { class: "modal-footer" })
            .append(jquery__WEBPACK_IMPORTED_MODULE_0__("<button>", { class: "btn btn-success", type: "button" }).text(successText))
            .append(jquery__WEBPACK_IMPORTED_MODULE_0__("<button>", { class: "btn btn-danger btn-cancel", type: "button" }).text("Cancel"));
        if (footer === false) {
            $footer = null;
        }
        var $modal = jquery__WEBPACK_IMPORTED_MODULE_0__("<div>", { class: "modal fade", tabindex: "-1", role: "dialog", "aria-hidden": "true" });
        $modal.append(jquery__WEBPACK_IMPORTED_MODULE_0__("<div>", { class: "modal-dialog" }).append(jquery__WEBPACK_IMPORTED_MODULE_0__("<div>", { class: "modal-content" })
            .append(jquery__WEBPACK_IMPORTED_MODULE_0__("<div>", { class: "modal-header" })
            .append(jquery__WEBPACK_IMPORTED_MODULE_0__("<h5>", { class: "modal-title" }).text(title))
            .append(jquery__WEBPACK_IMPORTED_MODULE_0__("<button>", {
            class: "close",
            "data-dismiss": "modal",
            "aria-label": "close"
        }).append(jquery__WEBPACK_IMPORTED_MODULE_0__("<span>", { "aria-hidden": "true" }).html("&times;"))))
            .append(f)
            .append($footer)));
        $modal
            .find("input, textarea")
            .off("keyup")
            .on("keyup", function (e) {
            if (e.key === "Enter") {
                jquery__WEBPACK_IMPORTED_MODULE_0__(".btn-success")
                    .last()
                    .trigger("click");
            }
        });
        $modal.on("shown.bs.modal", function () {
            $modal
                .find("input[type='text'], input[type='number'], textarea")
                .first()
                .trigger("focus");
        });
        return $modal;
    },
    showFormModal: function (successCb, title, successText, form, cancelCb, footer) {
        if (cancelCb === void 0) { cancelCb = defaultCancelCb; }
        if (footer === void 0) { footer = true; }
        var $modal = self.makeFormModal(title, successText, form, footer);
        $modal
            .on("click", ".btn-cancel", function () {
            if (typeof cancelCb === "function") {
                cancelCb($modal);
            }
            else {
                $modal.modal("hide");
            }
        })
            .on("click", ".btn-dismiss", function () {
            $modal.modal("hide");
        })
            .on("click", ".btn-success", function () {
            var vals = [];
            var hasErrors = false;
            $modal.find("input, textarea, select").each(function (i, v) {
                var $v = jquery__WEBPACK_IMPORTED_MODULE_0__(v);
                if ($v.tagName === "SELECT") {
                    vals.push($v.find(":selected").val());
                }
                else if ($v.attr("type") === "checkbox") {
                    vals.push($v.prop("checked"));
                }
                else if ($v.attr("type") === "file") {
                    vals.push($v.get(0).files);
                }
                else if ($v.attr("type") === "number") {
                    vals.push(parseFloat($v.val()));
                }
                else {
                    vals.push($v.val());
                }
                if ($v.trigger("validate").hasClass("is-invalid")) {
                    hasErrors = true;
                }
            });
            if (!hasErrors && typeof successCb === "function") {
                successCb($modal, vals);
            }
        })
            .on("hidden.bs.modal", function () {
            $modal.remove();
        })
            .modal("show");
    }
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (self);


/***/ }),

/***/ "./src/js/util/graphHelpers.ts":
/*!*************************************!*\
  !*** ./src/js/util/graphHelpers.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _graphHelpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./graphHelpers */ "./src/js/util/graphHelpers.ts");
/* harmony import */ var _genericHelpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./genericHelpers */ "./src/js/util/genericHelpers.ts");



var capitalLetters = _genericHelpers__WEBPACK_IMPORTED_MODULE_1__["default"].deepFreeze([
    "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"
]);
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
    findVertexDegreesDirectional: function (adjacencyMatrix) {
        // Adjacency stores IDs of edges TO
        var degrees = [];
        adjacencyMatrix.forEach(function (v, i) {
            if (i in degrees) {
                degrees[i].out += v.length;
            }
            else {
                degrees[i] = { out: v.length, in: 0 };
            }
            v.forEach(function (outV) {
                if (outV in degrees) {
                    degrees[outV].in += 1;
                }
                else {
                    degrees[outV] = { in: 1, out: 0 };
                }
            });
        });
        return degrees;
    },
    interpolateNodesFromEdges: function (edges) {
        var nodes = [];
        // MH: TODO NOT REALLY CLEAN
        window.settings.changeOption("customColors", true);
        edges.forEach(function (v) {
            nodes[v.from] = { id: v.from, label: _graphHelpers__WEBPACK_IMPORTED_MODULE_0__["default"].generateLabelFromNumber(v.from) };
            nodes[v.to] = { id: v.to, label: _graphHelpers__WEBPACK_IMPORTED_MODULE_0__["default"].generateLabelFromNumber(v.to) };
        });
        return nodes;
    },
    generateLabelFromNumber: function (prelabel) {
        if (typeof prelabel === "number" && (prelabel >= 0 && prelabel <= 25)) {
            return capitalLetters[prelabel];
        }
        else {
            return prelabel.toString();
        }
    },
    toggleNodeColor: function (node) {
        var customColorPalleteArray = ["DEFAULT", "#ff3f3f", "#ffbf64", "#ffff00", "#00ff80", "#f964ff"];
        var customColorPalleteInverted = {
            "#ff3f3f": 1,
            "#ffbf64": 2,
            "#ffff00": 3,
            "#00ff80": 4,
            "#f964ff": 5
        };
        var currentColor = node.getAttribute('color');
        var currentIndex = 0;
        if (currentColor === null || currentColor === undefined) {
            currentIndex = 0;
        }
        else {
            var currentColorString = currentColor;
            currentIndex = customColorPalleteArray.indexOf(currentColorString);
        }
        if (currentIndex === 5 || currentIndex < 0) {
            return undefined;
        }
        return customColorPalleteArray[(currentIndex + 1) % 6];
    }
});


/***/ }),

/***/ "./node_modules/worker-loader/dist/cjs.js!./src/js/workers/GraphAlgorithmWorker.ts":
/*!*****************************************************************************************!*\
  !*** ./node_modules/worker-loader/dist/cjs.js!./src/js/workers/GraphAlgorithmWorker.ts ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Worker_fn)
/* harmony export */ });
function Worker_fn() {
  return new Worker(__webpack_require__.p + "GraphAlgorithmWorker-e290f679bca29cc97944.min.worker.js");
}


/***/ }),

/***/ "./src lazy recursive ^\\.\\/.*\\.ts$":
/*!*************************************************!*\
  !*** ./src/ lazy ^\.\/.*\.ts$ namespace object ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var map = {
	"./EN_US.ts": [
		"./src/EN_US.ts",
		9,
		"src_EN_US_ts"
	],
	"./custom.d.ts": [
		"./src/custom.d.ts",
		7,
		"src_custom_d_ts"
	],
	"./js/GraphAlgorithms.ts": [
		"./src/js/GraphAlgorithms.ts",
		9,
		"src_js_GraphAlgorithms_ts"
	],
	"./js/UIInteractions.ts": [
		"./src/js/UIInteractions.ts",
		9
	],
	"./js/app.ts": [
		"./src/js/app.ts",
		9
	],
	"./js/classes/GraphImmut/EdgeImmut.ts": [
		"./src/js/classes/GraphImmut/EdgeImmut.ts",
		9
	],
	"./js/classes/GraphImmut/GraphImmut.ts": [
		"./src/js/classes/GraphImmut/GraphImmut.ts",
		9
	],
	"./js/classes/GraphImmut/NodeImmut.ts": [
		"./src/js/classes/GraphImmut/NodeImmut.ts",
		9
	],
	"./js/classes/SpanningTree.ts": [
		"./src/js/classes/SpanningTree.ts",
		9,
		"src_js_classes_SpanningTree_ts"
	],
	"./js/dataImportExport.ts": [
		"./src/js/dataImportExport.ts",
		9,
		"src_js_dataImportExport_ts"
	],
	"./js/graphState.ts": [
		"./src/js/graphState.ts",
		9
	],
	"./js/languages.ts": [
		"./src/js/languages.ts",
		9
	],
	"./js/main.ts": [
		"./src/js/main.ts",
		9
	],
	"./js/settings.ts": [
		"./src/js/settings.ts",
		9
	],
	"./js/util/genericHelpers.ts": [
		"./src/js/util/genericHelpers.ts",
		9
	],
	"./js/util/graphHelpers.ts": [
		"./src/js/util/graphHelpers.ts",
		9
	],
	"./js/util/predefinedGraphs.ts": [
		"./src/js/util/predefinedGraphs.ts",
		9,
		"src_js_util_predefinedGraphs_ts"
	],
	"./js/workers/GraphAlgorithmWorker.ts": [
		"./src/js/workers/GraphAlgorithmWorker.ts",
		9,
		"src_js_GraphAlgorithms_ts",
		"src_js_workers_GraphAlgorithmWorker_ts"
	],
	"./js/workers/pwaServiceWorker.ts": [
		"./src/js/workers/pwaServiceWorker.ts",
		7,
		"src_js_workers_pwaServiceWorker_ts"
	],
	"./overloadTypes.d.ts": [
		"./src/overloadTypes.d.ts",
		7,
		"src_overloadTypes_d_ts"
	]
};
function webpackAsyncContext(req) {
	if(!__webpack_require__.o(map, req)) {
		return Promise.resolve().then(() => {
			var e = new Error("Cannot find module '" + req + "'");
			e.code = 'MODULE_NOT_FOUND';
			throw e;
		});
	}

	var ids = map[req], id = ids[0];
	return Promise.all(ids.slice(2).map(__webpack_require__.e)).then(() => {
		return __webpack_require__.t(id, ids[1] | 16)
	});
}
webpackAsyncContext.keys = () => (Object.keys(map));
webpackAsyncContext.id = "./src lazy recursive ^\\.\\/.*\\.ts$";
module.exports = webpackAsyncContext;

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			loaded: false,
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	(() => {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = (result, chunkIds, fn, priority) => {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var [chunkIds, fn, priority] = deferred[i];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					var r = fn();
/******/ 					if (r !== undefined) result = r;
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/create fake namespace object */
/******/ 	(() => {
/******/ 		var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);
/******/ 		var leafPrototypes;
/******/ 		// create a fake namespace object
/******/ 		// mode & 1: value is a module id, require it
/******/ 		// mode & 2: merge all properties of value into the ns
/******/ 		// mode & 4: return value when already ns object
/******/ 		// mode & 16: return value when it's Promise-like
/******/ 		// mode & 8|1: behave like require
/******/ 		__webpack_require__.t = function(value, mode) {
/******/ 			if(mode & 1) value = this(value);
/******/ 			if(mode & 8) return value;
/******/ 			if(typeof value === 'object' && value) {
/******/ 				if((mode & 4) && value.__esModule) return value;
/******/ 				if((mode & 16) && typeof value.then === 'function') return value;
/******/ 			}
/******/ 			var ns = Object.create(null);
/******/ 			__webpack_require__.r(ns);
/******/ 			var def = {};
/******/ 			leafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];
/******/ 			for(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {
/******/ 				Object.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));
/******/ 			}
/******/ 			def['default'] = () => (value);
/******/ 			__webpack_require__.d(ns, def);
/******/ 			return ns;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/ensure chunk */
/******/ 	(() => {
/******/ 		__webpack_require__.f = {};
/******/ 		// This file contains only the entry chunk.
/******/ 		// The chunk loading function for additional chunks
/******/ 		__webpack_require__.e = (chunkId) => {
/******/ 			return Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {
/******/ 				__webpack_require__.f[key](chunkId, promises);
/******/ 				return promises;
/******/ 			}, []));
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/get javascript chunk filename */
/******/ 	(() => {
/******/ 		// This function allow to reference async chunks
/******/ 		__webpack_require__.u = (chunkId) => {
/******/ 			// return url for filenames based on template
/******/ 			return "" + chunkId + "-" + {"src_js_util_predefinedGraphs_ts":"5b726e6a0ca030329847","src_EN_US_ts":"a43a285707c342831452","src_custom_d_ts":"cc488757333ac874f6ba","src_js_GraphAlgorithms_ts":"09d3817ec63324055062","src_js_classes_SpanningTree_ts":"a6d712f9d026bc75194c","src_js_dataImportExport_ts":"449f9b7df5c8015f0bc9","src_js_workers_GraphAlgorithmWorker_ts":"49f289a404761758d2d1","src_js_workers_pwaServiceWorker_ts":"25c948cdc5f264cad919","src_overloadTypes_d_ts":"71c8dfa2c6943d2e4d22"}[chunkId] + ".min.js";
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/load script */
/******/ 	(() => {
/******/ 		var inProgress = {};
/******/ 		var dataWebpackPrefix = "graphPlayground:";
/******/ 		// loadScript function to load a script via script tag
/******/ 		__webpack_require__.l = (url, done, key, chunkId) => {
/******/ 			if(inProgress[url]) { inProgress[url].push(done); return; }
/******/ 			var script, needAttach;
/******/ 			if(key !== undefined) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				for(var i = 0; i < scripts.length; i++) {
/******/ 					var s = scripts[i];
/******/ 					if(s.getAttribute("src") == url || s.getAttribute("data-webpack") == dataWebpackPrefix + key) { script = s; break; }
/******/ 				}
/******/ 			}
/******/ 			if(!script) {
/******/ 				needAttach = true;
/******/ 				script = document.createElement('script');
/******/ 		
/******/ 				script.charset = 'utf-8';
/******/ 				script.timeout = 120;
/******/ 				if (__webpack_require__.nc) {
/******/ 					script.setAttribute("nonce", __webpack_require__.nc);
/******/ 				}
/******/ 				script.setAttribute("data-webpack", dataWebpackPrefix + key);
/******/ 				script.src = url;
/******/ 			}
/******/ 			inProgress[url] = [done];
/******/ 			var onScriptComplete = (prev, event) => {
/******/ 				// avoid mem leaks in IE.
/******/ 				script.onerror = script.onload = null;
/******/ 				clearTimeout(timeout);
/******/ 				var doneFns = inProgress[url];
/******/ 				delete inProgress[url];
/******/ 				script.parentNode && script.parentNode.removeChild(script);
/******/ 				doneFns && doneFns.forEach((fn) => (fn(event)));
/******/ 				if(prev) return prev(event);
/******/ 			}
/******/ 			;
/******/ 			var timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);
/******/ 			script.onerror = onScriptComplete.bind(null, script.onerror);
/******/ 			script.onload = onScriptComplete.bind(null, script.onload);
/******/ 			needAttach && document.head.appendChild(script);
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	(() => {
/******/ 		__webpack_require__.nmd = (module) => {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		__webpack_require__.p = "";
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"bundle": 0
/******/ 		};
/******/ 		
/******/ 		__webpack_require__.f.j = (chunkId, promises) => {
/******/ 				// JSONP chunk loading for javascript
/******/ 				var installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;
/******/ 				if(installedChunkData !== 0) { // 0 means "already installed".
/******/ 		
/******/ 					// a Promise means "currently loading".
/******/ 					if(installedChunkData) {
/******/ 						promises.push(installedChunkData[2]);
/******/ 					} else {
/******/ 						if(true) { // all chunks have JS
/******/ 							// setup Promise in chunk cache
/******/ 							var promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));
/******/ 							promises.push(installedChunkData[2] = promise);
/******/ 		
/******/ 							// start chunk loading
/******/ 							var url = __webpack_require__.p + __webpack_require__.u(chunkId);
/******/ 							// create error before stack unwound to get useful stacktrace later
/******/ 							var error = new Error();
/******/ 							var loadingEnded = (event) => {
/******/ 								if(__webpack_require__.o(installedChunks, chunkId)) {
/******/ 									installedChunkData = installedChunks[chunkId];
/******/ 									if(installedChunkData !== 0) installedChunks[chunkId] = undefined;
/******/ 									if(installedChunkData) {
/******/ 										var errorType = event && (event.type === 'load' ? 'missing' : event.type);
/******/ 										var realSrc = event && event.target && event.target.src;
/******/ 										error.message = 'Loading chunk ' + chunkId + ' failed.\n(' + errorType + ': ' + realSrc + ')';
/******/ 										error.name = 'ChunkLoadError';
/******/ 										error.type = errorType;
/******/ 										error.request = realSrc;
/******/ 										installedChunkData[1](error);
/******/ 									}
/******/ 								}
/******/ 							};
/******/ 							__webpack_require__.l(url, loadingEnded, "chunk-" + chunkId, chunkId);
/******/ 						} else installedChunks[chunkId] = 0;
/******/ 					}
/******/ 				}
/******/ 		};
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some((id) => (installedChunks[id] !== 0))) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkId] = 0;
/******/ 			}
/******/ 			return __webpack_require__.O(result);
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunkgraphPlayground"] = self["webpackChunkgraphPlayground"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module depends on other loaded chunks and execution need to be delayed
/******/ 	var __webpack_exports__ = __webpack_require__.O(undefined, ["vendors"], () => (__webpack_require__("./src/js/app.ts")))
/******/ 	__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 	
/******/ })()
;
//# sourceMappingURL=bundle-38f1db95d1b42c27f657.min.js.map