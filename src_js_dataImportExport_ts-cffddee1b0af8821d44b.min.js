"use strict";
(self["webpackChunkgraphPlayground"] = self["webpackChunkgraphPlayground"] || []).push([["src_js_dataImportExport_ts"],{

/***/ "./src/js/dataImportExport.ts":
/*!************************************!*\
  !*** ./src/js/dataImportExport.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _util_genericHelpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util/genericHelpers */ "./src/js/util/genericHelpers.ts");
/* harmony import */ var _classes_GraphImmut_GraphImmut__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./classes/GraphImmut/GraphImmut */ "./src/js/classes/GraphImmut/GraphImmut.ts");
/* harmony import */ var _graphState__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./graphState */ "./src/js/graphState.ts");
/* harmony import */ var _languages__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./languages */ "./src/js/languages.ts");





var exportedTextSelector = "exportedText";
var self = {
    importByString: function (string, format) {
        if (format.toLowerCase() === "json") {
            try {
                var n = JSON.parse(string);
                if ("nodes" in n && "edges" in n) {
                    window.network.setData({}); // Clear out the existing network in order to import the proper
                    // locations
                    window.main.setData(n, false, true, false);
                }
                else {
                    _util_genericHelpers__WEBPACK_IMPORTED_MODULE_0__["default"].showSimpleModal(_languages__WEBPACK_IMPORTED_MODULE_3__.current.DataImportError, "<p>" + _languages__WEBPACK_IMPORTED_MODULE_3__.current.DataImportErrorText + "</p>");
                }
            }
            catch (err) {
                _util_genericHelpers__WEBPACK_IMPORTED_MODULE_0__["default"].showSimpleModal(_languages__WEBPACK_IMPORTED_MODULE_3__.current.JsonParseError, "<p>" + _languages__WEBPACK_IMPORTED_MODULE_3__.current.JsonParseErrorText + "</p><pre>" + err + "</pre>");
            }
        }
        else if (format.toLowerCase() === "dimacs") {
            var lines = string.split(/\r?\n/);
            var graph_1 = null;
            var error_1 = false;
            lines.forEach(function (l) {
                var vals = l.split(/\s+/);
                if (vals[0].toLowerCase() === "p") {
                    if (vals[1].toLowerCase() !== "edge") {
                        _util_genericHelpers__WEBPACK_IMPORTED_MODULE_0__["default"].showSimpleModal(_languages__WEBPACK_IMPORTED_MODULE_3__.current.DimacsParseError, "<p>" + _util_genericHelpers__WEBPACK_IMPORTED_MODULE_0__["default"].htmlEncode(_languages__WEBPACK_IMPORTED_MODULE_3__.current.DimacsParseErrorText) + "</p>");
                        error_1 = true;
                        return;
                    }
                    graph_1 = new _classes_GraphImmut_GraphImmut__WEBPACK_IMPORTED_MODULE_1__["default"](parseInt(vals[2]));
                }
                else if (vals[0].toLowerCase() === "e" && graph_1 !== null) {
                    graph_1 = graph_1.addEdge(parseInt(vals[1]) - 1, parseInt(vals[2]) - 1);
                }
            });
            if (graph_1 === null && !error_1) {
                _util_genericHelpers__WEBPACK_IMPORTED_MODULE_0__["default"].showSimpleModal(_languages__WEBPACK_IMPORTED_MODULE_3__.current.DimacsParseError, "<p>" + _languages__WEBPACK_IMPORTED_MODULE_3__.current.DimacsParseErrorNoProgram + "</p>");
                error_1 = true;
            }
            if (!error_1) {
                var d = _graphState__WEBPACK_IMPORTED_MODULE_2__["default"].getGraphData(graph_1);
                d.nodes.forEach(function (v) {
                    v.label = v.id.toString();
                });
                window.main.setData(d, false, true, true);
            }
        }
        else {
            _util_genericHelpers__WEBPACK_IMPORTED_MODULE_0__["default"].showSimpleModal(_languages__WEBPACK_IMPORTED_MODULE_3__.current.UnrecognizedInputError, "<p>" + _languages__WEBPACK_IMPORTED_MODULE_3__.current.UnrecognizedInputError + ".</p>");
        }
    },
    makeImportTextModal: function () {
        _util_genericHelpers__WEBPACK_IMPORTED_MODULE_0__["default"].showFormModal(function ($modal, values) {
            $modal.modal("hide");
            self.importByString(values[0], values[1]);
        }, _languages__WEBPACK_IMPORTED_MODULE_3__.current.ImportGraphFromText, _languages__WEBPACK_IMPORTED_MODULE_3__.current.Import, [{ type: "textarea", label: _languages__WEBPACK_IMPORTED_MODULE_3__.current.ImportText, extraAttrs: { style: "height: 20vh; min-height:400px;" } },
            { type: "select", label: _languages__WEBPACK_IMPORTED_MODULE_3__.current.Format, optionValues: ["json", "dimacs"], optionText: ["JSON", "DIMACS"] }
        ]);
    },
    makeImportFileModal: function () {
        _util_genericHelpers__WEBPACK_IMPORTED_MODULE_0__["default"].showFormModal(function ($modal, values) {
            $modal.modal("hide");
            var files = values[0];
            if (files.length === 1) {
                var file_1 = files[0];
                var reader = new FileReader();
                reader.onload = function (event) {
                    self.importByString(event.target.result, _util_genericHelpers__WEBPACK_IMPORTED_MODULE_0__["default"].getFileExtension(file_1.name));
                };
                reader.readAsText(file_1);
            }
        }, _languages__WEBPACK_IMPORTED_MODULE_3__.current.ImportGraphFromFile, _languages__WEBPACK_IMPORTED_MODULE_3__.current.Import, [{
                type: "file", label: _languages__WEBPACK_IMPORTED_MODULE_3__.current.UploadFile,
                validationFunc: function (val, $files) {
                    var files = $files.get(0).files;
                    if (files.length >= 1) {
                        return true;
                    }
                    return _languages__WEBPACK_IMPORTED_MODULE_3__.current.MustChooseFileError;
                }
            }]);
    },
    makeImportGraphExercise1: function () {
        var g1_string = '{"nodes":[{"id":0,"label":"A","x":0,"y":0},{"id":1,"label":"B","x":-70,"y":-70},{"id":2,"label":"C","x":-70,"y":70},{"id":3,"label":"D","x":50,"y":0},{"id":4,"label":"E","x":120,"y":-70},{"id":5,"label":"F","x":120,"y":70}],"edges":[{"from":0,"to":1,"weight":1},{"from":0,"to":2,"weight":1},{"from":0,"to":3,"weight":1},{"from":1,"to":2,"weight":1},{"from":1,"to":4,"weight":1},{"from":2,"to":5,"weight":1},{"from":3,"to":4,"weight":1},{"from":3,"to":5,"weight":1},{"from":4,"to":5,"weight":1}],"directed":false,"weighted":false}';
        self.importByString(g1_string, "json");
    },
    makeImportGraphExercise2: function () {
        var g1_string = '{"nodes":[{"id":0,"label":"A","x":0,"y":0},{"id":1,"label":"B","x":-70,"y":-70},{"id":2,"label":"C","x":-70,"y":70},{"id":3,"label":"D","x":50,"y":0},{"id":4,"label":"E","x":120,"y":-70},{"id":5,"label":"F","x":120,"y":70}],"edges":[{"from":0,"to":1,"weight":1},{"from":0,"to":2,"weight":1},{"from":0,"to":3,"weight":1},{"from":1,"to":2,"weight":1},{"from":1,"to":4,"weight":1},{"from":2,"to":5,"weight":1},{"from":3,"to":4,"weight":1},{"from":3,"to":5,"weight":1},{"from":4,"to":5,"weight":1}],"directed":false,"weighted":false}';
        self.importByString(g1_string, "json");
    },
    makeImportGraphExercise3: function () {
        var g1_string = '{"nodes":[{"id":0,"label":"A","x":0,"y":0},{"id":1,"label":"B","x":-70,"y":-70},{"id":2,"label":"C","x":-70,"y":70},{"id":3,"label":"D","x":50,"y":0},{"id":4,"label":"E","x":120,"y":-70},{"id":5,"label":"F","x":120,"y":70}],"edges":[{"from":0,"to":1,"weight":1},{"from":0,"to":2,"weight":1},{"from":0,"to":3,"weight":1},{"from":1,"to":2,"weight":1},{"from":1,"to":4,"weight":1},{"from":2,"to":5,"weight":1},{"from":3,"to":4,"weight":1},{"from":3,"to":5,"weight":1},{"from":4,"to":5,"weight":1}],"directed":false,"weighted":false}';
        self.importByString(g1_string, "json");
    },
    makeImportGraphExercise4: function () {
        var g1_string = '{"nodes":[{"id":0,"label":"A","x":0,"y":0},{"id":1,"label":"B","x":-70,"y":-70},{"id":2,"label":"C","x":-70,"y":70},{"id":3,"label":"D","x":50,"y":0},{"id":4,"label":"E","x":120,"y":-70},{"id":5,"label":"F","x":120,"y":70}],"edges":[{"from":0,"to":1,"weight":1},{"from":0,"to":2,"weight":1},{"from":0,"to":3,"weight":1},{"from":1,"to":2,"weight":1},{"from":1,"to":4,"weight":1},{"from":2,"to":5,"weight":1},{"from":3,"to":4,"weight":1},{"from":3,"to":5,"weight":1},{"from":4,"to":5,"weight":1}],"directed":false,"weighted":false}';
        self.importByString(g1_string, "json");
    },
    makeExportFileModal: function () {
        _util_genericHelpers__WEBPACK_IMPORTED_MODULE_0__["default"].showFormModal(null, _languages__WEBPACK_IMPORTED_MODULE_3__.current.ExportGraphToFile, null, [{
                type: "button",
                initialValue: _languages__WEBPACK_IMPORTED_MODULE_3__.current.ExportToJson,
                onclick: function () {
                    self.exportToFile("json");
                },
                extraAttrs: {
                    class: "btn btn-sm btn-primary m-1"
                },
                clickDismiss: true
            },
            {
                type: "button",
                initialValue: _languages__WEBPACK_IMPORTED_MODULE_3__.current.ExportToDimacs,
                onclick: function () {
                    self.exportToFile("dimacs");
                },
                extraAttrs: {
                    class: "btn btn-sm btn-primary"
                },
                clickDismiss: true
            }
        ], null, false);
    },
    makeExportTextModal: function () {
        _util_genericHelpers__WEBPACK_IMPORTED_MODULE_0__["default"].showFormModal(null, _languages__WEBPACK_IMPORTED_MODULE_3__.current.ExportGraphToText, null, [{
                type: "button",
                initialValue: _languages__WEBPACK_IMPORTED_MODULE_3__.current.ExportToJson,
                onclick: function () {
                    self.exportToText("json");
                },
                extraAttrs: {
                    class: "btn btn-sm btn-primary m-1",
                },
                clickDismiss: false
            },
            {
                type: "button",
                initialValue: _languages__WEBPACK_IMPORTED_MODULE_3__.current.ExportToDimacs,
                onclick: function () {
                    self.exportToText("dimacs");
                },
                extraAttrs: {
                    class: "btn btn-sm btn-primary",
                },
                clickDismiss: false
            },
            {
                type: "textarea", label: "", initialValue: "", extraAttrs: {
                    style: "height: 20vh;" +
                        " min-height:400px; white-space:pre; margin-top: 1rem;"
                },
                onclick: function () {
                    document.getElementById(exportedTextSelector).select();
                    document.execCommand("copy");
                },
                id: "exportedText"
            }
        ], function ($modal) {
            $modal.modal("hide");
        }, false);
    },
    exportToFile: function (format) {
        if (format.toLowerCase() === "json") {
            self.downloadFile("graph.json", self.getDataAsJSON());
        }
        else if (format.toLowerCase() === "dimacs") {
            self.downloadFile("graph.dimacs", self.getDataAsDIMACS());
        }
    },
    exportToText: function (format) {
        if (format.toLowerCase() === "json") {
            document.getElementById(exportedTextSelector).innerHTML = JSON.stringify(JSON.parse(self.getDataAsJSON()), null, 2);
        }
        else if (format.toLowerCase() === "dimacs") {
            document.getElementById(exportedTextSelector).innerHTML = self.getDataAsDIMACS();
        }
    },
    getDataAsJSON: function () {
        var d = _graphState__WEBPACK_IMPORTED_MODULE_2__["default"].getGraphData(_graphState__WEBPACK_IMPORTED_MODULE_2__["default"].graph);
        var nodeKeys = ["id", "label", "color", "x", "y"];
        var edgeKeys = ["from", "to", "weight", "color"];
        d.nodes = _util_genericHelpers__WEBPACK_IMPORTED_MODULE_0__["default"].keepOnlyKeys(d.nodes, nodeKeys);
        d.edges = _util_genericHelpers__WEBPACK_IMPORTED_MODULE_0__["default"].keepOnlyKeys(d.edges, edgeKeys);
        return JSON.stringify(d);
    },
    getDataAsDIMACS: function () {
        // If I add direction, DIMACS cannot be used, it only works for undirected graphs
        var g = _graphState__WEBPACK_IMPORTED_MODULE_2__["default"].getGraphData();
        var text = "c This Graph was generated and exported from Michael Dombrowski's Graph Playground " +
            "-- https://mikedombo.github.io/graphPlayground -- https://mikedombrowski.com\n";
        var adj = _graphState__WEBPACK_IMPORTED_MODULE_2__["default"].graph.getFullAdjacency();
        adj = adj.filter(function (v) {
            return v.length !== 0;
        });
        var nodes = [];
        adj.forEach(function (v, i) {
            if (nodes.indexOf(i + 1) === -1) {
                nodes.push(i + 1);
            }
            v.forEach(function (n) {
                if (nodes.indexOf(n + 1) === -1) {
                    nodes.push(n + 1);
                }
            });
        });
        var edgeCount = 0;
        var edgeText = "";
        g.edges.forEach(function (v) {
            edgeText += "e " + (v.from + 1) + " " + (v.to + 1) + "\n";
            edgeCount++;
        });
        edgeText = edgeText.trim();
        text += "p edge " + nodes.length + " " + edgeCount + "\n";
        return text + edgeText;
    },
    downloadFile: function (filename, text) {
        var blob = new Blob([text], { type: 'text/plain' });
        // @ts-ignore
        if (window.navigator.msSaveOrOpenBlob) {
            window.navigator.msSaveBlob(blob, filename);
        }
        else {
            var a = window.document.createElement('a');
            a.href = window.URL.createObjectURL(blob);
            a.download = filename;
            document.body.appendChild(a);
            a.click();
            document.body.removeChild(a);
            window.URL.revokeObjectURL(blob);
        }
    },
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (self);


/***/ })

}]);
//# sourceMappingURL=src_js_dataImportExport_ts-cffddee1b0af8821d44b.min.js.map