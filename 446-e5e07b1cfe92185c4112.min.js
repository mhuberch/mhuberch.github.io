"use strict";(self.webpackChunkgraphPlayground=self.webpackChunkgraphPlayground||[]).push([[446,866],{446:(e,t,r)=>{r.r(t),r.d(t,{default:()=>f});var o=r(485),n=r(641),u=r(866),i=r(536),a=r(669);const f=function(){function e(){}return e.graphPlainToGraphImmut=function(e){return new i.default(e.nodes,e.edges,e.directed,e.weighted)},e.checkColoringByString=function(e){void 0===e&&(e=a.default.graph);for(var t=e.getAllNodes(!0),r=[],o=[],u=[],i=e.getNumberOfNodes(),f=0;f<i;f++)for(var l=e.getNodeAdjacency(f),c=t[f].getAttribute("color"),s=0,d=l;s<d.length;s++){var g=d[s];n.default.compareColor(c,t[g].getAttribute("color"))&&g>f&&(r.push(f),o.push(g),u.push([f,g]))}return{from:r,to:o,num:r.length,confList:u}},e.colorNetworkGreedy=function(e,t){void 0===t&&(t=a.default.graph);var r=t.getNumberOfNodes(),n=(t.getAllNodes(!0),o.default.datasetToArray(t.getAllNodes(),"id")),u=t.getAllOutDegrees(),i=o.default.datasetToArray(t.getAllNodes(),"label"),f=[];if("1"===e)f=o.default.sort(n,(function(e,t){return i[e].toLowerCase().localeCompare(i[t].toLowerCase())}));else if("2"===e)f=o.default.sort(n,(function(e,t){return-1*i[e].toLowerCase().localeCompare(i[t].toLowerCase())}));else if("3"===e)f=o.default.sort(n,(function(e,t){return u[e]<u[t]?1:u[e]===u[t]?0:-1}));else if("4"===e){var l=t.getAllOutDegrees();f=o.default.sort(n,(function(e,t){return l[e]>l[t]?1:l[e]===l[t]?0:-1}))}else console.log("No valid orderingMode");for(var c=[],s={},d=0;d<r;d++)s[d]=-1;var g=t.getNodeAdjacency(f[0]),h={};for(var p in g)h[g[p]]=s[g[p]];c.push({nodeToColor:f[0],colorsOfNeighbors:h}),s[f[0]]=0;for(var v=1;v<r;v++){var m=t.getNodeAdjacency(f[v]),N={};for(var p in m)N[m[p]]=s[m[p]];c.push({nodeToColor:f[v],colorsOfNeighbors:N});for(var y={},b=0,A=0,E=Object.values(N);A<E.length;A++){var C=E[A];if(!(C<b))for(y[C]=!0;y[b];)b++}s[f[v]]=b}return{colors:s,chromaticNumber:o.default.max(o.default.flatten(s))+1,history:c}},e.colorNetworkWelsh=function(e){void 0===e&&(e=a.default.graph);for(var t=o.default.datasetToArray(e.getAllNodes(),"id"),r=e.getAllOutDegrees(),n=o.default.sort(t,(function(e,t){return r[e]<r[t]?1:r[e]===r[t]?0:-1})),u={},i=0;n.length>0;){var f=n.shift();u[f]=i;var l=[];l.push(f);for(var c=0;c<n.length;){for(var s=n[c],d=!1,g=0;g<l.length;g++)if(e.areAdjacent(s,l[g])){c++,d=!0;break}d||(u[s]=i,l.push(s),n.splice(c,1))}i++}return{colors:u,chromaticNumber:o.default.max(o.default.flatten(u))+1}},e.kColoringBruteForce=function(e,t){void 0===t&&(t=a.default.graph);var r=function(e,t,o,u){if(t===u.getNumberOfNodes())return n.default.checkColoringByNumber(o,u)?{kColorable:!0,color:o}:{kColorable:!1,color:[]};for(var i=1;i<=e;i++){o[t]=i;var a=r(e,t+1,o,u);if(a.kColorable)return a;o[t]=0}return{kColorable:!1,color:[]}},o=t.getNumberOfNodes(),u=new Array(o).fill(0),i=r(e,0,u,t);return i.kColorable?{kColor:e,kColorable:!0,color:i.color}:{kColor:e,kColorable:!1,color:[]}},e.connectedComponents=function(t){void 0===t&&(t=a.default.graph);for(var r={},o=0,n=function(e){r[e]=o},u=0;u<t.getNumberOfNodes();u++)u in r||(e.depthFirstSearch(u,t).forEach(n),o++);return{components:r,count:o}},e.depthFirstSearch=function(e,t){void 0===t&&(t=a.default.graph);var r=[],o=[];for(o.push(e);o.length>0;){var n=o.pop();r.includes(n)||(r.push(n),t.getNodeAdjacency(n).forEach((function(e){o.push(e)})))}return r},e.stronglyConnectedComponents=function(e){void 0===e&&(e=a.default.graph);for(var t=0,r={},o={},n=[],u={},i=0,f=function(a){if(r[a]=t,o[a]=t++,n.push(a),e.getNodeAdjacency(a).forEach((function(e){e in r?n.includes(e)&&(o[a]=Math.min(o[a],r[e])):(f(e),o[a]=Math.min(o[a],o[e]))})),o[a]===r[a]){var l=-1;if(n.length>0){do{l=n.pop(),u[l]=i}while(l!==a);i++}}},l=0;l<e.getNumberOfNodes();l++)l in r||f(l);return{components:u,count:i}},e.breadthFirstSearch=function(e,t,r){void 0===r&&(r=a.default.graph);var o=[],n=[],u={};n.push(e);for(var i=function(){var e=n.shift();o.includes(e)||(o.push(e),r.getNodeAdjacency(e).forEach((function(t){o.includes(t)||(u[t]=e,n.push(t))})))};n.length>0;)i();if(o.includes(t)){for(var f=[],l=t;l!==e;l=u[l])f.push(l);f.push(e),f.reverse();for(var c=0,s=0;s<f.length-1;s++)c+=r.getMinWeightEdgeBetween(f[s],f[s+1]);return{pathExists:!0,path:f,distance:f.length,weight:c}}return{pathExists:!1,path:[],distance:-1,weight:-1}},e.dijkstraSearch=function(e,t,r){if(void 0===r&&(r=a.default.graph),r.isDirected()||(r=r.asDirected(!0)),r.isWeighted()||(r=r.asWeighted()),void 0!==r.getAllEdges(!0).find((function(e){return e.getWeight()<0})))return!1;var o=new(function(){function e(){this._nodes=[]}return e.prototype.enqueue=function(e,t){this._nodes.push({key:t,priority:e}),this.sort()},e.prototype.dequeue=function(){return this._nodes.shift().key},e.prototype.sort=function(){this._nodes.sort((function(e,t){return e.priority-t.priority}))},e.prototype.isEmpty=function(){return!this._nodes.length},e}()),n={},u={},i=[];r.getAllNodes(!0).forEach((function(t){var r=1/0;t.getID()===e&&(r=0),n[t.getID()]=r,o.enqueue(r,t.getID()),u[t.getID()]=null}));for(var f=function(){var e=o.dequeue();if(e===t){for(i=[];null!==u[e];)i.push(e),e=u[e];return"break"}if(n[e]===1/0)return"continue";r.getNodeAdjacency(e).forEach((function(t){var i=n[e]+r.getMinWeightEdgeBetween(e,t);i<n[t]&&(n[t]=i,u[t]=e,o.enqueue(i,t))}))};!o.isEmpty()&&"break"!==f(););return i.push(e),i.reverse(),n[t]!==1/0?{pathExists:!0,path:i,distance:i.length,cost:n[t]}:{pathExists:!1,path:[],distance:-1,cost:0}},e.bellmanFord=function(e,t,r){void 0===r&&(r=a.default.graph);var o=[],n=[];r.getAllNodes(!0).forEach((function(e){o[e.getID()]=1/0,n[e.getID()]=null})),o[e]=0;for(var u=0;u<r.getNumberOfNodes()-1;u++)r.getAllEdges(!0).forEach((function(e){o[e.getFrom()]+e.getWeight()<o[e.getTo()]&&(o[e.getTo()]=o[e.getFrom()]+e.getWeight(),n[e.getTo()]=e.getFrom())}));var i=!1;if(r.getAllEdges(!0).forEach((function(e){o[e.getFrom()]+e.getWeight()<o[e.getTo()]&&(i=!0)})),o[t]!==1/0){for(var f=[t];!f.includes(e);)f.push(n[f.slice().pop()]);return f.reverse(),{pathExists:!0,path:f,distance:f.length,cost:o[t]}}return!i&&{pathExists:!1,path:[],distance:-1,cost:0}},e.fordFulkerson=function(t,r,o){if(void 0===o&&(o=a.default.graph),!o.isDirected())return!1;if(t===r)return!1;if(!e.breadthFirstSearch(t,r,o).pathExists)return!1;var n=(o=o.reduceMultiGraph((function(e,t){return e+t}),0)).getNumberOfNodes(),u=0,i=[],f=[],l={};o.getAllEdges(!0).forEach((function(e){l[e.getFrom()+"_"+e.getTo()]={from:e.getFrom(),to:e.getTo(),capacity:e.getWeight(),flow:0}}));for(var c=function(e,t){var r=e.split("_"),o=parseInt(r[0]),n=parseInt(r[1]);return t===o?n:o},s=function(e,t){var r=e.split("_");return t===parseInt(r[0])?l[e].flow:l[e].capacity-l[e].flow},d=function(e,t,r){var o=e.split("_");t===parseInt(o[0])?l[e].flow-=r:l[e].flow+=r},g=function(){i=[],f=[];for(var e=0;e<n;++e)i.push(!1),f.push(null);var u=[];for(u.push(t),i[t]=!0;u.length>0;){e=u.shift();for(var a=0,l=o.getNodeAdjacency(e);a<l.length;a++){var d=e+"_"+l[a],g=c(d,e);if(!i[g]&&s(d,g)>0){if(f[g]=d,i[g]=!0,g===r)return!0;u.push(g)}}}return!1};g();){for(var h=1/0,p=r;p!==t;p=c(f[p],p))h=Math.min(h,s(f[p],p));for(p=r;p!==t;p=c(f[p],p))d(f[p],p,h);u+=h}return{maxFlow:u,flowPath:function(){for(var e=[],t=0;t<n;t++)for(var r=0,u=o.getNodeAdjacency(t);r<u.length;r++){var i=t+"_"+u[r];l[i].flow>0&&e.push(l[i])}return e}()}},e.kruskal=function(e){void 0===e&&(e=a.default.graph),e.reduceMultiGraph();var t=e.getAllEdges(!0);t.sort((function(e,t){return e.getWeight()-t.getWeight()}));for(var r=[],o=new u.default(e.getNumberOfNodes());t.length>0&&r.length<e.getNumberOfNodes()-1;){var n=t.shift();o.connected(n.getFrom(),n.getTo())||(o.union(n.getFrom(),n.getTo()),r.push(n))}var i=r.reduce((function(e,t){return e+t.getWeight()}),0);return{mst:r,totalWeight:i}},e.topologicalSort=function(e){void 0===e&&(e=a.default.graph);for(var t=e.getFullAdjacency(),r=n.default.findVertexDegreesDirectional(t),o=[],u=e.getAllNodes(!0).filter((function(e){return 0===r[e.getID()].in})),i=e.getAllEdges(!0),f=function(){var n=u.pop();o.push(n);var a=t[n.getID()];i=i.filter((function(e){return e.getFrom()!==n.getID()||!a.includes(e.getTo())||(r[e.getTo()].in--,t[n.getID()]=t[n.getID()].filter((function(t){return t!==e.getTo()})),!1)})),a.forEach((function(t){0===r[t].in&&u.push(e.getNode(t,!0))}))};0!==u.length;)f();return i.length>0||o},e.isGraphCyclic=function(t){return void 0===t&&(t=a.default.graph),!0===e.topologicalSort(t)},e.directionalEulerian=function(e,t){var r=!0,o=-1;return e.forEach((function(e,n){e.in!==e.out&&(r=!1),e.in>0&&(-1===o&&(o=t[n]),o!==t[n]&&(r=!1))})),r},e.hasEulerianCircuit=function(e,t){if(0!==e.filter((function(e){return e%2!=0})).length)return!1;var r=!0,o=-1;return e.forEach((function(e,n){0!==e&&(-1===o&&(o=t[n]),o!==t[n]&&(r=!1))})),r},e}()},866:(e,t,r)=>{r.r(t),r.d(t,{default:()=>o});const o=function(){function e(e){this.id=[];for(var t=0;t<e;t++)this.id.push(t)}return e.prototype.union=function(e,t){var r=this.root(e),o=this.root(t);o!==r&&(this.id[o]=r)},e.prototype.root=function(e){for(;this.id[e]!==e;)e=this.id[e];return e},e.prototype.connected=function(e,t){return this.root(e)===this.root(t)},e}()}}]);
//# sourceMappingURL=446-e5e07b1cfe92185c4112.min.js.map